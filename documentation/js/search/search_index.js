var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.069,1,0.626]],["body/components/AppComponent.html",[0,0.131,1,1.147,2,1.453,3,0.518,4,0.436,5,1.306,6,1.306,7,1.16,8,1.306,9,0.436,10,2.912,11,0.699,12,1.587,13,1.636,14,3.095,15,1.306,16,2.051,17,1.664,18,3.648,19,1.636,20,4.901,21,1.636,22,4.488,23,0.699,24,1.139,25,1.664,26,0.699,27,0.047,28,1.306,29,1.029,30,0.91,31,3.648,32,0.8,33,3.582,34,1.842,35,2.352,36,1.003,37,2.682,38,0.876,39,0.8,40,3.648,41,2.141,42,2.141,43,0.518,44,0.286,45,1.658,46,1.16,47,2.141,48,2.912,49,3.582,50,3.582,51,2.912,52,1.842,53,3.582,54,1.47,55,1.47,56,1.453,57,1.47,58,3.582,59,3.582,60,3.582,61,1.029,62,1.289,63,1.453,64,1.306,65,1.873,66,1.306,67,1.306,68,0.699,69,0.605,70,1.636,71,0.8,72,1.16,73,1.636,74,0.699,75,1.306,76,0.8,77,1.029,78,1.306,79,0.699,80,1.306,81,0.8,82,0.8,83,1.306,84,1.306,85,1.306,86,0.036,87,0.036]],["title/modules/AppModule.html",[88,1.675,89,1.675]],["body/modules/AppModule.html",[1,1.253,3,0.471,4,0.396,9,0.396,17,1.054,27,0.047,38,1.122,39,0.727,41,2.523,42,1.945,43,0.61,44,0.26,45,1.507,46,1.054,61,0.935,68,1.027,71,1.176,74,1.027,76,1.176,79,1.027,81,1.176,82,1.176,86,0.034,87,0.034,88,1.945,89,3.472,90,1.706,91,1.945,92,3.809,93,3.809,94,3.432,95,2.245,96,2.646,97,2.646,98,2.646,99,2.646,100,2.759,101,4.279,102,3.432,103,2.646,104,2.245,105,3.255,106,3.432,107,3.432,108,4.222,109,3.432,110,2.245,111,3.255,112,3.255,113,3.255,114,2.245,115,4.222,116,3.255,117,2.245,118,2.646,119,1.945,120,2.646,121,4.222,122,3.255,123,4.222,124,3.255,125,2.646,126,1.945,127,3.432,128,2.646,129,1.945,130,3.255,131,3.255,132,2.245,133,3.255,134,2.646,135,4.222,136,3.255,137,4.222,138,3.255,139,4.222,140,4.222,141,3.255,142,3.255,143,3.255,144,3.255,145,2.646,146,3.432,147,3.255,148,1.945,149,1.187,150,3.255,151,1.336,152,0.727,153,3.255,154,3.255,155,3.255,156,3.255,157,3.255]],["title/modules/AppRoutingModule.html",[88,1.675,100,1.469]],["body/modules/AppRoutingModule.html",[0,0.129,3,0.594,4,0.5,9,0.5,27,0.047,38,1.073,39,0.918,43,0.594,44,0.328,68,0.952,69,0.694,74,0.952,79,0.952,86,0.039,87,0.039,90,2.153,95,2.833,100,2.557,106,3.339,107,3.966,118,3.339,119,2.455,120,3.339,125,3.339,126,2.455,127,3.966,128,3.339,129,2.455,158,4.108,159,4.108,160,4.879,161,3.11,162,2.833,163,1.902,164,5.384,165,4.108,166,4.879,167,4.108,168,4.108,169,4.108,170,4.108]],["title/interfaces/Game.html",[69,0.474,171,1.675]],["body/interfaces/Game.html",[3,0.266,4,0.224,9,0.416,11,0.998,23,0.359,26,1.053,27,0.048,28,2.085,30,1.382,32,1.234,36,1.009,43,0.266,46,1.69,69,0.811,77,1.451,86,0.023,87,0.023,149,2.053,151,2.044,171,1.682,172,1.839,173,1.495,174,1.839,175,1.495,176,1.495,177,0.809,178,2.289,179,3.116,180,2.289,181,3.116,182,3.006,183,3.116,184,3.116,185,2.289,186,2.644,187,1.942,188,3.116,189,2.289,190,3.116,191,3.116,192,3.116,193,3.116,194,3.116,195,2.289,196,3.116,197,2.289,198,2.816,199,2.289,200,2.289,201,1.942,202,2.289,203,3.116,204,2.289,205,2.453,206,1.839,207,1.942,208,3.81,209,2.648,210,2.074,211,2.074,212,1.476,213,1.942,214,1.596,215,1.587,216,1.839,217,2.816,218,2.648,219,2.289,220,3.019,221,2.289,222,2.644,223,2.601,224,1.839,225,2.289,226,1.942,227,2.289,228,1.942,229,1.942,230,2.709,231,1.839,232,0.912,233,3.544,234,3.116,235,2.009,236,2.453,237,1.839,238,2.816,239,2.816,240,3.834,241,2.816,242,1.839,243,2.291,244,2.289,245,1.839,246,2.285,247,2.289,248,1.839,249,1.303,250,2.289,251,1.839,252,2.289,253,2.289,254,1.839,255,2.289,256,3.116,257,1.839,258,2.018,259,2.289,260,1.839,261,2.289,262,1.839,263,1.839,264,1.839,265,1.942,266,2.605,267,1.839,268,2.289,269,2.289,270,1.839,271,2.816,272,2.816,273,2.816,274,3.834,275,2.816,276,1.682,277,1.942,278,2.816,279,2.289,280,2.291,281,2.289,282,1.839,283,1.303,284,1.839,285,2.289,286,2.289,287,2.289,288,1.839,289,2.289,290,2.289,291,2.289,292,2.289,293,2.289,294,2.289,295,1.839,296,2.644,297,3.834,298,1.942,299,2.289,300,1.839,301,3.544,302,2.289,303,1.839,304,2.289,305,1.839,306,2.289,307,1.839,308,2.289,309,1.839,310,1.942,311,1.942,312,2.289,313,1.495]],["title/components/GameComponentComponent.html",[0,0.069,68,0.547]],["body/components/GameComponentComponent.html",[0,0.084,1,0.275,2,0.663,3,0.178,4,0.15,5,0.746,6,0.45,7,0.399,8,0.45,9,0.15,11,0.596,12,0.399,13,1.687,14,0.85,15,0.45,16,1.579,17,0.663,19,0.746,21,0.746,23,0.512,24,0.519,25,0.849,26,0.82,27,0.048,28,1.716,29,1.049,30,1.128,32,1.114,35,1.774,36,0.661,38,0.845,39,0.275,43,0.178,44,0.308,45,0.571,46,0.988,47,0.737,52,1.864,54,1.498,55,1.498,56,1.439,57,1.498,61,0.354,62,0.877,63,0.663,64,0.45,65,1.113,66,0.45,67,0.45,68,0.596,69,0.892,70,0.746,71,0.275,72,0.399,73,0.746,74,0.241,75,0.45,76,0.275,77,1.162,78,0.45,79,0.241,80,0.45,81,0.275,82,0.275,83,0.45,84,0.45,85,0.45,86,0.016,87,0.016,129,3.007,148,1.567,149,1.579,151,1.389,152,0.815,162,0.85,163,0.947,177,0.588,186,2.105,187,1.411,201,2.105,205,1.214,208,2.105,209,1.913,210,1.076,211,1.076,212,1.072,213,1.411,214,1.276,215,1.162,218,0.646,220,1.567,223,2.004,230,2.027,246,1.072,258,0.947,266,1.223,276,1.223,280,1.824,296,2.518,298,2.896,314,4.09,315,0.85,316,2.046,317,1.6,318,3.052,319,2.105,320,2.132,321,1.663,322,3.385,323,2.132,324,2.311,325,2.622,326,2.622,327,3.385,328,3.052,329,3.052,330,3.052,331,3.052,332,2.046,333,3.052,334,3.052,335,3.052,336,1.002,337,1.567,338,4.442,339,1.233,340,1.808,341,2.328,342,1.663,343,1.233,344,2.046,345,2.046,346,1.233,347,1.233,348,2.334,349,2.046,350,1.233,351,1.233,352,2.046,353,1.233,354,3.651,355,2.023,356,2.046,357,2.046,358,1.233,359,2.181,360,2.046,361,1.663,362,1.233,363,1.233,364,1.233,365,1.233,366,2.046,367,2.046,368,1.002,369,1.567,370,3.651,371,1.233,372,1.663,373,1.072,374,2.046,375,2.481,376,1.233,377,1.233,378,2.253,379,2.714,380,1.808,381,2.622,382,2.046,383,1.663,384,1.808,385,1.663,386,3.064,387,2.046,388,1.002,389,1.663,390,1.663,391,1.567,392,1.233,393,2.046,394,2.622,395,1.233,396,2.046,397,1.233,398,1.223,399,1.233,400,1.002,401,1.233,402,0.85,403,0.646,404,0.85,405,1.233,406,1.233,407,1.002,408,1.233,409,1.002,410,1.233,411,0.737,412,0.85,413,1.233,414,1.002,415,1.233,416,2.027,417,1.233,418,3.651,419,2.622,420,1.663,421,2.046,422,1.233,423,1.233,424,1.233,425,1.233,426,1.233,427,1.233,428,1.233,429,1.233,430,1.233,431,1.233,432,1.233,433,4.047,434,2.518,435,4.047,436,1.233,437,3.385,438,2.622,439,1.233,440,1.663,441,1.233,442,1.002,443,1.233,444,1.411,445,1.233,446,1.233,447,1.233,448,1.233,449,1.233,450,1.233,451,2.046,452,2.046,453,3.052,454,2.046,455,2.046,456,1.233,457,1.233,458,1.233,459,1.233,460,1.233,461,1.233,462,1.233,463,1.002,464,1.002,465,1.233,466,1.233,467,1.233,468,1.233,469,1.233,470,1.233,471,1.233,472,1.233,473,1.233,474,1.233,475,2.046,476,2.046,477,1.223,478,2.046,479,2.481,480,1.233,481,1.233,482,2.046,483,2.896,484,2.986,485,2.714,486,1.824,487,2.334,488,2.311,489,1.79,490,1.223,491,1.233,492,2.714,493,2.311,494,2.89,495,1.233,496,2.046,497,3.052,498,1.233,499,4.047,500,1.233,501,1.233,502,1.233,503,2.132,504,1.411,505,1.824,506,2.046,507,2.046,508,2.046,509,1.777,510,1.774,511,2.004,512,1.233,513,2.334,514,1.69,515,1.944,516,1.233,517,1.913,518,2.181,519,2.056,520,1.6,521,2.046,522,2.105,523,1.233,524,2.181,525,0.85,526,2.481,527,2.046,528,1.411,529,1.411,530,1.663,531,1.223,532,1.663,533,2.622,534,0.85,535,1.663,536,1.824,537,1.808,538,1.233,539,1.233,540,2.046,541,1.374,542,2.518,543,1.411,544,1.774,545,1.808,546,3.052,547,1.663,548,2.046,549,1.002,550,1.233,551,2.046,552,2.046,553,2.132,554,1.002,555,1.002,556,1.663,557,1.233,558,2.046,559,1.233,560,1.233,561,1.233,562,0.947,563,1.233,564,1.374,565,1.072,566,1.233,567,1.233,568,3.052,569,1.808,570,1.233,571,1.233,572,1.233,573,1.233,574,1.233,575,0.85,576,1.002,577,1.233,578,2.622,579,1.233,580,1.233,581,1.002,582,1.233,583,1.663,584,1.002,585,1.233,586,2.046,587,0.737,588,0.737,589,1.411,590,1.002,591,1.663,592,2.046,593,1.223,594,0.646,595,1.233,596,1.233,597,1.233,598,1.233,599,2.622,600,1.233,601,1.233,602,1.233,603,1.002,604,1.233,605,1.233,606,1.374,607,1.233,608,1.233,609,1.233,610,1.233,611,1.233,612,1.233,613,1.002,614,1.663,615,1.233,616,1.233,617,1.233,618,2.046,619,1.233,620,0.646,621,1.002,622,1.233,623,1.002,624,1.233,625,1.002,626,1.002,627,1.233,628,1.233,629,2.105,630,1.233,631,0.85,632,1.233]],["title/classes/GameConcret.html",[44,0.224,398,1.675]],["body/classes/GameConcret.html",[3,0.237,4,0.2,9,0.387,11,0.959,23,0.32,24,0.654,26,1.067,27,0.048,28,2.081,29,1.195,30,1.411,32,1.232,36,0.973,38,0.32,43,0.237,44,0.254,45,1.67,46,1.652,69,0.862,72,0.835,77,1.295,86,0.021,87,0.021,149,2.012,151,2.219,152,0.366,163,0.759,177,0.74,178,2.095,179,1.334,180,2.095,181,2.932,182,1.132,183,2.932,184,2.932,185,2.095,186,2.487,187,1.777,188,2.932,189,2.095,190,2.932,191,2.932,192,2.932,193,2.932,194,1.334,195,2.095,196,2.932,197,2.095,199,2.095,200,2.095,201,1.777,202,2.095,203,2.932,204,2.095,205,2.404,207,1.777,208,3.729,209,2.645,210,1.985,211,1.985,212,1.351,213,1.777,214,1.553,215,1.523,218,2.699,220,3.016,221,2.095,222,2.487,223,2.578,225,2.095,226,1.777,227,2.095,228,1.777,229,2.703,230,2.576,232,0.835,233,2.932,234,2.932,235,1.351,236,2.535,243,1.54,244,2.095,246,2.486,247,2.095,249,1.193,250,2.095,252,2.095,253,2.095,255,2.095,256,2.932,258,2.276,259,2.095,261,2.095,265,1.777,266,2.487,268,2.095,269,2.095,280,1.54,281,2.095,283,1.193,285,2.095,286,2.095,287,2.095,289,2.095,290,2.095,291,2.095,292,2.932,293,2.095,294,1.334,296,1.777,298,1.132,299,2.095,301,3.382,302,2.095,304,2.095,306,2.095,308,2.587,310,1.777,311,1.777,312,2.095,313,3.187,317,1.668,373,1.351,378,1.058,390,2.095,391,1.902,398,1.54,440,2.095,633,0.98,634,1.334,635,3.183,636,3.183,637,3.183,638,1.641,639,2.577,640,2.577,641,2.577,642,1.641,643,2.577,644,1.641,645,1.641,646,1.641,647,1.641,648,2.577,649,1.641,650,1.641,651,1.641,652,1.641,653,1.641,654,1.641,655,1.641,656,1.641,657,1.641,658,1.641,659,1.641,660,1.641,661,1.641,662,1.641,663,1.641,664,1.641,665,1.641,666,1.641,667,1.641,668,1.641,669,1.641,670,1.641,671,1.641,672,1.641,673,1.641,674,2.095,675,1.334,676,1.777,677,2.577,678,2.095,679,3.183,680,1.641,681,1.641,682,2.577,683,1.641,684,2.577,685,2.095]],["title/injectables/GameOptionServiceService.html",[337,1.298,686,1.675]],["body/injectables/GameOptionServiceService.html",[0,0.126,3,0.507,4,0.427,9,0.427,11,0.865,12,1.435,18,2.852,23,0.685,24,1.125,26,0.685,27,0.047,29,1.272,30,1.125,32,1.084,34,2.093,36,0.685,38,0.865,39,0.784,43,0.507,44,0.28,46,1.136,69,0.749,86,0.036,87,0.036,149,1.615,151,1.44,152,0.989,177,1.272,210,1.44,211,1.44,214,1.008,215,1.394,228,3.055,235,2.322,249,2.05,337,2.05,341,3.039,373,2.322,403,2.672,411,3.047,477,2.647,686,2.647,687,3.509,688,4.145,689,2.852,690,3.601,691,4.43,692,4.365,693,5.099,694,4.365,695,3.601,696,2.647,697,3.601,698,4.43,699,4.43,700,4.43,701,3.509,702,4.43,703,4.43,704,3.601,705,4.43,706,3.509,707,4.145,708,4.43,709,3.509,710,3.601,711,3.509,712,2.42,713,3.509,714,3.509]],["title/classes/HtmlBalise.html",[44,0.224,369,1.675]],["body/classes/HtmlBalise.html",[3,0.479,4,0.403,9,0.403,11,0.647,23,0.647,24,1.084,25,1.073,26,0.647,27,0.048,29,0.952,30,0.841,32,1.056,34,1.753,35,1.737,43,0.479,44,0.422,45,2.571,62,0.952,86,0.034,87,0.034,148,1.98,149,1.82,151,1.753,152,1.056,177,1.227,214,1.227,215,1.227,232,1.383,249,1.977,276,1.98,369,3.258,372,3.842,373,2.238,411,3.087,434,3.563,463,2.694,464,3.472,554,2.694,555,2.694,576,2.694,633,1.98,692,3.472,715,2.694,716,3.314,717,3.314,718,5.509,719,5.509,720,4.992,721,4.992,722,3.314,723,3.314,724,3.472,725,3.314,726,3.314,727,4.432,728,4.3,729,3.314,730,3.472,731,3.314,732,3.314,733,3.314,734,3.314,735,3.314,736,3.314,737,3.314,738,3.314,739,3.314,740,3.314,741,3.314,742,3.314,743,3.314,744,3.314,745,3.314,746,3.314,747,3.314,748,3.314,749,3.314,750,4.992]],["title/classes/HtmlDisplay.html",[44,0.224,324,1.675]],["body/classes/HtmlDisplay.html",[0,0.08,3,0.321,4,0.27,7,1.758,9,0.27,11,0.942,14,2.903,23,0.433,24,0.822,26,1.065,27,0.048,28,2.082,29,0.93,30,0.822,32,1.128,34,1.728,35,1.698,36,0.966,38,0.632,43,0.321,44,0.403,46,1.684,62,1.61,63,1.799,86,0.026,87,0.026,149,1.917,151,0.91,152,0.724,163,1.772,175,2.633,176,2.633,177,0.93,205,1.948,207,2.903,210,2.032,211,1.919,212,2.755,214,1.343,215,1.343,219,3.421,230,2.755,236,1.698,258,1.5,266,2.515,276,2.515,323,2.633,324,2.515,373,1.698,375,2.633,391,2.515,414,2.633,434,1.53,479,2.633,489,2.457,511,2.58,631,2.234,633,1.325,695,2.633,712,1.53,724,2.633,727,4.274,751,1.803,752,2.633,753,3.239,754,3.239,755,3.239,756,3.239,757,3.239,758,3.239,759,3.239,760,3.239,761,3.239,762,3.239,763,2.218,764,5.353,765,2.633,766,3.239,767,4.209,768,2.218,769,4.209,770,3.239,771,2.633,772,3.239,773,4.209,774,4.209,775,2.218,776,3.239,777,5.258,778,3.239,779,4.209,780,2.234,781,3.239,782,3.239,783,3.239,784,3.239,785,3.239,786,4.209,787,3.239,788,3.239,789,3.239,790,3.239,791,2.218,792,2.633,793,3.239,794,2.218,795,3.239,796,2.633,797,3.239,798,3.239,799,2.218,800,3.239,801,3.239,802,2.218,803,3.239,804,2.234,805,2.633,806,2.218,807,2.218,808,1.803,809,2.218,810,2.218,811,2.218,812,2.218,813,2.218,814,2.218,815,4.949,816,2.218,817,2.218,818,2.218,819,2.218,820,2.218,821,3.239]],["title/components/InformationButtonComponent.html",[0,0.069,71,0.626]],["body/components/InformationButtonComponent.html",[0,0.129,1,0.762,2,1.41,3,0.493,4,0.415,5,1.244,6,1.244,7,1.105,8,1.244,9,0.415,11,0.666,12,1.105,13,1.244,15,1.244,16,2.035,17,1.41,19,1.587,21,1.587,23,0.666,25,1.105,26,0.666,27,0.047,32,0.972,34,2.072,36,0.849,37,2.601,38,0.666,39,0.762,43,0.493,44,0.272,56,1.105,61,0.98,62,1.25,63,1.41,64,1.244,65,1.84,66,1.244,67,1.244,68,0.666,69,0.577,70,1.587,71,1.127,72,1.808,73,1.587,74,0.666,75,1.244,76,0.762,77,0.98,78,1.244,79,0.666,80,1.244,81,0.762,82,0.762,83,1.244,84,1.244,85,1.244,86,0.035,87,0.035,117,3.305,152,0.762,177,1.25,214,0.98,215,0.98,232,1.41,359,3.016,416,1.789,509,1.967,519,1.58,528,2.354,532,2.774,536,1.401,562,1.58,564,1.789,565,1.789,594,1.789,696,3.016,822,3.896,823,2.354,824,4.352,825,4.352,826,4.352,827,3.896,828,3.538,829,4.103,830,3.538,831,4.238,832,3.896,833,2.774,834,4.103,835,3.538,836,3.002,837,2.774,838,3.538,839,2.774,840,3.538,841,3.413,842,3.413,843,3.413,844,2.774]],["title/components/MainMenuComponent.html",[0,0.069,74,0.547]],["body/components/MainMenuComponent.html",[0,0.107,1,0.365,2,0.831,3,0.236,4,0.199,5,0.595,6,0.595,7,0.529,8,0.595,9,0.588,11,0.619,12,1.59,13,1.426,15,0.595,16,1.727,17,1.165,19,0.936,21,0.936,23,0.763,24,0.913,25,0.529,26,0.972,27,0.048,28,1.761,29,1.387,30,1.226,32,1.126,34,1.053,35,1.345,36,0.763,37,2.149,38,0.702,39,0.365,40,3.178,41,0.975,42,0.975,43,0.236,44,0.13,46,0.831,47,0.975,48,1.327,51,1.327,52,1.053,54,0.67,55,0.67,56,1.499,57,0.67,61,0.469,62,0.737,63,0.831,64,1.157,65,1.311,66,0.595,67,0.595,68,0.318,69,0.9,70,0.936,71,0.365,72,1.027,73,0.936,74,0.702,75,0.595,76,0.365,77,0.737,78,0.595,79,0.318,80,0.595,81,0.365,82,0.365,83,0.595,84,0.595,85,0.595,86,0.021,87,0.021,119,3.045,148,0.975,149,1.514,152,0.873,163,2.401,177,0.737,205,1.665,209,1.885,210,1.302,211,1.302,214,1.123,215,1.192,218,2.049,220,1.534,222,2.188,223,1.665,229,2.188,232,1.165,235,2.642,236,1.345,246,1.662,249,1.188,258,1.665,277,1.125,283,1.665,310,1.77,311,1.77,317,1.345,319,2.188,336,1.327,337,1.665,340,1.77,341,2.531,342,2.086,348,2.697,355,2.149,359,2.688,378,1.9,379,2.149,384,1.125,385,1.327,391,1.534,402,1.125,403,1.662,404,1.125,411,0.975,412,2.48,416,1.662,444,1.125,477,2.481,483,2.188,485,2.481,486,0.975,488,1.896,489,1.81,490,1.534,492,1.896,493,1.896,494,1.534,503,2.923,504,2.48,509,1.476,513,1.125,514,0.755,515,0.755,517,1.662,518,0.975,519,1.468,520,0.855,525,1.125,531,0.975,534,1.125,536,1.302,541,1.345,544,1.345,549,1.327,562,1.468,564,1.345,565,1.345,569,1.125,575,1.77,587,1.896,588,0.975,589,1.125,593,1.534,594,0.855,606,1.345,620,1.885,674,2.086,676,1.125,678,2.579,690,2.086,696,1.534,697,2.086,707,2.086,710,2.086,728,2.086,730,2.086,765,2.086,771,2.923,780,2.48,792,2.086,804,1.125,836,1.77,844,1.327,845,4.142,846,1.327,847,3.596,848,3.172,849,2.567,850,3.91,851,3.172,852,2.567,853,2.086,854,3.596,855,2.923,856,1.632,857,1.632,858,1.632,859,4.152,860,2.567,861,1.632,862,2.086,863,2.086,864,2.923,865,2.086,866,2.086,867,2.923,868,2.086,869,2.086,870,2.48,871,2.086,872,2.086,873,2.086,874,2.086,875,2.086,876,2.086,877,1.632,878,2.579,879,2.567,880,1.632,881,2.567,882,2.567,883,4.343,884,2.567,885,1.632,886,2.567,887,2.567,888,1.632,889,2.567,890,1.632,891,1.632,892,1.632,893,1.632,894,1.632,895,2.086,896,1.632,897,1.632,898,2.567,899,1.632,900,1.632,901,2.567,902,2.567,903,2.567,904,3.172,905,1.632,906,1.632,907,1.327,908,1.327,909,1.327,910,1.327,911,1.327,912,1.327,913,1.327,914,1.327,915,1.327,916,1.327,917,1.327,918,1.327,919,2.086,920,1.632,921,1.632,922,2.567,923,2.567,924,3.178,925,2.567,926,2.567,927,1.632,928,1.632,929,1.632,930,1.632,931,1.632,932,1.632,933,1.632,934,1.632,935,1.632,936,1.632,937,3.172,938,2.086,939,1.632,940,1.327,941,1.327,942,1.327,943,1.327,944,2.086,945,1.327,946,1.327,947,1.327,948,1.327,949,1.632,950,1.632,951,1.632,952,1.327,953,1.632,954,1.632,955,1.632,956,1.632,957,1.327,958,1.632,959,1.896,960,2.567,961,1.632,962,2.567,963,1.632,964,1.632,965,1.632,966,2.567,967,2.567,968,2.567,969,5.188,970,2.567,971,2.567,972,2.567,973,2.567,974,2.567,975,2.567,976,2.567,977,1.632,978,1.632,979,1.125,980,1.77,981,1.632,982,1.327,983,1.327,984,2.086,985,1.327,986,1.327,987,1.125,988,1.327,989,1.327,990,1.327,991,1.327,992,1.327,993,1.125,994,1.77,995,1.327,996,1.632,997,1.632,998,1.632]],["title/components/PlayerCardComponent.html",[0,0.069,76,0.626]],["body/components/PlayerCardComponent.html",[0,0.125,1,0.692,2,1.325,3,0.448,4,0.377,5,1.13,6,1.13,7,1.004,8,1.13,9,0.377,11,0.605,12,1.004,13,1.669,15,1.13,16,2.002,17,1.325,19,1.491,21,1.491,23,0.605,25,1.004,26,0.605,27,0.047,29,0.89,30,1.162,32,0.692,36,0.95,38,0.605,39,0.692,43,0.448,44,0.247,52,1.997,54,1.679,55,1.679,56,1.482,57,1.679,61,0.89,62,1.175,63,1.325,64,1.13,65,1.774,66,1.13,67,1.13,68,0.605,69,0.524,70,1.491,71,0.692,72,1.004,73,1.491,74,0.605,75,1.13,76,1.087,77,1.617,78,1.13,79,0.605,80,1.13,81,0.692,82,0.692,83,1.13,84,1.13,85,1.13,86,0.033,87,0.033,132,2.82,223,1.893,232,1.325,243,2.444,280,3.104,378,2.36,484,2.138,485,2.444,486,1.853,487,2.138,488,1.853,489,1.435,490,1.853,492,1.853,493,1.853,494,1.853,509,1.679,510,2.143,511,1.435,514,1.893,515,2.118,517,2.143,518,1.853,519,2.341,520,2.143,524,2.444,526,4.112,531,2.735,536,1.878,537,2.138,541,2.398,542,2.138,544,2.55,545,3.156,584,3.324,590,3.324,591,2.52,594,1.625,606,2.398,613,2.52,620,1.625,980,2.138,982,2.52,987,2.138,999,3.324,1000,2.52,1001,4.09,1002,4.576,1003,4.09,1004,3.324,1005,3.1,1006,3.1,1007,3.1,1008,3.1,1009,3.1,1010,3.1,1011,3.1,1012,3.1,1013,2.52,1014,3.1,1015,3.1,1016,4.09,1017,3.1,1018,3.1,1019,2.52,1020,3.1,1021,3.1,1022,3.1,1023,3.1,1024,3.1,1025,3.1,1026,3.1,1027,3.1]],["title/components/SettingsComponentComponent.html",[0,0.069,79,0.547]],["body/components/SettingsComponentComponent.html",[0,0.108,1,0.368,2,0.837,3,0.238,4,0.2,5,0.6,6,0.6,7,0.533,8,0.6,9,0.565,11,0.766,12,0.533,13,1.819,15,0.6,16,1.732,17,0.837,19,0.942,21,0.942,23,0.766,24,0.656,25,0.533,26,0.986,27,0.048,28,1.692,29,1.364,30,1.319,32,1.081,36,0.906,38,0.504,39,0.368,43,0.238,44,0.131,45,1.477,46,1.033,47,0.984,52,1.612,54,1.31,55,1.31,56,1.171,57,1.31,61,0.473,62,0.742,63,0.837,64,0.6,65,1.318,66,0.6,67,0.6,68,0.321,69,0.871,70,0.942,71,0.368,72,0.533,73,0.942,74,0.321,75,0.6,76,0.368,77,0.916,78,0.6,79,0.705,80,1.645,81,0.368,82,0.368,83,0.6,84,0.6,85,0.6,86,0.021,87,0.021,126,2.94,152,0.368,163,2.241,177,0.742,205,1.196,209,1.894,210,1.483,211,1.483,214,1.128,215,1.128,218,2.647,223,2.31,226,1.782,230,0.863,232,0.837,235,2.537,236,1.355,243,1.545,246,1.672,249,1.196,258,1.818,277,1.136,283,1.196,315,1.136,320,2.594,321,2.101,337,1.196,340,1.136,341,2.284,348,3.201,355,1.545,368,1.339,378,2.177,379,2.49,380,2.2,384,1.782,386,3.339,388,1.339,402,1.136,403,1.672,404,1.136,416,1.355,420,2.938,442,3.192,444,1.136,483,3.339,484,3.275,485,3.17,486,2.773,487,2.708,488,2.604,489,2.148,490,0.984,492,2.697,493,2.49,494,2.982,504,1.782,505,1.545,509,1.711,510,1.355,511,0.762,513,2.492,514,1.477,515,1.196,517,1.672,518,2.347,519,1.929,520,1.672,522,2.2,529,1.136,534,1.136,535,2.101,536,1.31,541,1.355,542,2.492,543,1.136,544,1.672,545,1.136,547,2.101,553,2.101,562,1.673,564,1.672,565,1.672,569,1.782,587,2.604,588,1.907,589,1.782,593,2.347,594,0.863,606,1.355,620,1.355,629,1.136,631,1.136,675,1.339,676,1.136,704,2.101,752,2.101,804,1.136,853,2.101,855,2.938,876,2.101,878,3.542,895,2.101,907,1.339,908,1.339,909,1.339,910,1.339,911,1.339,912,1.339,913,1.339,914,2.101,915,1.339,916,1.339,917,1.339,918,1.339,919,2.101,924,1.339,938,1.339,940,1.339,941,1.339,942,1.339,943,1.339,944,2.101,945,1.339,946,1.339,947,1.339,948,1.339,952,1.339,957,1.339,959,1.907,979,1.136,980,2.708,983,2.101,984,2.594,985,1.339,986,1.339,987,1.782,988,1.339,989,1.339,990,1.339,991,1.339,992,1.339,993,2.874,994,2.492,995,3.542,1013,1.339,1028,4,1029,2.585,1030,3.191,1031,2.585,1032,2.585,1033,2.585,1034,1.647,1035,3.191,1036,1.647,1037,1.647,1038,2.585,1039,1.647,1040,2.101,1041,2.585,1042,1.647,1043,2.585,1044,3.614,1045,1.647,1046,2.585,1047,1.647,1048,2.585,1049,1.647,1050,1.647,1051,1.647,1052,2.585,1053,1.647,1054,2.585,1055,2.585,1056,1.647,1057,1.647,1058,1.647,1059,2.585,1060,1.647,1061,1.647,1062,1.647,1063,1.647,1064,1.647,1065,1.647,1066,1.647,1067,1.339,1068,2.585,1069,1.647,1070,1.647,1071,1.647,1072,1.647,1073,1.647,1074,1.647,1075,2.585,1076,1.647,1077,2.585,1078,2.585,1079,2.585,1080,2.585,1081,2.585,1082,1.647,1083,1.647,1084,1.647,1085,1.647,1086,2.585,1087,1.647,1088,1.647,1089,1.647,1090,1.647,1091,1.647,1092,1.647,1093,1.647,1094,1.647,1095,1.647,1096,1.647,1097,1.647,1098,1.647,1099,1.339,1100,1.647,1101,2.585,1102,1.647,1103,1.647,1104,1.647,1105,1.647,1106,1.647,1107,1.647,1108,2.585,1109,1.647,1110,2.585,1111,2.585,1112,1.647,1113,1.647,1114,1.647,1115,1.647,1116,1.647,1117,1.647]],["title/components/StartButtonComponent.html",[0,0.069,81,0.626]],["body/components/StartButtonComponent.html",[0,0.135,1,0.548,2,1.128,3,0.354,4,0.298,5,0.894,6,0.894,7,0.794,8,0.894,9,0.298,11,0.479,12,0.794,13,0.894,15,0.894,16,1.913,17,1.128,19,1.27,21,1.27,23,0.479,24,0.884,25,0.794,26,0.944,27,0.048,28,1.913,29,1.429,30,1.182,32,1.136,34,2.234,36,0.971,38,0.479,39,0.548,43,0.354,44,0.196,52,1.429,54,1.006,55,1.006,56,1.675,57,1.006,61,0.704,62,1,63,1.128,64,1.476,65,1.607,66,0.894,67,0.894,68,0.479,69,0.414,70,1.27,71,0.548,72,0.794,73,1.27,74,0.479,75,0.894,76,0.548,77,0.704,78,0.894,79,0.479,80,0.894,81,0.985,82,0.548,83,0.894,84,0.894,85,0.894,86,0.028,87,0.028,114,3.567,152,0.548,177,1,214,1,215,1.163,232,1.128,283,2.519,317,1.825,319,2.793,341,1.825,359,3.252,378,1.006,412,3.04,416,1.285,489,1.612,505,2.081,509,2.123,510,1.285,511,2.303,514,1.135,515,1.135,517,1.825,519,2.041,520,1.825,524,1.465,525,1.691,531,2.081,536,1.81,541,1.285,543,2.401,556,4.264,562,1.612,564,1.285,565,1.285,575,2.401,581,1.993,583,1.993,603,1.993,606,2.535,625,1.993,626,1.993,629,1.691,694,4.264,696,2.634,823,1.691,827,3.292,828,2.831,829,3.584,830,2.831,831,3.785,832,3.292,833,1.993,834,3.584,835,2.831,836,2.401,837,1.993,838,2.831,839,1.993,862,2.831,863,2.831,864,3.584,865,2.831,866,2.831,867,3.584,868,2.831,869,2.831,870,2.401,871,2.831,872,2.831,873,2.831,874,2.831,875,2.831,959,1.465,1004,2.831,1099,1.993,1118,4.205,1119,3.482,1120,3.482,1121,3.482,1122,4.976,1123,4.049,1124,4.049,1125,4.049,1126,5.246,1127,2.452,1128,2.452,1129,2.452,1130,3.482,1131,2.452,1132,2.452,1133,2.452,1134,2.452,1135,3.482,1136,2.452,1137,2.452,1138,3.482,1139,2.452,1140,3.482,1141,2.452,1142,2.452,1143,2.452,1144,2.452]],["title/components/TitleComponent.html",[0,0.069,82,0.626]],["body/components/TitleComponent.html",[0,0.127,1,0.727,2,1.367,3,0.471,4,0.396,5,1.187,6,1.187,7,1.054,8,1.187,9,0.396,11,0.635,12,1.518,13,1.187,15,1.187,16,2.019,17,1.367,19,1.539,21,1.539,25,1.664,27,0.047,36,0.824,37,2.523,38,0.915,39,0.727,43,0.471,44,0.26,52,2.035,54,1.733,56,1.054,61,0.935,62,1.213,63,1.367,64,1.187,65,1.808,66,1.187,67,1.187,68,0.635,69,0.55,70,1.539,71,0.727,72,1.054,73,1.539,74,0.635,75,1.187,76,0.727,77,0.935,78,1.187,79,0.635,80,1.187,81,0.727,82,1.107,83,1.709,84,1.187,85,1.187,86,0.034,87,0.034,232,1.367,279,3.432,378,2.334,477,2.523,505,2.523,509,1.733,510,2.213,511,2.437,514,1.954,515,1.954,522,2.912,524,2.523,528,2.245,529,3.419,530,3.432,536,1.733,537,2.245,544,1.706,562,1.954,587,2.523,588,1.945,593,1.945,614,2.646,620,2.213,621,3.432,623,2.646,959,1.945,979,2.245,993,2.245,994,2.912,1019,2.646,1145,2.646,1146,4.222,1147,4.686,1148,4.222,1149,4.958,1150,3.255,1151,3.255,1152,3.255,1153,3.255,1154,3.255,1155,3.255,1156,3.255,1157,3.255,1158,3.255,1159,3.255,1160,4.222,1161,3.255,1162,3.255,1163,4.222,1164,3.255,1165,3.255,1166,3.255,1167,3.255,1168,3.255,1169,3.255,1170,3.255,1171,3.255,1172,3.255,1173,3.255,1174,3.255,1175,3.255,1176,3.255,1177,3.255,1178,3.255,1179,3.255,1180,3.255,1181,3.255,1182,3.255,1183,3.255,1184,3.255,1185,3.255,1186,3.255,1187,3.255,1188,3.255,1189,3.255,1190,3.255]],["title/coverage.html",[1191,3.107]],["body/coverage.html",[0,0.138,1,0.845,9,0.46,10,3.077,26,0.739,27,0.047,44,0.442,68,0.739,69,0.64,71,0.845,74,0.739,76,0.845,79,0.739,81,0.845,82,0.845,86,0.037,87,0.037,114,2.61,117,2.61,119,2.262,126,2.262,129,2.262,132,2.61,152,0.845,171,2.262,173,3.077,314,3.077,315,3.202,324,2.262,337,1.752,361,3.077,369,2.262,386,4.004,398,2.262,400,3.077,403,1.984,407,3.077,409,3.077,634,3.077,686,2.262,688,3.077,689,3.077,715,3.077,751,3.077,822,3.077,823,3.202,845,3.077,846,3.077,999,3.077,1000,3.077,1028,3.077,1118,3.077,1145,3.077,1191,3.077,1192,3.785,1193,3.785,1194,4.644,1195,3.785,1196,4.644,1197,3.785,1198,3.785,1199,3.785,1200,4.644,1201,3.785,1202,3.785,1203,3.785,1204,3.785,1205,4.644,1206,3.785,1207,3.785,1208,3.785,1209,3.785,1210,3.785,1211,3.785,1212,3.785,1213,3.785]],["title/dependencies.html",[91,2.014,1214,1.616]],["body/dependencies.html",[27,0.047,39,0.927,41,2.934,42,2.481,55,1.704,56,1.345,57,1.704,86,0.04,87,0.04,91,2.481,109,3.991,110,3.386,134,3.375,145,3.375,146,3.375,162,2.863,712,2.863,1215,4.152,1216,5.722,1217,4.152,1218,4.909,1219,4.152,1220,4.152,1221,4.152,1222,4.152,1223,4.152,1224,4.152,1225,4.152,1226,4.152,1227,4.152,1228,4.152,1229,4.152,1230,4.152,1231,4.152,1232,4.152]],["title/index.html",[23,0.457,1233,2.343,1234,2.343]],["body/index.html",[0,0.126,4,0.476,27,0.038,31,3.178,36,0.763,86,0.038,87,0.038,104,2.696,152,0.873,182,3.802,212,2.049,265,2.696,283,1.809,317,2.049,355,2.336,685,3.178,780,3.514,796,3.178,805,3.178,808,4.142,840,4.142,870,2.696,1040,3.178,1214,2.696,1235,4.736,1236,5.095,1237,3.178,1238,3.909,1239,3.909,1240,4.736,1241,5.424,1242,5.579,1243,3.909,1244,3.909,1245,3.909,1246,3.909,1247,3.909,1248,3.909,1249,3.909,1250,3.909,1251,3.909,1252,3.909,1253,5.095,1254,3.909,1255,5.296,1256,3.909,1257,3.909,1258,3.909,1259,3.909,1260,4.736,1261,4.736,1262,5.296,1263,4.736,1264,4.736,1265,3.909,1266,3.909,1267,3.909,1268,3.909,1269,4.736,1270,3.909,1271,3.909,1272,3.909,1273,3.909,1274,3.909,1275,2.696]],["title/modules.html",[90,2.003]],["body/modules.html",[27,0.041,86,0.041,87,0.041,89,2.688,90,2.358,100,2.358,110,3.103,389,3.657,1276,4.499,1277,4.499,1278,5.144,1279,4.499]],["title/overview.html",[1275,2.636]],["body/overview.html",[1,1.248,2,1.277,27,0.046,61,1.132,68,0.998,71,1.142,74,0.998,76,1.142,79,0.998,81,1.142,82,1.142,86,0.038,87,0.038,88,2.356,89,3.509,90,2.066,91,2.356,92,3.205,93,3.205,94,3.205,95,2.719,96,3.205,97,3.205,98,3.205,99,3.205,100,2.68,101,4.157,102,3.87,103,3.205,104,2.719,161,2.356,171,2.356,379,2.845,380,2.719,383,3.205,633,2.356,686,2.356,1067,3.205,1275,2.719,1280,3.943]],["title/properties.html",[24,0.856,1214,1.616]],["body/properties.html",[24,1.154,27,0.044,86,0.042,87,0.042,1237,3.693,1281,4.544]],["title/routes.html",[161,2.284]],["body/routes.html",[27,0.042,86,0.042,87,0.042,161,2.729]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":378,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["0.0.0",{"_index":1281,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1178,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.03em",{"_index":1158,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.05em",{"_index":1186,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.06em",{"_index":1167,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.14.2",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":1161,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.1px",{"_index":601,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.25em",{"_index":627,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.2em",{"_index":1163,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.2px",{"_index":602,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.35",{"_index":1018,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.350s",{"_index":1112,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.3em",{"_index":1188,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.3rem",{"_index":584,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.3s",{"_index":591,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5",{"_index":1169,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.5em",{"_index":613,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5px",{"_index":988,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8em",{"_index":986,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8rem",{"_index":1008,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.8s",{"_index":1010,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["000000",{"_index":625,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["001546",{"_index":1027,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["00a1ef",{"_index":1172,"title":{},"body":{"components/TitleComponent.html":{}}}],["0fa",{"_index":526,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0ff",{"_index":619,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0px",{"_index":1016,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1",{"_index":379,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["1.1.13",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1026,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1.2px",{"_index":540,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.4em",{"_index":1093,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.5em",{"_index":516,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.6em",{"_index":612,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.7rem",{"_index":1139,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["1.8em",{"_index":551,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1/1",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":512,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10",{"_index":444,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["100",{"_index":386,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":566,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["102px",{"_index":1024,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["10abff",{"_index":630,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10px",{"_index":518,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11",{"_index":561,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1125a4",{"_index":990,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11em",{"_index":1153,"title":{},"body":{"components/TitleComponent.html":{}}}],["12/12",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":527,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["12px",{"_index":1135,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["13px",{"_index":1102,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15",{"_index":1052,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15.0.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["15.0.1",{"_index":1238,"title":{},"body":{"index.html":{}}}],["15/15",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":577,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["151px",{"_index":1025,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["15deg",{"_index":1155,"title":{},"body":{"components/TitleComponent.html":{}}}],["15px",{"_index":980,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["16.2.12",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":1014,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["165ff3",{"_index":1166,"title":{},"body":{"components/TitleComponent.html":{}}}],["17.0.7",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["170",{"_index":600,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1b35d3",{"_index":985,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["1beabd",{"_index":618,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1em",{"_index":533,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1fr",{"_index":502,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1px",{"_index":531,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["2",{"_index":380,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":521,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2/2",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":384,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["20/20",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":624,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["20125f",{"_index":621,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["20px",{"_index":525,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["210px",{"_index":578,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["21px",{"_index":1020,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["25",{"_index":979,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["255",{"_index":599,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["25px",{"_index":547,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["27/27",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["281775",{"_index":1187,"title":{},"body":{"components/TitleComponent.html":{}}}],["29/29",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":539,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2p",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["2px",{"_index":543,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["3",{"_index":381,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3.2em",{"_index":605,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3/3",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":523,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["300px",{"_index":559,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30px",{"_index":553,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["3146d3",{"_index":842,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["3351ff",{"_index":1098,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["35",{"_index":1173,"title":{},"body":{"components/TitleComponent.html":{}}}],["35em",{"_index":609,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["35px",{"_index":981,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["38/38",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":1196,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":1185,"title":{},"body":{"components/TitleComponent.html":{}}}],["3px",{"_index":629,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["4",{"_index":1280,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":385,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["40px",{"_index":1097,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["42px",{"_index":1021,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["4px",{"_index":1137,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["5",{"_index":382,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["5.5em",{"_index":1184,"title":{},"body":{"components/TitleComponent.html":{}}}],["50",{"_index":620,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["50px",{"_index":583,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["55",{"_index":1175,"title":{},"body":{"components/TitleComponent.html":{}}}],["5em",{"_index":1165,"title":{},"body":{"components/TitleComponent.html":{}}}],["5px",{"_index":987,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["60",{"_index":1115,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["6px",{"_index":603,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["7",{"_index":1067,"title":{},"body":{"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["7.5.0",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["730505",{"_index":573,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["75",{"_index":1177,"title":{},"body":{"components/TitleComponent.html":{}}}],["797777",{"_index":570,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["7deg",{"_index":1190,"title":{},"body":{"components/TitleComponent.html":{}}}],["7px",{"_index":545,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["8",{"_index":383,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["8.0.0",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1086,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["800px",{"_index":550,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["80px",{"_index":549,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["82",{"_index":1084,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["82px",{"_index":1022,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["8313e7",{"_index":1174,"title":{},"body":{"components/TitleComponent.html":{}}}],["8ba2d0",{"_index":1162,"title":{},"body":{"components/TitleComponent.html":{}}}],["8d8d8d",{"_index":632,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["9/9",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":567,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["92px",{"_index":1023,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["94a0b9",{"_index":1179,"title":{},"body":{"components/TitleComponent.html":{}}}],["95",{"_index":580,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["__input",{"_index":610,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ability",{"_index":241,"title":{},"body":{"interfaces/Game.html":{}}}],["absolute",{"_index":993,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["active",{"_index":569,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["actual",{"_index":496,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["actual_component",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["actualfunctioninbacklog",{"_index":635,"title":{},"body":{"classes/GameConcret.html":{}}}],["actuallog",{"_index":222,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["actualtask",{"_index":508,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["add",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"index.html":{}}}],["addclass",{"_index":757,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addclass(id",{"_index":766,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["added",{"_index":764,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement",{"_index":758,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement(type",{"_index":772,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["adding",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["additionalvalue",{"_index":773,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue[key",{"_index":816,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addnote",{"_index":178,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addnote(value",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addplayername",{"_index":1031,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addplayername(event",{"_index":1034,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["adds",{"_index":776,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext",{"_index":759,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext(text",{"_index":790,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["afterviewinit",{"_index":318,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["align",{"_index":492,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["allows",{"_index":695,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{}}}],["already",{"_index":898,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["andlocations",{"_index":374,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["angular",{"_index":808,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["angular/animations",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":162,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"dependencies.html":{}}}],["angular/router/upgrade",{"_index":900,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["angular/src/tools/esbuild/javascript",{"_index":810,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["angular/upgrade",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":1110,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["another",{"_index":694,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/StartButtonComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["app.component",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1105,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["application",{"_index":1247,"title":{},"body":{"index.html":{}}}],["applied",{"_index":648,"title":{},"body":{"classes/GameConcret.html":{}}}],["appmodule",{"_index":89,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":100,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":491,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["artifacts",{"_index":1256,"title":{},"body":{"index.html":{}}}],["associated",{"_index":643,"title":{},"body":{"classes/GameConcret.html":{}}}],["auto",{"_index":586,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["automatically",{"_index":1248,"title":{},"body":{"index.html":{}}}],["available",{"_index":389,"title":{},"body":{"components/GameComponentComponent.html":{},"modules.html":{}}}],["average",{"_index":1080,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["averagedecorator",{"_index":407,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["averagedecorator(this.game",{"_index":423,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["b0b0b0",{"_index":1015,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["back",{"_index":352,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["background",{"_index":536,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["background.jpg",{"_index":1007,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["backlog",{"_index":209,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata",{"_index":246,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata[\"boutton",{"_index":453,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogdata[data[key",{"_index":452,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogvalue",{"_index":322,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backup",{"_index":234,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["balise",{"_index":323,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["bare",{"_index":393,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["based",{"_index":752,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["before",{"_index":872,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["behaviorsubject",{"_index":711,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["behaviorsubject(null",{"_index":705,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["being",{"_index":639,"title":{},"body":{"classes/GameConcret.html":{}}}],["belongs",{"_index":250,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["better",{"_index":1001,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["between",{"_index":982,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["black",{"_index":1164,"title":{},"body":{"components/TitleComponent.html":{}}}],["block",{"_index":959,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["boolean",{"_index":266,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["bootstrap",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":519,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["bottom_input",{"_index":983,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["bound",{"_index":869,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["box",{"_index":542,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["break",{"_index":939,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["brightness(0.8",{"_index":582,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["brightness(90",{"_index":1142,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["browse",{"_index":1278,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["bsetupdefaultvalue",{"_index":636,"title":{},"body":{"classes/GameConcret.html":{}}}],["build",{"_index":1255,"title":{},"body":{"index.html":{}}}],["button",{"_index":359,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["button's",{"_index":835,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["button.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":828,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.scss",{"_index":827,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts",{"_index":823,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":833,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:21",{"_index":837,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1127,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1129,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1128,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:41",{"_index":1131,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:47",{"_index":1133,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:54",{"_index":1132,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.style.display",{"_index":902,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["button/information",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["button/start",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button_icon",{"_index":597,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_label",{"_index":596,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["buttonclicked",{"_index":831,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["c7c7c7",{"_index":1143,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["cafe",{"_index":387,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(1em",{"_index":611,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(50",{"_index":1101,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["callback",{"_index":862,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["called",{"_index":1126,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["came",{"_index":574,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["capabilities",{"_index":1271,"title":{},"body":{"index.html":{}}}],["caption_button",{"_index":1138,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["caption_button:hover",{"_index":1141,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captionbackground",{"_index":1123,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captioncolor",{"_index":1124,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["card",{"_index":280,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/PlayerCardComponent.html":{}}}],["card'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["card.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":1003,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.scss",{"_index":1002,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.ts",{"_index":1000,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":1005,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card/player",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["ccc",{"_index":998,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["center",{"_index":494,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["change",{"_index":283,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["changemod",{"_index":1032,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changemod(event",{"_index":1038,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changes",{"_index":1035,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changlang",{"_index":852,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changlang(lang",{"_index":857,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changlang(lang:any",{"_index":961,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["check",{"_index":1040,"title":{},"body":{"components/SettingsComponentComponent.html":{},"index.html":{}}}],["checked",{"_index":867,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["child",{"_index":1160,"title":{},"body":{"components/TitleComponent.html":{}}}],["children",{"_index":575,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["choice",{"_index":1268,"title":{},"body":{"index.html":{}}}],["choose",{"_index":504,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["choosedefaultvalue",{"_index":179,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["chose",{"_index":1081,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["circle",{"_index":1108,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["class",{"_index":44,"title":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["classe",{"_index":767,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["classes",{"_index":633,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"overview.html":{}}}],["classes/decorateur/averagedecorator",{"_index":408,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/game",{"_index":397,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/gameconcret",{"_index":399,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/majabsdecorator",{"_index":410,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/strictdecorator",{"_index":401,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/facade/htmldisplay",{"_index":405,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/singleton/htmlbalise",{"_index":406,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clear",{"_index":475,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clearhtml",{"_index":760,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearhtml(element",{"_index":793,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearinstance",{"_index":720,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["cli",{"_index":1236,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":836,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["clip",{"_index":623,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["closebalise",{"_index":774,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["closes",{"_index":882,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["closing",{"_index":789,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["cluster_appmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1251,"title":{},"body":{"index.html":{}}}],["color",{"_index":509,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["column",{"_index":487,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["columns",{"_index":500,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["come",{"_index":1146,"title":{},"body":{"components/TitleComponent.html":{}}}],["command",{"_index":1269,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["component.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.html",{"_index":321,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.scss",{"_index":320,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts",{"_index":315,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:112",{"_index":1047,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:116",{"_index":351,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:133",{"_index":364,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:154",{"_index":362,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:175",{"_index":350,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:192",{"_index":343,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:207",{"_index":346,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:21",{"_index":1050,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:22",{"_index":339,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:222",{"_index":363,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:243",{"_index":358,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:250",{"_index":365,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:26",{"_index":1049,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:31",{"_index":1053,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:35",{"_index":376,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:36",{"_index":1051,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:40",{"_index":377,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:41",{"_index":1056,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:45",{"_index":388,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:50",{"_index":371,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:52",{"_index":1042,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:55",{"_index":392,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:60",{"_index":395,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:64",{"_index":368,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:75",{"_index":353,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:78",{"_index":1039,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:87",{"_index":1045,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:99",{"_index":347,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component/game",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"coverage.html":{}}}],["component/settings",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["components/game",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/information",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/player",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/start",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title/title.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":879,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["configurable",{"_index":1119,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["connect",{"_index":806,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console",{"_index":1077,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(\"aa",{"_index":819,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console.log(\"data",{"_index":955,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["console.log(\"test",{"_index":1073,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.backlogdata",{"_index":1072,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.mode",{"_index":940,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["console.log(this.players",{"_index":675,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["const",{"_index":163,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["constructor(dataservice",{"_index":336,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["constructor(private",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["cont",{"_index":438,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["contain",{"_index":480,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container",{"_index":482,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container_bottom",{"_index":996,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_button",{"_index":977,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_info",{"_index":978,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["containing",{"_index":373,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["contains",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["content",{"_index":489,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["continue",{"_index":367,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["continuegame",{"_index":180,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["continuegame(defaultvalue",{"_index":221,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["courses",{"_index":244,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["coverage",{"_index":1191,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatanddownloadjson",{"_index":181,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["create",{"_index":232,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["creating",{"_index":698,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["cross",{"_index":571,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["current",{"_index":243,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["currently",{"_index":345,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["cursor",{"_index":564,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["d000ff",{"_index":546,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dafoe",{"_index":1183,"title":{},"body":{"components/TitleComponent.html":{}}}],["data",{"_index":341,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["data[key",{"_index":437,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dataservice",{"_index":340,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorator",{"_index":174,"title":{},"body":{"interfaces/Game.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defaultvalue",{"_index":229,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defines",{"_index":310,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["deleting",{"_index":795,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dependencies",{"_index":91,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps:[httpclient",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["design",{"_index":175,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["detector",{"_index":866,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["dev",{"_index":1244,"title":{},"body":{"index.html":{}}}],["development",{"_index":1239,"title":{},"body":{"index.html":{}}}],["devkit/build",{"_index":809,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["direction",{"_index":486,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive's",{"_index":868,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["directives",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1254,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1259,"title":{},"body":{"index.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["displayed",{"_index":792,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["displayhtml",{"_index":761,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml(element",{"_index":798,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displays",{"_index":785,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dist",{"_index":1258,"title":{},"body":{"index.html":{}}}],["div",{"_index":479,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["document.getelementbyid(\"actualtask",{"_index":736,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"contniue",{"_index":901,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"endmessage",{"_index":738,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"finishbutton",{"_index":746,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"gamemodemessage",{"_index":748,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"playerbutton",{"_index":742,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"popup",{"_index":903,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"stage1",{"_index":463,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"standardvalue",{"_index":734,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"texttoshow",{"_index":740,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"validatebutton",{"_index":744,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(id",{"_index":817,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["documentation",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["down",{"_index":641,"title":{},"body":{"classes/GameConcret.html":{}}}],["download",{"_index":233,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["duration",{"_index":1013,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["during",{"_index":271,"title":{},"body":{"interfaces/Game.html":{}}}],["dynamic",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":1009,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["e2e",{"_index":1266,"title":{},"body":{"index.html":{}}}],["e3e3e3",{"_index":616,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["e9e9ea",{"_index":989,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["each",{"_index":240,"title":{},"body":{"interfaces/Game.html":{}}}],["ease",{"_index":592,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["easily",{"_index":755,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["element.classlist.add(classe",{"_index":820,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element.innerhtml",{"_index":821,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["elements",{"_index":375,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["emptied",{"_index":797,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["empty",{"_index":724,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["en",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{}}}],["end",{"_index":182,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["endmessage",{"_index":554,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["english",{"_index":966,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["enter",{"_index":219,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["entered",{"_index":1037,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["error(\"method",{"_index":672,"title":{},"body":{"classes/GameConcret.html":{}}}],["evenly",{"_index":534,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event",{"_index":878,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.files[0",{"_index":908,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.placeholder",{"_index":1061,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value",{"_index":1059,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value.substring(0",{"_index":1066,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["eventemitter",{"_index":832,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["everything",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["example",{"_index":779,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["execute",{"_index":1263,"title":{},"body":{"index.html":{}}}],["exo",{"_index":1152,"title":{},"body":{"components/TitleComponent.html":{}}}],["explain",{"_index":824,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["explode",{"_index":1111,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["exports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extract",{"_index":916,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["facade",{"_index":753,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["face",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":391,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["family",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["ff61af",{"_index":1176,"title":{},"body":{"components/TitleComponent.html":{}}}],["fff",{"_index":544,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["ffffff",{"_index":532,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":912,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["filereader",{"_index":910,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["files",{"_index":1250,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1180,"title":{},"body":{"components/TitleComponent.html":{}}}],["filter",{"_index":581,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["finishbutton",{"_index":731,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["first",{"_index":870,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["fixed",{"_index":997,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["flex",{"_index":485,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["focus",{"_index":628,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["font",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["for(const",{"_index":931,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["form",{"_index":1082,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_bottom",{"_index":1094,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_top",{"_index":1083,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["format",{"_index":765,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["français",{"_index":967,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["full",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["further",{"_index":1272,"title":{},"body":{"index.html":{}}}],["game",{"_index":69,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["game_label:before",{"_index":1100,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["gamecomponentcomponent",{"_index":68,"title":{"components/GameComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameconcret",{"_index":398,"title":{"classes/GameConcret.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"coverage.html":{}}}],["gamemodemessage",{"_index":555,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["gameoptionserviceservice",{"_index":337,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["gamerules",{"_index":970,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules1",{"_index":971,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules2",{"_index":972,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules3",{"_index":973,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules4",{"_index":974,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules5",{"_index":975,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules6",{"_index":976,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gap",{"_index":1090,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["generate",{"_index":1253,"title":{},"body":{"index.html":{}}}],["generated",{"_index":796,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["getactualstage",{"_index":183,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getactuellog",{"_index":328,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getbacklogdata",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote",{"_index":185,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote(key",{"_index":247,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getdefaultvalue",{"_index":186,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getinstance",{"_index":721,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["getmode",{"_index":329,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote",{"_index":187,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getnote(id",{"_index":349,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote(key",{"_index":253,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getnotes",{"_index":188,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer",{"_index":189,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer(key",{"_index":259,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayernumber",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayers",{"_index":191,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getslidervalue",{"_index":1033,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event",{"_index":1041,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getting",{"_index":1233,"title":{"index.html":{}},"body":{}}],["give",{"_index":274,"title":{},"body":{"interfaces/Game.html":{}}}],["given",{"_index":293,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["go",{"_index":1274,"title":{},"body":{"index.html":{}}}],["goal",{"_index":826,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["graded",{"_index":889,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gradient(#032d50",{"_index":1171,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(#e3e3e3",{"_index":615,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["gradient(120deg",{"_index":617,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["graph",{"_index":1279,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":499,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["group",{"_index":608,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["h1",{"_index":1019,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["h2",{"_index":1181,"title":{},"body":{"components/TitleComponent.html":{}}}],["h3",{"_index":1092,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["header",{"_index":498,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["header_sidenav",{"_index":560,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["height",{"_index":483,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["help",{"_index":840,"title":{},"body":{"components/InformationButtonComponent.html":{},"index.html":{}}}],["here",{"_index":503,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["hidden",{"_index":1012,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["home",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hover",{"_index":594,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["html.addhtmlelement(\"input",{"_index":781,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["html.displayhtml(balise.title",{"_index":783,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["htmlbalise",{"_index":369,"title":{"classes/HtmlBalise.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"coverage.html":{}}}],["htmlbalise.getinstance",{"_index":414,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["htmlbalise.instance",{"_index":750,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlbuttonelement",{"_index":730,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmldisplay",{"_index":324,"title":{"classes/HtmlDisplay.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["htmldivelement",{"_index":728,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmlelement",{"_index":727,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["htmlinputelement",{"_index":464,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["http",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:4200",{"_index":1246,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["httploaderfactory(http:httpclient",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":843,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["id",{"_index":230,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["identifier",{"_index":361,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["if(!closebalise",{"_index":814,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(element",{"_index":818,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(n",{"_index":474,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["if(this.popupisopen",{"_index":958,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["ignore",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/SettingsComponentComponent.html":{}}}],["image",{"_index":537,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["immediately",{"_index":865,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["implemented",{"_index":673,"title":{},"body":{"classes/GameConcret.html":{}}}],["implements",{"_index":317,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["important",{"_index":1099,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["imported",{"_index":1046,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["imports",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information_button",{"_index":841,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["informationbuttoncomponent",{"_index":71,"title":{"components/InformationButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable",{"_index":686,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":687,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["inline",{"_index":984,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input",{"_index":606,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["input[type=\"file",{"_index":992,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio",{"_index":1104,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":1109,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input_text",{"_index":784,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["inputs",{"_index":1004,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["inputvalue",{"_index":732,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instance",{"_index":719,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instantiated",{"_index":875,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["interface",{"_index":171,"title":{"interfaces/Game.html":{}},"body":{"interfaces/Game.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":172,"title":{},"body":{"interfaces/Game.html":{}}}],["invoked",{"_index":864,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["iscontinue",{"_index":330,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["isdownload",{"_index":192,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["isretry",{"_index":193,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["it's",{"_index":556,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["item",{"_index":924,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["item.hasownproperty(itemname",{"_index":927,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item.work",{"_index":936,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item[itemname",{"_index":930,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["itemname",{"_index":926,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["items",{"_index":493,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["itself",{"_index":607,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["json",{"_index":235,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json.parse(filecontent",{"_index":915,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json_file",{"_index":968,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata",{"_index":914,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata.backlog",{"_index":922,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog.hasownproperty(key",{"_index":923,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog[key",{"_index":925,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.default",{"_index":921,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.hasownproperty(key",{"_index":1069,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata.mode",{"_index":920,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players",{"_index":932,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players.hasownproperty(key",{"_index":933,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players[key",{"_index":934,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata[key]?.name",{"_index":1070,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["justify",{"_index":488,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["karma",{"_index":1265,"title":{},"body":{"index.html":{}}}],["key",{"_index":205,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["key.startswith(\"default",{"_index":439,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('actuallog",{"_index":457,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('backlog",{"_index":451,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('default",{"_index":458,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('mode",{"_index":436,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('note",{"_index":456,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('player",{"_index":441,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["keyframes",{"_index":1113,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["keys",{"_index":918,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label",{"_index":804,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label.innertext",{"_index":813,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["lang",{"_index":850,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lang.target.value",{"_index":963,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["language",{"_index":859,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["launches",{"_index":238,"title":{},"body":{"interfaces/Game.html":{}}}],["left",{"_index":994,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["left_number",{"_index":1088,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["left_players",{"_index":1089,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["lets",{"_index":754,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["letter",{"_index":1156,"title":{},"body":{"components/TitleComponent.html":{}}}],["li",{"_index":1096,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["line",{"_index":552,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["linear",{"_index":614,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":1122,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["list",{"_index":258,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["listvalue",{"_index":325,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["literal",{"_index":236,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["load",{"_index":847,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["loaded",{"_index":356,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["loader",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lobby",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local_cafe",{"_index":478,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["localstorage.getitem('lang",{"_index":906,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["localstorage.setitem('lang",{"_index":964,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lunchstage",{"_index":194,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["mainmenucomponent",{"_index":74,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["majabs",{"_index":424,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majabsdecorator",{"_index":409,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["majabsdecorator(this.game",{"_index":425,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majority",{"_index":1079,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["manages",{"_index":316,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["margin",{"_index":522,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["marks",{"_index":291,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["mat",{"_index":558,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["matbuttonmodule",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1062,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["matching",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maticonmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":1054,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["menu",{"_index":477,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["menu'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["menu.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["menu.component.html",{"_index":849,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":848,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":846,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:130",{"_index":885,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:15",{"_index":856,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:153",{"_index":880,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:164",{"_index":858,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":897,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:33",{"_index":893,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":861,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":891,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:54",{"_index":890,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:58",{"_index":894,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:62",{"_index":892,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:66",{"_index":896,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:70",{"_index":888,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:76",{"_index":877,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/main",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["message",{"_index":834,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["method",{"_index":863,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["methods",{"_index":177,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["michel",{"_index":447,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["middle",{"_index":1107,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["min",{"_index":548,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mode",{"_index":348,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["modedecorator",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["modified",{"_index":717,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["modifies",{"_index":1043,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["modifybacklogdata",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["modifybacklogdata(key",{"_index":281,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["module",{"_index":88,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":90,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1273,"title":{},"body":{"index.html":{}}}],["moyenne",{"_index":422,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mr",{"_index":1182,"title":{},"body":{"components/TitleComponent.html":{}}}],["n",{"_index":298,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["names",{"_index":917,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["namesarray",{"_index":1068,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray.push(jsondata[key].name",{"_index":1071,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["navigate",{"_index":1245,"title":{},"body":{"index.html":{}}}],["nb",{"_index":308,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["need",{"_index":265,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["new",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":703,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["next",{"_index":285,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["nextstage",{"_index":196,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["ng",{"_index":1242,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":331,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ngif",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":412,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["ngx",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"dependencies.html":{}}}],["none",{"_index":416,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["noopanimationsmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["note",{"_index":208,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["noted",{"_index":213,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["notes",{"_index":390,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["null",{"_index":434,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["number",{"_index":223,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["numbers",{"_index":1078,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["object",{"_index":769,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["object.keys(data).foreach(key",{"_index":435,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["object.keys(this.backlogdata).foreach((item",{"_index":951,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["object.keys(this.players).foreach(key",{"_index":943,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["object.keys(this.players).length",{"_index":680,"title":{},"body":{"classes/GameConcret.html":{}}}],["offset",{"_index":1136,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onbuttonclick",{"_index":829,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["once",{"_index":874,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["one",{"_index":692,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["onfileselected",{"_index":853,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["onfileselected(event",{"_index":876,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["oninit",{"_index":319,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["opacity",{"_index":995,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["open",{"_index":394,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["opened",{"_index":326,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["openinformation",{"_index":854,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["opens",{"_index":881,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["option",{"_index":403,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["optional",{"_index":211,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["origin",{"_index":622,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["out",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":626,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["output",{"_index":838,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["outputs",{"_index":830,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["overflow",{"_index":1011,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["overview",{"_index":1275,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":313,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["package",{"_index":1214,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":517,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["page",{"_index":355,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"index.html":{}}}],["page's",{"_index":756,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["param",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parameters",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key",{"_index":938,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key.replace('player",{"_index":443,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["parseint(match",{"_index":1064,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["passed",{"_index":704,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{}}}],["passing",{"_index":770,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["path",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrick",{"_index":449,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["pattern",{"_index":176,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["per",{"_index":1055,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["phase",{"_index":272,"title":{},"body":{"interfaces/Game.html":{}}}],["placed",{"_index":786,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["placeholder",{"_index":631,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["placeholder.replace(/\\d/g",{"_index":1063,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["places",{"_index":803,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["planing",{"_index":278,"title":{},"body":{"interfaces/Game.html":{}}}],["planning",{"_index":1149,"title":{},"body":{"components/TitleComponent.html":{}}}],["planningpokerpp",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["platform",{"_index":1267,"title":{},"body":{"index.html":{}}}],["play",{"_index":297,"title":{},"body":{"interfaces/Game.html":{}}}],["player",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["player's",{"_index":261,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerbutton",{"_index":576,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["playercardcomponent",{"_index":76,"title":{"components/PlayerCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerkey",{"_index":944,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playermax",{"_index":1030,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playernumber",{"_index":442,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playerpushbutton",{"_index":197,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerpushbutton(id",{"_index":287,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["players",{"_index":218,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["players[1",{"_index":446,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[2",{"_index":448,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[playernumber",{"_index":445,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["playersnb",{"_index":1057,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playersnote",{"_index":637,"title":{},"body":{"classes/GameConcret.html":{}}}],["pointer",{"_index":565,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["poker",{"_index":279,"title":{},"body":{"interfaces/Game.html":{},"components/TitleComponent.html":{}}}],["popup",{"_index":883,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popup.style.display",{"_index":904,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popupisopen",{"_index":851,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["position",{"_index":587,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["possible",{"_index":1121,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pp",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["press",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["pressed",{"_index":360,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["presses",{"_index":366,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["previously",{"_index":886,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["private",{"_index":411,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["project",{"_index":1235,"title":{},"body":{"index.html":{}}}],["prompts",{"_index":217,"title":{},"body":{"interfaces/Game.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"properties.html":{}}}],["protected",{"_index":1075,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["provide:translateloader",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":713,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pushable_button",{"_index":1134,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushable_button:active",{"_index":1144,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushablebackground",{"_index":1125,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["quiter",{"_index":454,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["radius",{"_index":520,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rating",{"_index":292,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reader",{"_index":909,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.onload",{"_index":911,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.readastext(selectedfile",{"_index":942,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.result",{"_index":913,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["readonly",{"_index":1076,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["recorded",{"_index":887,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["recover",{"_index":255,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["red",{"_index":572,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["redirectto",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":805,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["regular.ttf",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":588,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["reload",{"_index":1249,"title":{},"body":{"index.html":{}}}],["repeat(11",{"_index":501,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["replay",{"_index":268,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reset",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["resuming",{"_index":228,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{}}}],["retrieve",{"_index":249,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["retrieves",{"_index":344,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["return",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["returned",{"_index":256,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returning",{"_index":252,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returns",{"_index":214,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rgb(0",{"_index":598,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgb(255",{"_index":604,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgba(0",{"_index":1017,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["rgba(black",{"_index":1168,"title":{},"body":{"components/TitleComponent.html":{}}}],["right",{"_index":568,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["right_style",{"_index":1091,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["rotate",{"_index":1189,"title":{},"body":{"components/TitleComponent.html":{}}}],["round",{"_index":269,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["router",{"_index":338,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["routermodule",{"_index":160,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":161,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":159,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":513,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["rules",{"_index":825,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["run",{"_index":1241,"title":{},"body":{"index.html":{}}}],["running",{"_index":1260,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":712,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"dependencies.html":{}}}],["résum",{"_index":476,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["save",{"_index":697,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["scaffolding",{"_index":1252,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":1116,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(0.85",{"_index":595,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(0.9",{"_index":991,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["scale(1",{"_index":1117,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1.2",{"_index":563,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(1.5",{"_index":844,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["scale(4",{"_index":1114,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scene",{"_index":693,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["score",{"_index":275,"title":{},"body":{"interfaces/Game.html":{}}}],["select",{"_index":895,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectbutton",{"_index":332,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectbutton(id",{"_index":357,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectedfile",{"_index":907,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectedlanguage",{"_index":962,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["selects",{"_index":290,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["send",{"_index":696,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["senddata",{"_index":855,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["sending",{"_index":702,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["sends",{"_index":1048,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["sent",{"_index":707,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["serif",{"_index":514,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":1243,"title":{},"body":{"index.html":{}}}],["server",{"_index":1240,"title":{},"body":{"index.html":{}}}],["service",{"_index":690,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["service.service",{"_index":404,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["service.service.ts",{"_index":689,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:18",{"_index":706,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:23",{"_index":709,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:30",{"_index":701,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["services/gameoptionservice/game",{"_index":402,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["set",{"_index":296,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setactualplayerturn",{"_index":198,"title":{},"body":{"interfaces/Game.html":{}}}],["setactualplayerturn(n",{"_index":294,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklog",{"_index":333,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setbacklogdata",{"_index":199,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklogdata(backlogdata",{"_index":299,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklognote",{"_index":334,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setdata",{"_index":699,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdata(newdata",{"_index":700,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdefaultvalue",{"_index":200,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setdefaultvalue(value",{"_index":302,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setplayers",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setplayers(players",{"_index":304,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["sets",{"_index":225,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage",{"_index":202,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage(nb",{"_index":306,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setter",{"_index":301,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["settimeout",{"_index":941,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["settings",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["settingscomponentcomponent",{"_index":79,"title":{"components/SettingsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":312,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setupdefaultvalue",{"_index":203,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setuplocationsync",{"_index":899,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["shadow",{"_index":524,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["showtext",{"_index":762,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["showtext(label",{"_index":801,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["sidenav",{"_index":497,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["singleton",{"_index":372,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["site",{"_index":342,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["size",{"_index":515,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["sizing",{"_index":1103,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["skew",{"_index":1154,"title":{},"body":{"components/TitleComponent.html":{}}}],["slider",{"_index":1044,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["solid",{"_index":541,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["space",{"_index":490,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["spacing",{"_index":1157,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:first",{"_index":1159,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:last",{"_index":1170,"title":{},"body":{"components/TitleComponent.html":{}}}],["specific",{"_index":1120,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["src",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:27",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/decorateur/averagedecorator.ts",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/game.ts",{"_index":173,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/game.ts:10",{"_index":305,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:101",{"_index":206,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:106",{"_index":257,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:112",{"_index":254,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:119",{"_index":282,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:124",{"_index":267,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:129",{"_index":264,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:134",{"_index":231,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:140",{"_index":295,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:145",{"_index":237,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:151",{"_index":248,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:16",{"_index":300,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:21",{"_index":216,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:28",{"_index":224,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:34",{"_index":309,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:40",{"_index":303,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:45",{"_index":284,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:51",{"_index":307,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:57",{"_index":270,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:62",{"_index":242,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:67",{"_index":262,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:73",{"_index":260,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:78",{"_index":251,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:83",{"_index":245,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:89",{"_index":288,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:94",{"_index":263,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/gameconcret.ts",{"_index":634,"title":{},"body":{"classes/GameConcret.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:103",{"_index":659,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:111",{"_index":658,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:118",{"_index":655,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:125",{"_index":653,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:133",{"_index":665,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:139",{"_index":660,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:14",{"_index":650,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:148",{"_index":649,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:155",{"_index":657,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:163",{"_index":656,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:172",{"_index":663,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:180",{"_index":654,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:187",{"_index":662,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:21",{"_index":646,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:213",{"_index":661,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:220",{"_index":651,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:229",{"_index":669,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:25",{"_index":647,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:29",{"_index":642,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:34",{"_index":644,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:39",{"_index":645,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:44",{"_index":638,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:50",{"_index":668,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:59",{"_index":666,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:73",{"_index":670,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:81",{"_index":667,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:89",{"_index":664,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:96",{"_index":652,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/majabsdecorator.ts",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/modedecorator.ts",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/strictdecorator.ts",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts",{"_index":751,"title":{},"body":{"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts:12",{"_index":763,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:20",{"_index":802,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:40",{"_index":775,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:63",{"_index":768,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:74",{"_index":791,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:82",{"_index":799,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:91",{"_index":794,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/singleton/htmlbalise.ts",{"_index":715,"title":{},"body":{"classes/HtmlBalise.html":{},"coverage.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:39",{"_index":725,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:49",{"_index":723,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:9",{"_index":722,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/components/game",{"_index":314,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":822,"title":{},"body":{"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":845,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/player",{"_index":999,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["src/app/components/settings",{"_index":1028,"title":{},"body":{"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/start",{"_index":1118,"title":{},"body":{"components/StartButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/title/title.component.ts",{"_index":1145,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/services/gameoptionservice/game",{"_index":688,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["stage1",{"_index":782,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["standar",{"_index":396,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standard",{"_index":220,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["standardvalue",{"_index":507,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standarvalue",{"_index":327,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["start",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["startbuttoncomponent",{"_index":81,"title":{"components/StartButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1234,"title":{"index.html":{}},"body":{}}],["starts",{"_index":354,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["statements",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":718,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["step",{"_index":286,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["stored",{"_index":1257,"title":{},"body":{"index.html":{}}}],["strict",{"_index":420,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["strictdecorator",{"_index":400,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["strictdecorator(this.game",{"_index":421,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["strkey",{"_index":945,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["stroke",{"_index":530,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["stvalue",{"_index":726,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["style",{"_index":505,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["summary",{"_index":239,"title":{},"body":{"interfaces/Game.html":{}}}],["support",{"_index":1276,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1277,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":777,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["tags",{"_index":716,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["takes",{"_index":481,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["task",{"_index":276,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["teh",{"_index":495,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["test",{"_index":685,"title":{},"body":{"classes/GameConcret.html":{},"index.html":{}}}],["testing",{"_index":1270,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1262,"title":{},"body":{"index.html":{}}}],["text",{"_index":511,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["texttoshow",{"_index":506,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["things",{"_index":557,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.actualfunctioninbacklog",{"_index":679,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.actuallog",{"_index":937,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata",{"_index":676,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.backlogdata.foreach((item",{"_index":1074,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.backlogdata[item",{"_index":954,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[itemname",{"_index":929,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[key",{"_index":684,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.balise",{"_index":413,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.balise.playerbutton.style.display",{"_index":415,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.bsetupdefaultvalue",{"_index":677,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.buttonclicked.emit",{"_index":839,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["this.content",{"_index":815,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["this.data",{"_index":956,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data.asobservable",{"_index":708,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data.next(newdata",{"_index":714,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data[\"actuallog",{"_index":950,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"backlog",{"_index":952,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"default",{"_index":949,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"mode",{"_index":948,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"note",{"_index":953,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[strkey",{"_index":946,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.dataservice.data$.subscribe(data",{"_index":433,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.dataservice.setdata(this.data",{"_index":957,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.defaultvalue",{"_index":678,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.endmessage",{"_index":737,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.finishbutton",{"_index":745,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.game",{"_index":418,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.choosedefaultvalue",{"_index":432,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.continuegame(this.getdefaultvalue",{"_index":429,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getactualstage",{"_index":473,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.creatanddownloadjson",{"_index":468,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isdownload",{"_index":467,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isretry",{"_index":470,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.lunchstage",{"_index":472,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.playerpushbutton(id",{"_index":460,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setactualplayerturn(1",{"_index":471,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setbacklogdata(backlogdata",{"_index":455,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setdefaultvalue(valueelement.value",{"_index":466,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setplayers(players",{"_index":450,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setupdefaultvalue",{"_index":461,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.gamemodemessage",{"_index":747,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.getactuellog",{"_index":430,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getmode",{"_index":419,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getnote(parseint(key.match(/\\d+/)?.[0",{"_index":459,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.htmldisplay",{"_index":417,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.inputvalue",{"_index":749,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.iscontinue",{"_index":427,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.lang",{"_index":905,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.mode",{"_index":919,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playerbutton",{"_index":741,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.playernumber",{"_index":1058,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players",{"_index":674,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.players.push(item",{"_index":935,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.players[id",{"_index":1065,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players[key",{"_index":681,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[playerkey",{"_index":947,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playersnb",{"_index":1060,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnote",{"_index":683,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.playersnote[key",{"_index":682,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.popupisopen",{"_index":960,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":469,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklog",{"_index":431,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklognote",{"_index":428,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setplayers",{"_index":426,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.stvalue",{"_index":733,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.task",{"_index":735,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.title",{"_index":739,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(localstorage.getitem('lang",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(selectedlanguage",{"_index":965,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.validatebutton",{"_index":743,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["throw",{"_index":671,"title":{},"body":{"classes/GameConcret.html":{}}}],["time",{"_index":871,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["title.component.html",{"_index":1148,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":1147,"title":{},"body":{"components/TitleComponent.html":{}}}],["titlecomponent",{"_index":82,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":593,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["top_left",{"_index":1085,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["top_right",{"_index":1087,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["transform",{"_index":562,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["transformer",{"_index":811,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transformjavascript",{"_index":807,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transition",{"_index":590,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["translate",{"_index":969,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["translate/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule.forroot",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{}}}],["translateservice:translateservice",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{}}}],["translatey",{"_index":1140,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["translation",{"_index":860,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["transmitting",{"_index":691,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["transparent",{"_index":528,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["triggered",{"_index":289,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["true",{"_index":440,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["tslib",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":273,"title":{},"body":{"interfaces/Game.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["typeface",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1095,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["undefined",{"_index":370,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["under",{"_index":1130,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["unit",{"_index":1261,"title":{},"body":{"index.html":{}}}],["url(\"../../../assets/images/card.jpg",{"_index":579,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/hypnotic.jpg",{"_index":538,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/player",{"_index":1006,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["url('../../../assets/images/hand.png",{"_index":585,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url('../assets/fonts/pressstart2p",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=exo:wght@900&display=swap",{"_index":1151,"title":{},"body":{"components/TitleComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=mr+dafoe&display=swap",{"_index":1150,"title":{},"body":{"components/TitleComponent.html":{}}}],["use",{"_index":780,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["used",{"_index":710,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["usefactory:httploaderfactory",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":227,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["user",{"_index":1029,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["using",{"_index":277,"title":{},"body":{"interfaces/Game.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["validatebutton",{"_index":729,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["validestage",{"_index":335,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["valueelement",{"_index":462,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valueelement.value",{"_index":465,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valuers",{"_index":788,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["values",{"_index":226,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["variable",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["various",{"_index":778,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["version",{"_index":1237,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1106,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["via",{"_index":1264,"title":{},"body":{"index.html":{}}}],["view",{"_index":873,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["void",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["want",{"_index":771,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["we'll",{"_index":800,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["webkit",{"_index":529,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["website",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["whether",{"_index":311,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["white",{"_index":510,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["whose",{"_index":1036,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["width",{"_index":484,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["window",{"_index":884,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["work",{"_index":928,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["worker",{"_index":812,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["wrap",{"_index":535,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["written",{"_index":640,"title":{},"body":{"classes/GameConcret.html":{}}}],["yes",{"_index":787,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["z",{"_index":589,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["zone.js",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component that display everything.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'planningPokerPP'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n            \n                \n                    Variable that contains the name of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/**\n * Main component that display everything.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n  /**\n   * @ignore\n   * @param translateService\n   */\n  constructor(private translateService:TranslateService) {\n    this.translateService.setDefaultLang('en');\n    this.translateService.use(localStorage.getItem('lang') || 'en')\n  }\n\n  /**\n   * Variable that contains the name of the website.\n   */\n  title = 'planningPokerPP';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @font-face {\n  font-family: 'Press Start 2P';\n  src: url('../assets/fonts/PressStart2P-Regular.ttf');\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponentComponent\n                        \n                        \n                            InformationButtonComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            PlayerCardComponent\n                        \n                        \n                            SettingsComponentComponent\n                        \n                        \n                            StartButtonComponent\n                        \n                        \n                            TitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {StartButtonComponent} from './components/start-button/start-button.component';\nimport {InformationButtonComponent} from './components/information-button/information-button.component';\n\nimport {MainMenuComponent} from './components/main-menu/main-menu.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SettingsComponentComponent} from './components/settings-component/settings-component.component';\nimport { GameComponentComponent } from './components/game-component/game-component.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { PlayerCardComponent } from './components/player-card/player-card.component';\nimport {NgIf} from \"@angular/common\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\n\n/**\n * @ignore\n * @param http\n * @constructor\n */\nexport function HttpLoaderFactory(http:HttpClient){\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartButtonComponent,\n    InformationButtonComponent,\n    MainMenuComponent,\n    SettingsComponentComponent,\n    GameComponentComponent,\n    TitleComponent,\n    PlayerCardComponent,\n  ],\n    imports: [\n      BrowserModule,\n      AppRoutingModule,\n      MatIconModule,\n      NoopAnimationsModule,\n      NgIf,\n      MatSidenavModule,\n      MatButtonModule,\n      HttpClientModule,\n      TranslateModule.forRoot({\n        loader:{\n          provide:TranslateLoader,\n          useFactory:HttpLoaderFactory,\n          deps:[HttpClient]\n        }\n      }\n      )\n    ],\n  providers:\n    [HttpClient],\n  bootstrap:\n    [AppComponent]\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponentComponent} from \"./components/settings-component/settings-component.component\";\nimport {MainMenuComponent} from \"./components/main-menu/main-menu.component\";\nimport {GameComponentComponent} from \"./components/game-component/game-component.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: MainMenuComponent},\n  {path: 'lobby', component: SettingsComponentComponent},\n  {path: 'game', component: GameComponentComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/Game.ts\n        \n\n\n            \n                Description\n            \n            \n                Game interface for the Decorator design pattern\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addNote\n                                    \n                                \n                                \n                                    \n                                        chooseDefaultValue\n                                    \n                                \n                                \n                                    \n                                        continueGame\n                                    \n                                \n                                \n                                    \n                                        creatAndDownloadJSON\n                                    \n                                \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        getActualStage\n                                    \n                                \n                                \n                                    \n                                        getBacklogData\n                                    \n                                \n                                \n                                    \n                                        getBacklogDataNote\n                                    \n                                \n                                \n                                    \n                                        getDefaultValue\n                                    \n                                \n                                \n                                    \n                                        getNote\n                                    \n                                \n                                \n                                    \n                                        getNotes\n                                    \n                                \n                                \n                                    \n                                        getPlayer\n                                    \n                                \n                                \n                                    \n                                        getPlayerNumber\n                                    \n                                \n                                \n                                    \n                                        getPlayers\n                                    \n                                \n                                \n                                    \n                                        isDownload\n                                    \n                                \n                                \n                                    \n                                        isRetry\n                                    \n                                \n                                \n                                    \n                                        lunchStage\n                                    \n                                \n                                \n                                    \n                                        modifyBacklogData\n                                    \n                                \n                                \n                                    \n                                        nextStage\n                                    \n                                \n                                \n                                    \n                                        playerPushButton\n                                    \n                                \n                                \n                                    \n                                        setActualPlayerTurn\n                                    \n                                \n                                \n                                    \n                                        setBacklogData\n                                    \n                                \n                                \n                                    \n                                        setDefaultValue\n                                    \n                                \n                                \n                                    \n                                        setPlayers\n                                    \n                                \n                                \n                                    \n                                        setStage\n                                    \n                                \n                                \n                                    \n                                        setupDefaultValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:101\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:21\n                        \n                    \n\n\n            \n                \n                        Function that prompts players to enter the standard value\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:28\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:134\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:145\n                        \n                    \n\n\n            \n                \n                        Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:62\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:83\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:151\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:78\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:112\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:106\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:73\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:67\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:94\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:129\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:124\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:57\n                        \n                    \n\n\n            \n                \n                        Game function, during this phase the players, each in turn, give the score they would give to the current task\nusing the Planing Poker card.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:119\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:45\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:89\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:140\n                        \n                    \n\n\n            \n                \n                        Set the player who must play\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who is to play\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:16\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:40\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:10\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:51\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:34\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Game {\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [key: number]: string }): void;\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key: string]: number }): void;\n\n  /**\n   * Function that prompts players to enter the standard value\n   */\n  chooseDefaultValue(): void;\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void;\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean;\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void;\n\n  /**\n   * Next step function\n   */\n  nextStage(): void;\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void;\n\n  /**\n   * Game function, during this phase the players, each in turn, give the score they would give to the current task\n   * using the Planing Poker card.\n   */\n  lunchStage(): void;\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number;\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number;\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string;\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string;\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [key: string]: number };\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void;\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [key: number]: string };\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value: string, key: string): void\n\n  /**\n   * Return to note list\n   */\n  getNotes(): { [key: string]: string };\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key: string): string;\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key: string, value: number): void;\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean;\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean;\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON() : { [p: string]: any };\n\n  /**\n   * Set the player who must play\n   * @param n {number} Id of the player who is to play\n   */\n  setActualPlayerTurn(n : number): void;\n\n  /**\n   * Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n   */\n  end() : void;\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponentComponent.html":{"url":"components/GameComponentComponent.html","title":"component - GameComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-component/game-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class that manages game display\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                game-component\n            \n\n\n\n            \n                styleUrls\n                ./game-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backlogValue\n                            \n                            \n                                balise\n                            \n                            \n                                game\n                            \n                            \n                                htmlDisplay\n                            \n                            \n                                listValue\n                            \n                            \n                                opened\n                            \n                            \n                                standarValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActuelLog\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getMode\n                            \n                            \n                                getNote\n                            \n                            \n                                isContinue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectButton\n                            \n                            \n                                setBacklog\n                            \n                            \n                                setBacklogNote\n                            \n                            \n                                setPlayers\n                            \n                            \n                                valideStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-component/game-component.component.ts:22\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Contains data to start the game\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                site router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActuelLog\n                        \n                    \n                \n            \n            \n                \ngetActuelLog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:192\n                        \n                    \n\n\n            \n                \n                        retrieves the function currently noted\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Get default value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMode\n                        \n                    \n                \n            \n            \n                \ngetMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Get Game Mode\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Get Note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who set the note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContinue\n                        \n                    \n                \n            \n            \n                \nisContinue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Are we back in the game\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Function that starts the game after the page has loaded\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectButton\n                        \n                    \n                \n            \n            \n                \nselectButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:243\n                        \n                    \n\n\n            \n                \n                        Function that starts when a button is pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function identifier\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklog\n                        \n                    \n                \n            \n            \n                \nsetBacklog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Set Backlog Data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogNote\n                        \n                    \n                \n            \n            \n                \nsetBacklogNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:222\n                        \n                    \n\n\n            \n                \n                        Add a not to the Backlog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Set Player in game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valideStage\n                        \n                    \n                \n            \n            \n                \nvalideStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:250\n                        \n                    \n\n\n            \n                \n                        Function that starts when the player presses the button continue\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backlogValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:64\n                        \n                    \n\n            \n                \n                    Backlog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:50\n                        \n                    \n\n            \n                \n                    Singleton containing andlocations for HTML elements\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:35\n                        \n                    \n\n            \n                \n                    Game data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:40\n                        \n                    \n\n            \n                \n                    Class to display elements on the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of available notes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:55\n                        \n                    \n\n            \n                \n                    If the bare is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        standarValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:60\n                        \n                    \n\n            \n                \n                    Standar value\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Game} from \"../../classes/decorateur/Game\";\nimport {GameConcret} from \"../../classes/decorateur/GameConcret\";\nimport {StrictDecorator} from \"../../classes/decorateur/StrictDecorator\";\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {HtmlDisplay} from \"../../classes/facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../../classes/singleton/htmlBalise\";\nimport {Router} from \"@angular/router\";\nimport {AverageDecorator} from \"../../classes/decorateur/AverageDecorator\";\nimport {MajabsDecorator} from \"../../classes/decorateur/MajabsDecorator\";\n\n/**\n * Class that manages game display\n * @implements AfterViewInit\n * @implements OnInit\n */\n@Component({\n  selector: 'game-component',\n  templateUrl: './game-component.component.html',\n  styleUrls: ['./game-component.component.scss']\n})\nexport class GameComponentComponent implements AfterViewInit, OnInit {\n\n  /**\n   * Class constructor\n   * @param dataService {GameOptionServiceService} Contains data to start the game\n   * @param router {Router} site router\n   */\n  constructor(private dataService: GameOptionServiceService, private router: Router) {\n  }\n\n  /**\n   * Game data\n   */\n  game: Game | undefined;\n\n  /**\n   * Class to display elements on the page\n   */\n  htmlDisplay: HtmlDisplay | undefined;\n\n  /**\n   * List of available notes\n   */\n  listValue = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n\n  /**\n   * Singleton containing andlocations for HTML elements\n   */\n  balise: HtmlBalise | undefined;\n\n  /**\n   * If the bare is open\n   */\n  opened = false;\n\n  /**\n   * Standar value\n   */\n  standarValue: string = \"\"\n  /**\n   * Backlog\n   */\n  backlogValue: string = \"\"\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Function that starts the game after the page has loaded\n   */\n  ngAfterViewInit(): void {\n    this.balise = HtmlBalise.getInstance();\n    this.balise.playerButton.style.display = 'none';\n    this.htmlDisplay = new HtmlDisplay();\n    this.game = new GameConcret();\n    if (this.getMode() == \"strict\") this.game = new StrictDecorator(this.game);\n    else if (this.getMode() == \"moyenne\") this.game = new AverageDecorator(this.game);\n    else if (this.getMode() == \"majabs\") this.game = new MajabsDecorator(this.game);\n    else this.game = new StrictDecorator(this.game)\n    this.setPlayers()\n\n    if (this.isContinue()) {\n      this.setBacklogNote()\n      this.game.continueGame(this.getDefaultValue(), this.getActuelLog());\n\n    } else {\n      this.setBacklog()\n      this.game.chooseDefaultValue();\n    }\n  }\n\n  /**\n   * Get Game Mode\n   */\n  getMode(): string {\n    let mode = \"strict\"\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Mode')) {\n            mode = data[key];\n          }\n        });\n      }\n    });\n    return mode\n  }\n\n  /**\n   * Are we back in the game\n   */\n  isContinue(): boolean {\n    let cont = false;\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith(\"Default\")) {\n            cont = true;\n          }\n        })\n      }\n    })\n    return cont;\n  }\n\n  /**\n   * Set Player in game\n   */\n  setPlayers() {\n    let players: { [key: number]: string } = {}\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Player')) {\n            const playerNumber = parseInt(key.replace('Player', ''), 10);\n            players[playerNumber] = data[key];\n          }\n        });\n      } else {\n        players[1] = \"Michel\";\n        players[2] = \"Patrick\";\n      }\n    });\n    this.game?.setPlayers(players)\n  }\n\n  /**\n   * Set Backlog Data\n   */\n  setBacklog() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = 1;\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = -1;\n        backlogData[\"Boutton Quiter\"] = -1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Get Note\n   * @param id Id of the player who set the note\n   */\n  getNote(id: number): number {\n    let n = 0\n\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Note' + id)) {\n          n = data[key];\n        }\n      })\n    })\n\n    return n\n  }\n\n  /**\n   * retrieves the function currently noted\n   */\n  getActuelLog(): number {\n    let n = 0;\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('actualLog')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Get default value\n   */\n  getDefaultValue(): string {\n    let n = \"\";\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Default')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Add a not to the Backlog\n   */\n  setBacklogNote() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = this.getNote(parseInt(key.match(/\\d+/)?.[0] || ''));\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Function that starts when a button is pressed\n   * @param id function identifier\n   */\n  selectButton(id: string) {\n    this.game?.playerPushButton(id)\n  }\n\n  /**\n   * Function that starts when the player presses the button continue\n   */\n  valideStage() {\n    if (this.game?.setupDefaultValue()) {\n      const valueElement = document.getElementById(\"stage1\") as HTMLInputElement;\n      if (valueElement.value != \"\") {\n        this.game?.setDefaultValue(valueElement.value)\n      }\n    } else {\n\n      if (this.game?.isDownload()) {\n        this.game?.creatAndDownloadJSON();\n        this.router.navigateByUrl('/').then(r => true);\n      } else {\n        if (this.game?.isRetry()) {\n          this.game?.setActualPlayerTurn(1);\n          this.game?.lunchStage();\n        } else {\n          if (this.game != null) {\n            if (this.game.getActualStage()  {\n        if(n \n    \n\n    \n        \n  \n    \n      clear\n    \n    \n       Résumé \n      Standard value : {{standarValue}}\n      {{backlogValue}}\n    \n  \n  \n    \n\n      \n        \n        \n\n        \n           menu\n        \n      \n\n      \n\n      \n\n      \n\n      \n        \n      \n\n\n      \n        \n          local_cafe\n           {{ i }}\n        \n      \n\n      \n      \n\n\n      \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./game-component.component.scss\n                \n                /* This is a div that contain everything and takes all the page. */\n.container {\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n\n/* The div that contains the title, teh actual task and the button to open the sidenav. */\n.header {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n}\n\n\n/* Here we choose the style for the display of the actual task, the title and the standard value. */\n#textToShow, #StandardValue, #ActualTask {\n  color: white;\n  text-align: center;\n}\n\n#textToShow {\n  grid-column: 1/2;\n  grid-row: 1;\n  text-align: center;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.5em;\n  padding: 10px 0;\n  border-radius: 2.5em;\n  margin: 0 20% 0 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-shadow: 0 0 20px #0fa, 0 0 120px #0fa;\n  color: transparent;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#StandardValue {\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n#ActualTask {\n  grid-column: 3 / 10;\n  grid-row: 1;\n  text-align: center;\n  background-image: url(\"../../../assets/images/hypnotic.jpg\");\n  background-size: 100%;\n  border-radius: 2em;\n  padding: 10px 0;\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  font-family: 'Press Start 2P', serif;\n  min-height: 80px;\n  min-width: 800px;\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  justify-content: center;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#endMessage, #gameModeMessage{\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  text-align: center;\n}\n\n\n/* It's here that we style all things about the sidenav. */\nmat-sidenav-container {\n  height: 100%;\n  background: none;\n}\n\nmat-sidenav {\n  width: 300px;\n  padding: 10px;\n}\n\n.header_sidenav {\n  grid-column: 11;\n  grid-row: 1;\n  transform: scale(1.2);\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: white;\n  padding: 0 10px 100px 0;\n  width: 90%;\n  text-align: right;\n\n  &:active {\n    color: #797777;\n  }\n}\n\n.cross {\n  background: none;\n  color: red;\n  border: none;\n  cursor: pointer;\n\n  &:active {\n    color: #730505;\n  }\n}\n\n\n/* It's the div that contains every card the player can choose. With all the style that came with his children. */\n#PlayerButton {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-button {\n  width: 150px;\n  height: 210px;\n  background-image: url(\"../../../assets/images/card.jpg\");\n  background-size: 95%;\n  filter: brightness(0.8);\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  margin-right: -50px;\n  border-radius: 0.3rem;\n  cursor: url('../../../assets/images/hand.png'), auto;\n  position: relative;\n  z-index: 1;\n  transition: margin-right 0.3s ease, top 0.3s ease;\n\n  &:hover {\n    margin-right: 0;\n    top: -50px;\n  }\n\n  &:active {\n    transform: scale(0.85);\n  }\n}\n\n.card-button_label {\n  width: auto;\n  height: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-shadow: 0 0 7px #0fa, 0 0 120px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 2.5em;\n}\n\n.card-button_icon {\n  height: 210px;\n  text-shadow: rgb(0, 255, 170) 0.1px 0.2px 6px;\n  color: rgb(255, 255, 255);\n  font-size: 3.2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n/* Here is the style of the div that contains the input and the input itself. */\n.input-group {\n  width: 35em;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n\n  &__input {\n    height: calc(1em + 1.6em + 0.5em);\n    width: 100%;\n\n    background-image: linear-gradient(#e3e3e3, #e3e3e3),\n    linear-gradient(120deg, #1beabd 0%, #0ff 50%, #20125f 100%);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n    background-size: 200% 100%;\n    color: #000000;\n\n    line-height: 1;\n    outline: none;\n    padding: 0 1em;\n    font-family: 'Press Start 2P', serif;\n\n    border: 0.25em solid transparent;\n    border-radius: 1.8em;\n\n    &:focus {\n      box-shadow: 0 0 0 0 #fff,\n      3px -3px 30px #1beabd,\n      -3px 3px 30px #10abff;\n    }\n  }\n}\n\n::placeholder {\n  color: #8d8d8d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear               Résumé       Standard value : {{standarValue}}      {{backlogValue}}                                                     menu                                                                            local_cafe           {{ i }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConcret.html":{"url":"classes/GameConcret.html","title":"class - GameConcret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConcret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/GameConcret.ts\n        \n\n\n            \n                Description\n            \n            \n                Class containing all game information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualFunctionInBacklog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                bSetupDefaultValue\n                            \n                            \n                                defaultValue\n                            \n                            \n                                Players\n                            \n                            \n                                PlayersNote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                continueGame\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setStage\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualFunctionInBacklog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:44\n                        \n                    \n\n            \n                \n                    Which backlog function is being written down\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:29\n                        \n                    \n\n            \n                \n                    Backlog list with associated rating\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bSetupDefaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:34\n                        \n                    \n\n            \n                \n                    Has the standard value been defined?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:39\n                        \n                    \n\n            \n                \n                    Standard value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:21\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersNote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:25\n                        \n                    \n\n            \n                \n                    List of players in the game with the notes they have applied\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:148\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:14\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:220\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:96\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:125\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:180\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:118\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:163\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:155\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:111\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:103\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:139\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:213\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:187\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:172\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:89\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:133\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:59\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:81\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:50\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:229\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:73\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\n\n/**\n * Class containing all game information\n * @implements Game\n */\nexport class GameConcret implements Game{\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void {\n      throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * List of players in the game\n   */\n  Players: { [key: number]: string} = {};\n  /**\n   * List of players in the game with the notes they have applied\n   */\n  PlayersNote: { [key : string]: string } = {};\n  /**\n   * Backlog list with associated rating\n   */\n  BacklogData: { [key : string]: number } = {};\n\n  /**\n   * Has the standard value been defined?\n   */\n  bSetupDefaultValue = true;\n\n  /**\n   * Standard value\n   */\n  defaultValue = \"\";\n\n  /**\n   * Which backlog function is being written down\n   */\n  actualFunctionInBacklog : number = 0;\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [p: number]: string }): void {\n    this.Players = players\n    console.log(this.Players);\n  }\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key : string]: number }){\n    this.BacklogData = BacklogData\n  }\n\n  /**\n   * @ignore\n   */\n  chooseDefaultValue(): void {\n  }\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean {\n    return this.bSetupDefaultValue;\n  }\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void {\n    this.defaultValue = value\n    this.bSetupDefaultValue = false;\n  }\n\n  /**\n   * Next step function\n   */\n  nextStage(){\n    this.actualFunctionInBacklog++;\n  }\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number {\n    return this.actualFunctionInBacklog;\n  }\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number {\n    return Object.keys(this.Players).length;\n  }\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string {\n    return this.Players[key];\n  }\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string {\n    return this.defaultValue;\n  }\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [p: string]: number } {\n    return this.BacklogData;\n  }\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void {\n  }\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [p: number]: string } {\n    return this.Players;\n  }\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value : string, key : string) : void {\n    this.PlayersNote[key] = value;\n  }\n\n  /**\n   * Return to note list\n   */\n  getNotes() : { [key : string]: string }{\n    return this.PlayersNote;\n  }\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key : string) : string{\n    return this.PlayersNote[key];\n  }\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key : string, value : number) : void{\n    this.BacklogData[key] = value;\n  }\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number{\n    return this.BacklogData[key];\n  }\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean {\n    return false;\n  }\n\n  /**\n   * @ignore\n   * @param n\n   */\n  setActualPlayerTurn(n: number): void {\n  }\n\n  /**\n   * @ignore\n   */\n  end(): void {\n  }\n\n  /**\n   * @ignore\n   */\n  lunchStage(): void {\n  }\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean {\n    return false;\n  }\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON(): { [p: string]: any } {\n    const test : { [p: string]: any } = {}\n    return test;\n  }\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void {\n    this.actualFunctionInBacklog = nb;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameOptionServiceService.html":{"url":"injectables/GameOptionServiceService.html","title":"injectable - GameOptionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameOptionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/gameOptionService/game-option-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for transmitting data from one scene to another in JSON \nThis allows you to send data to save data when creating a scene\nor when resuming a game from the main menu\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(newData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/gameOptionService/game-option-service.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Function for sending data from one component to another\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Data to be passed from one component to another\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:18\n                        \n                    \n\n            \n                \n                    Variable containing the data sent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:23\n                        \n                    \n\n            \n                \n                    Variable used to retrieve sent data\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n/**\n * Service for transmitting data from one scene to another in JSON \n * This allows you to send data to save data when creating a scene\n * or when resuming a game from the main menu\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameOptionServiceService {\n\n  /**\n   * Variable containing the data sent\n   * @private\n   */\n  private data = new BehaviorSubject(null);\n\n  /**\n   * Variable used to retrieve sent data\n   */\n  data$ = this.data.asObservable();\n\n  /**\n   * Function for sending data from one component to another\n   * @param {any} newData Data to be passed from one component to another\n   * @return {void}\n   */\n  setData(newData: any): void {\n    this.data.next(newData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlBalise.html":{"url":"classes/HtmlBalise.html","title":"class - HtmlBalise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlBalise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/singleton/htmlBalise.ts\n        \n\n\n            \n                Description\n            \n            \n                class singleton which contains the html tags to be modified\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearInstance\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:9\n                        \n                    \n\n            \n                \n                    variable containing singleton class instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        clearInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:49\n                        \n                    \n\n\n            \n                \n                        Function to empty the instance to create a new one\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:39\n                        \n                    \n\n\n            \n                \n                        Function to retrieve class instance\n\n\n                        \n                            Returns :         HtmlBalise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HtmlBalise{\n  /**\n   * variable containing singleton class instance\n   * @private\n   */\n  private static instance: HtmlBalise | null = null;\n\n\n  /** @ignore */ stValue : HTMLElement\n  /** @ignore */ task : HTMLElement\n  /** @ignore */ endMessage : HTMLElement\n  /** @ignore */ title : HTMLDivElement\n  /** @ignore */ playerButton : HTMLDivElement\n  /** @ignore */ validateButton : HTMLButtonElement\n  /** @ignore */ finishButton : HTMLElement;\n  /** @ignore */ gameModeMessage : HTMLDivElement;\n  /** @ignore */ inputValue : HTMLInputElement;\n\n  /** @ignore */\n  private constructor() {\n    this.stValue = document.getElementById(\"StandardValue\") as HTMLElement\n    this.task = document.getElementById(\"ActualTask\") as HTMLElement\n    this.endMessage = document.getElementById(\"endMessage\") as HTMLElement\n    this.title = document.getElementById(\"textToShow\") as HTMLDivElement\n    this.playerButton = document.getElementById(\"PlayerButton\") as HTMLDivElement;\n    this.validateButton = document.getElementById(\"validateButton\") as HTMLButtonElement;\n    this.finishButton = document.getElementById(\"finishButton\") as HTMLElement;\n    this.gameModeMessage = document.getElementById(\"gameModeMessage\") as HTMLDivElement;\n    this.inputValue = document.getElementById(\"stage1\") as HTMLInputElement;\n  }\n\n  /**\n   * Function to retrieve class instance\n   * @return {HtmlBalise}\n   */\n  static getInstance(): HtmlBalise {\n    if (!HtmlBalise.instance){\n      HtmlBalise.instance = new HtmlBalise();\n    }\n    return HtmlBalise.instance;\n  }\n\n  /**\n   * Function to empty the instance to create a new one\n   */\n  static clearInstance(): void{\n    HtmlBalise.instance = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlDisplay.html":{"url":"classes/HtmlDisplay.html","title":"class - HtmlDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/facade/HtmlDisplay.ts\n        \n\n\n            \n                Description\n            \n            \n                Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                addHtmlElement\n                            \n                            \n                                addText\n                            \n                            \n                                clearHTML\n                            \n                            \n                                displayHTML\n                            \n                            \n                                showText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/facade/HtmlDisplay.ts:12\n                        \n                    \n\n            \n                \n                    Variable that contains everything that will be added to the DOM in HTML format\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(id: string, classe: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:63\n                        \n                    \n\n\n            \n                \n                        Function for adding a class to an HTML object by passing its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the element to which you want to add a class\n\n                                            \n                                        \n                                        \n                                                classe\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    name of the class to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHtmlElement\n                        \n                    \n                \n            \n            \n                \naddHtmlElement(type: string, id?: string, additionalValue?: literal type, closeBalise: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:40\n                        \n                    \n\n\n            \n                \n                        Function that adds an HTML tag with its various parameters to the content variable.\nExample ://Example of use\nconst balise = HtmlBalise.getInstance()\nlet html = new HtmlDisplay()\nhtml.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\nhtml.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"div\"\n                                            \n\n                                            \n                                                    type of HTML tag to be placed in the DOM\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    id of element to be added to DOM\n\n                                            \n                                        \n                                        \n                                                additionalValue\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    list containing the add valuers of the add element type of [key : string] : string\n\n                                            \n                                        \n                                        \n                                                closeBalise\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    defined if the added tag is a closing tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addText\n                        \n                    \n                \n            \n            \n                \naddText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:74\n                        \n                    \n\n\n            \n                \n                        Function to add a text to the content, not an HTML tag but a text to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text to be added to content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHTML\n                        \n                    \n                \n            \n            \n                \nclearHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:91\n                        \n                    \n\n\n            \n                \n                        Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element to be emptied\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayHTML\n                        \n                    \n                \n            \n            \n                \ndisplayHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:82\n                        \n                    \n\n\n            \n                \n                        Function for adding content to an HTML object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element in which we'll add all the content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showText\n                        \n                    \n                \n            \n            \n                \nshowText(label: HTMLElement, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:20\n                        \n                    \n\n\n            \n                \n                        Function that places a text in an HTML DOM element\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    reference to an HTML element to which a text has been added\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text which will be placed in an HTML component\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {connect} from \"rxjs\";\nimport transformJavaScript from \"@angular-devkit/build-angular/src/tools/esbuild/javascript-transformer-worker\";\n\n/**\n * Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n */\nexport class HtmlDisplay{\n\n  /**\n   * Variable that contains everything that will be added to the DOM in HTML format\n   */\n  content = \"\";\n\n\n  /**\n   * Function that places a text in an HTML DOM element\n   * @param label {HTMLElement} reference to an HTML element to which a text has been added\n   * @param text {string} text which will be placed in an HTML component\n   */\n  showText(label : HTMLElement, text : string){\n    label.innerText = text;\n  }\n\n  /**\n   * Function that adds an HTML tag with its various parameters to the content variable.\n   *\n   * @example\n   * //Example of use\n   * const balise = HtmlBalise.getInstance()\n   * let html = new HtmlDisplay()\n   * html.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\n   * html.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n   *\n   *\n   * @param type {string} type of HTML tag to be placed in the DOM\n   * @param id {string} id of element to be added to DOM\n   * @param additionalValue {{[string] : string}} list containing the add valuers of the add element type of [key : string] : string\n   * @param closeBalise {boolean} defined if the added tag is a closing tag\n   */\n  addHtmlElement(type : string = \"div\", id? : string, additionalValue? : {[key : string] : string}, closeBalise : boolean = false){\n    if(!closeBalise) {\n      this.content += \" {\n          this.content += key + \"='\" + additionalValue[key] + \"' \"\n        });\n      }\n\n      this.content += \">\"\n    }else{\n      this.content += \"\";\n    }\n  }\n\n  /**\n   * Function for adding a class to an HTML object by passing its ID\n   * @param id {string} id of the element to which you want to add a class\n   * @param classe {string} name of the class to be added\n   */\n  addClass(id: string, classe: string){\n    const element = document.getElementById(id);\n    if(element == null) return\n    console.log(\"aa\")\n    element.classList.add(classe);\n  }\n\n  /**\n   * Function to add a text to the content, not an HTML tag but a text to be displayed.\n   * @param text {string} text to be added to content\n   */\n  addText(text : string){\n    this.content += text;\n  }\n\n  /**\n   * Function for adding content to an HTML object\n   * @param element {HTMLElement} DOM element in which we'll add all the content\n   */\n  displayHTML(element : HTMLElement){\n    element.innerHTML = this.content;\n    this.content = \"\"\n  }\n\n  /**\n   * Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n   * @param element {HTMLElement} DOM element to be emptied\n   */\n  clearHTML(element : HTMLElement){\n    element.innerHTML = \"\";\n    this.content = \"\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationButtonComponent.html":{"url":"components/InformationButtonComponent.html","title":"component - InformationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-button/information-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create an information button to explain the rules and the goal of this website.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-button\n            \n\n\n\n            \n                styleUrls\n                ./information-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/information-button/information-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/information-button/information-button.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\n\n/**\n * Component that create an information button to explain the rules and the goal of this website.\n */\n@Component({\n  selector: 'information-button',\n  templateUrl: './information-button.component.html',\n  styleUrls: ['./information-button.component.scss']\n})\n\nexport class InformationButtonComponent {\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n}\n\n    \n\n    \n        \n  help\n\n\n    \n\n    \n                \n                    ./information-button.component.scss\n                \n                .information_button {\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n\n  &:hover {\n    cursor: pointer;\n    color: #3146d3;\n  }\n}\n\n.icon-display {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  help'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-menu/main-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n\n\n            \n                styleUrls\n                ./main-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualLog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                defaultValue\n                            \n                            \n                                lang\n                            \n                            \n                                mode\n                            \n                            \n                                players\n                            \n                            \n                                popupIsOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changLang\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                openInformation\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main-menu/main-menu.component.ts:15\n                            \n                        \n\n                \n                    \n                            Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changLang\n                        \n                    \n                \n            \n            \n                \nchangLang(lang: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:164\n                        \n                    \n\n\n            \n                \n                        Language change function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    translation language\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:38\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Function to save data from the input JSON file as a variable for use in the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    con contains the JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInformation\n                        \n                    \n                \n            \n            \n                \nopenInformation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Opens or closes popup window when information button is clicked\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Function to send previously recorded data to game-option-service for in-game use\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:70\n                        \n                    \n\n            \n                \n                    First Backlog not yet graded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:54\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:50\n                        \n                    \n\n            \n                \n                    Data sent to the game in JSON format\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:62\n                        \n                    \n\n            \n                \n                    Standard value used\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:33\n                        \n                    \n\n            \n                \n                    Site language\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:58\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:66\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popupIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:28\n                        \n                    \n\n            \n                \n                    Defines whether the popup is already displayed or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {setUpLocationSync} from \"@angular/router/upgrade\";\n\n/**\n * Component that create page for the main menu of the website. We can choose here if we want to start a\n * new game or load a game from a json file.\n */\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit{\n\n  /**\n   * Component that create page for the main menu of the website. We can choose here if we want to start a\n   * new game or load a game from a json file.\n   */\n  constructor(private dataService: GameOptionServiceService, private translateService:TranslateService) {\n\n  }\n\n  /**\n   * Defines whether the popup is already displayed or not\n   */\n  popupIsOpen = false\n\n  /**\n   * Site language\n   */\n  lang = \"\"\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n      const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n      button.style.display = \"none\";\n      const popup = document.getElementById(\"popup\") as HTMLDivElement;\n      popup.style.display = \"none\";\n\n      this.lang = localStorage.getItem('lang') || 'en';\n  }\n\n  /**\n   * Data sent to the game in JSON format\n   */\n  Data: { [Type: string]: string} = {}\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: { [key : string]: number } = {};\n  /**\n   * Select game mode\n   */\n  mode = \"\"\n  /**\n   * Standard value used\n   */\n  defaultValue = \"\"\n  /**\n   * List of players in the game\n   */\n  players : string[] = []\n  /**\n   * First Backlog not yet graded\n   */\n  actualLog = 0;\n\n  /**\n   * Function to save data from the input JSON file as a variable for use in the game\n   * @param event {event} con contains the JSON file\n   */\n  onFileSelected(event: any = 0){\n    this.players = [];\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n      // Extract names from JSON using keys\n\n      this.mode = jsonData.mode\n      this.defaultValue = jsonData.default\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          for (const itemName in item) {\n            if (item.hasOwnProperty(itemName) && itemName !== 'work') {\n              this.BacklogData[itemName] = item[itemName] as number\n            }\n          }\n        }\n      }\n\n      for(const key in jsonData.Players){\n        if (jsonData.Players.hasOwnProperty(key)) {\n          const item : string = jsonData.Players[key];\n          this.players.push(item);\n        }\n      }\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          if (!item.work) {\n            this.actualLog = parseInt(key) - 1;\n            break;\n          }\n        }\n      }\n\n      console.log(this.mode, this.defaultValue, this.BacklogData, this.players, this.actualLog)\n\n      setTimeout(() => {\n        const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n        button.style.display = \"flex\"\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n\n  /**\n   * Function to send previously recorded data to game-option-service for in-game use\n   */\n  sendData(){\n    Object.keys(this.players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + (playerKey + 1);\n      this.Data[strKey] = this.players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n    this.Data[\"Default\"] = this.defaultValue;\n    this.Data[\"actualLog\"] = (this.actualLog + 1) + \"\";\n\n    Object.keys(this.BacklogData).forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n      this.Data[\"Note\" + index] = this.BacklogData[item] + \"\"\n    });\n\n    console.log(\"data\", this.Data);\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * Opens or closes popup window when information button is clicked\n   */\n  openInformation(){\n    const popup = document.getElementById(\"popup\") as HTMLDivElement;\n    if(this.popupIsOpen) popup.style.display = \"none\";\n    else popup.style.display = \"block\";\n    this.popupIsOpen = !this.popupIsOpen;\n  }\n\n  /**\n   * Language change function\n   * @param lang translation language\n   */\n  changLang(lang:any){\n    const selectedLanguage = lang.target.value;\n\n    localStorage.setItem('lang', selectedLanguage);\n    this.translateService.use(selectedLanguage);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    English\n    Français\n  \n\n\n  \n  \n  \n  \n\n\n  \n    \n    {{'JSON_file' | translate}}\n  \n\n\n  {{'GameRules' | translate}}\n  \n    {{'GameRules1' | translate}}\n    {{'GameRules2' | translate}}\n    {{'GameRules3' | translate}}\n    {{'GameRules4' | translate}}\n    {{'GameRules5' | translate}}\n    {{'GameRules6' | translate}}\n  \n\n\n    \n\n    \n                \n                    ./main-menu.component.scss\n                \n                .container_button {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 40%;\n}\n\n.container_info-button {\n  height: 25%;\n  padding: 80px 15px 0 35px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\nstart-button {\n  transform: scale(1.5);\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    font-family: 'Press Start 2P', serif;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n.container_bottom{\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  justify-content: center;\n  height: 20%;\n}\n\n#popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  padding: 20px;\n  border: 1px solid #ccc;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          English    Français                    {{\\'JSON_file\\' | translate}}    {{\\'GameRules\\' | translate}}      {{\\'GameRules1\\' | translate}}    {{\\'GameRules2\\' | translate}}    {{\\'GameRules3\\' | translate}}    {{\\'GameRules4\\' | translate}}    {{\\'GameRules5\\' | translate}}    {{\\'GameRules6\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCardComponent.html":{"url":"components/PlayerCardComponent.html","title":"component - PlayerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-card/player-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a card for the player and their name, to have a better display\nin the .\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-card\n            \n\n\n\n            \n                styleUrls\n                ./player-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                i\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-card/player-card.component.ts:17\n                            \n                        \n                \n                    \n                        Value of the current player.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * Component that create a card for the player and their name, to have a better display\n * in the .\n */\n@Component({\n  selector: 'player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.scss']\n})\n\nexport class PlayerCardComponent {\n  /**\n   * Value of the current player.\n   */\n  @Input() i: number = 0;\n}\n\n    \n\n    \n        \n   Player {{i}} \n  \n\n\n    \n\n    \n                \n                    ./player-card.component.scss\n                \n                .card {\n  display: flex;\n  background-image: url(\"../../../assets/images/player-card-background.jpg\");\n  background-size: 50%;\n  flex-direction: column;\n  border-radius: 0.3rem;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem;\n  border: 1px solid #e0e0e0;\n  transition: 0.8s;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  width: 160px;\n\n  &:hover {\n    border: 1px solid #b0b0b0;\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.35);\n  }\n}\n\nh1 {\n  color: #fff;\n  text-shadow:\n    0 0 7px #fff,\n    0 0 10px #fff,\n    0 0 21px #fff,\n    0 0 42px #0fa,\n    0 0 82px #0fa,\n    0 0 92px #0fa,\n    0 0 102px #0fa,\n    0 0 151px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.2em;\n}\n\ninput {\n  background: #001546;\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 0.5em;\n  border: 1px solid white;\n  border-radius: 0.3rem;\n  padding: 7px 0 7px 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Player {{i}}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponentComponent.html":{"url":"components/SettingsComponentComponent.html","title":"component - SettingsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings-component/settings-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the page where the user will choose every option for his game.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-component\n            \n\n\n\n            \n                styleUrls\n                ./settings-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                mode\n                            \n                            \n                                playerMax\n                            \n                            \n                                playerNumber\n                            \n                            \n                                Players\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayerName\n                            \n                            \n                                changeMod\n                            \n                            \n                                getSliderValue\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlayerName\n                        \n                    \n                \n            \n            \n                \naddPlayerName(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Changes the name of the player whose name has just been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    input text value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMod\n                        \n                    \n                \n            \n            \n                \nchangeMod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Change game mode\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    value of check box\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSliderValue\n                        \n                    \n                \n            \n            \n                \ngetSliderValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Modifies the number of players by the slider value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    slider value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Changes backlog values based on imported JSON file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Sends data to the game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:26\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:21\n                        \n                    \n\n            \n                \n                    Data that will be passed to the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"strict\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:36\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:31\n                        \n                    \n\n            \n                \n                    Maximum number of players per game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:41\n                        \n                    \n\n            \n                \n                    Current number of players\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of players\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create the page where the user will choose every option for his game.\n */\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings-component.component.html',\n  styleUrls: ['./settings-component.component.scss']\n})\n\nexport class SettingsComponentComponent {\n  /** @ignore */\n  constructor(private dataService: GameOptionServiceService) {\n  }\n\n  /**\n   * Data that will be passed to the game\n   */\n  Data: { [Type: string]: string } = {}\n\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: string[] = [];\n\n  /**\n   * Maximum number of players per game\n   */\n  playerMax: number = 15;\n\n  /**\n   * Select game mode\n   */\n  mode = \"strict\";\n\n  /**\n   * Current number of players\n   */\n  playerNumber: number = 2;\n  /**\n   * List of players\n   */\n  Players: { [key: number]: string } = {}\n  /** @ignore */playersNb: number[] = [1, 2]\n\n  /**\n   * Modifies the number of players by the slider value\n   * @param event slider value\n   */\n  getSliderValue(event: any = 0) {\n    this.playerNumber = event.target.value;\n    this.playersNb = []\n    for (let i = 1; i  0) {\n      const placeholder = event.target.placeholder;\n      const match = placeholder.replace(/\\D/g, \"\");\n      const id = parseInt(match);\n      this.Players[id] = event.target.value.substring(0, 7);\n      console.log(this.Players);\n    }\n  }\n\n  /**\n   * Change game mode\n   * @param event value of check box\n   */\n  changeMod(event: any = 0) {\n    this.mode = event.target.value;\n    console.log(this.mode);\n  }\n\n  /**\n   * Changes backlog values based on imported JSON file\n   * @param event JSON file\n   */\n  onFileSelected(event: any = 0) {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n\n      // Extract names from JSON using keys\n      const namesArray: string[] = [];\n      for (const key in jsonData) {\n        if (jsonData.hasOwnProperty(key) && jsonData[key]?.name) {\n          namesArray.push(jsonData[key].name);\n        }\n      }\n      this.BacklogData = namesArray;\n      setTimeout(() => {\n        console.log(this.BacklogData);\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n  /**\n   * Sends data to the game\n   */\n  sendData(){\n    console.log(\"test\");\n    Object.keys(this.Players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + playerKey;\n      this.Data[strKey] = this.Players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n\n    this.BacklogData.forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n    });\n\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * @ignore\n   * @protected\n   */\n  protected readonly console = console;\n}\n\n    \n\n    \n        \n  \n    \n      \n         Numbers of Players \n        \n        {{ playerNumber }}\n      \n\n      \n        \n      \n    \n\n    \n      \n         Game mode\n        \n          \n            \n            Strict\n            \n            \n          \n          \n            \n            Absolute Majority \n            \n            \n          \n          \n            \n            Average\n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n      Chose a json file\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-component.component.scss\n                \n                form {\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.form_top {\n  display: flex;\n  flex-direction: row;\n  height: 82%;\n  width: 100%;\n}\n\n.top_left {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 80%;\n}\n\n.top_right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  width: 20%;\n}\n\n.left_number-players {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20%;\n}\n\n.left_players {\n  display: flex;\n  width: 100%;\n  height: 80%;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.right_style-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & h3 {\n    font-family: 'Press Start 2P', serif;\n    font-size: 1.4em;\n    margin: 0;\n  }\n}\n\n.bottom_input-json {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & input {\n    color: white;\n    font-family: 'Press Start 2P', serif;\n  }\n}\n\n\n.form_bottom {\n  display: flex;\n  width: 100%;\n  height: 25%;\n  margin-top: 15px;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n\nul {\n  list-style-type: none;\n}\n\nli {\n  position: relative;\n  padding: 10px 10px 10px 40px;\n  height: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n\n  &:active {\n    color: #3351ff !important;\n  }\n}\n\n.style-game_label:before {\n  content: \"\";\n  width: 15px;\n  height: 15px;\n  background: #fff;\n  position: absolute;\n  left: 7px;\n  top: calc(50% - 13px);\n  box-sizing: border-box;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"] {\n  opacity: 0;\n  -webkit-appearance: none;\n  display: inline-block;\n  vertical-align: middle;\n  z-index: 100;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 30px;\n  position: absolute;\n  left: 0;\n  top: calc(50% - 15px);\n  cursor: pointer;\n}\n\n.circle {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  left: -3px;\n  top: 2px;\n  border: 5px solid #fff;\n  opacity: 0;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked ~ .circle {\n  position: absolute;\n  opacity: 1;\n  animation-name: explode;\n  animation-duration: 0.350s;\n}\n\n@keyframes explode {\n  0% {\n    opacity: 0;\n    transform: scale(4);\n  }\n  60% {\n    opacity: 1;\n    transform: scale(0.5);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Numbers of Players                 {{ playerNumber }}                                                 Game mode                                          Strict                                                                    Absolute Majority                                                                     Average                                                                        Chose a json file                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartButtonComponent.html":{"url":"components/StartButtonComponent.html","title":"component - StartButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/start-button/start-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a configurable button with some specific style, the only change possible\nis the link, the color of the background and the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                start-button\n            \n\n\n\n            \n                styleUrls\n                ./start-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./start-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captionBackground\n                            \n                            \n                                captionColor\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                pushableBackground\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captionBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:21\n                            \n                        \n                \n                    \n                        Variable to change the background color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        captionColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:26\n                            \n                        \n                \n                    \n                        Variable to change the text color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        link\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:36\n                            \n                        \n                \n                    \n                        Variable to change the link of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:31\n                            \n                        \n                \n                    \n                        Variable to change the text on a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pushableBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable to change the color under a button when it's called in another component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:41\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n/**\n * Component that create a configurable button with some specific style, the only change possible\n * is the link, the color of the background and the text.\n */\n@Component({\n  selector: 'start-button',\n  templateUrl: './start-button.component.html',\n  styleUrls: ['./start-button.component.scss']\n})\nexport class StartButtonComponent implements OnInit{\n  /**\n   * Variable to change the color under a button when it's called in another component.\n   */\n  @Input() pushableBackground: string = '';\n\n  /**\n   * Variable to change the background color of a button when it's called in another component.\n   */\n  @Input() captionBackground: string = '';\n\n  /**\n   * Variable to change the text color of a button when it's called in another component.\n   */\n  @Input() captionColor: string = '';\n\n  /**\n   * Variable to change the text on a button when it's called in another component.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Variable to change the link of a button when it's called in another component.\n   */\n  @Input() link: string = '';\n\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n\n  }\n}\n\n    \n\n    \n        \n   {{ name }} \n\n\n    \n\n    \n                \n                    ./start-button.component.scss\n                \n                .pushable_button {\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n}\n\n.caption_button {\n  display: block;\n  padding: 20px 50px;\n  border-radius: 12px;\n  border: 3px solid white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.7rem;\n  text-shadow: 1px 1px 2px #000000;\n  transform: translateY(-6px);\n}\n\n.caption_button:hover {\n  filter: brightness(90%);\n  color: #c7c7c7 !important;\n}\n\n\n.pushable_button:active .caption_button {\n  transform: translateY(-2px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ name }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title/title.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the title of the website and all the style that come with it, on the main menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pp-title\n            \n\n\n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that create the title of the website and all the style that come with it, on the main menu.\n */\n@Component({\n  selector: 'pp-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n}\n\n    \n\n    \n        \n  \n    PLANNING\n    PLANNING\n  \n  POKER\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Mr+Dafoe&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@900&display=swap');\n\nh1 {\n  position: relative;\n  font-family: 'Exo', serif;\n  font-size: 11em;\n  margin: 0;\n  transform: skew(-15deg);\n  letter-spacing: 0.03em;\n\n  span:first-child {\n    display: block;\n    text-shadow: 0 0 0.1em #8ba2d0, 0 0 0.2em black, 0 0 5em #165ff3;\n    -webkit-text-stroke: 0.06em rgba(black, 0.5);\n  }\n\n  span:last-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-image: linear-gradient(#032d50 25%, #00a1ef 35%, white 50%, #20125f 50%, #8313e7 55%, #ff61af 75%);\n    -webkit-text-stroke: 0.01em #94a0b9;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\nh2 {\n  font-family: 'Mr Dafoe', serif;\n  font-size: 5.5em;\n  margin-left: 3em;\n  color: white;\n  text-shadow: 0 0 0.05em #fff, 0 0 0.2em #281775, 0 0 0.3em #20125f;\n  transform: rotate(-7deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PLANNING    PLANNING    POKER'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/AverageDecorator.ts\n            \n            class\n            AverageDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/Game.ts\n            \n            interface\n            Game\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/GameConcret.ts\n            \n            class\n            GameConcret\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/MajabsDecorator.ts\n            \n            class\n            MajabsDecorator\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/ModeDecorator.ts\n            \n            class\n            ModeDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/StrictDecorator.ts\n            \n            class\n            StrictDecorator\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/classes/facade/HtmlDisplay.ts\n            \n            class\n            HtmlDisplay\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/classes/singleton/htmlBalise.ts\n            \n            class\n            HtmlBalise\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/game-component/game-component.component.ts\n            \n            component\n            GameComponentComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/components/information-button/information-button.component.ts\n            \n            component\n            InformationButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/components/player-card/player-card.component.ts\n            \n            component\n            PlayerCardComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/settings-component/settings-component.component.ts\n            \n            component\n            SettingsComponentComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/start-button/start-button.component.ts\n            \n            component\n            StartButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/gameOptionService/game-option-service.service.ts\n            \n            injectable\n            GameOptionServiceService\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.7\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^17.0.7\n        \n            @angular/compiler : ^17.0.7\n        \n            @angular/core : ^17.0.7\n        \n            @angular/forms : ^17.0.7\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^17.0.7\n        \n            @angular/platform-browser-dynamic : ^17.0.7\n        \n            @angular/router : ^17.0.7\n        \n            @angular/upgrade : ^17.0.7\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeface-press-start-2p : ^1.1.13\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanningPokerPP\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
