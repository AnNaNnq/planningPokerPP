var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.069,1,0.626]],["body/components/AppComponent.html",[0,0.132,1,1.157,2,1.475,3,0.53,4,0.446,5,1.338,6,1.338,7,1.188,8,1.338,9,0.446,10,2.983,11,0.716,12,1.605,13,1.661,14,3.142,15,1.338,16,2.059,17,1.678,18,3.703,19,1.661,20,4.954,21,1.661,22,4.555,23,0.716,24,1.157,25,1.678,26,0.716,27,0.047,28,1.338,29,1.054,30,0.932,31,3.703,32,0.82,33,3.669,34,1.87,35,2.387,36,1.011,37,2.722,38,0.716,39,0.82,40,0.53,41,0.293,42,1.87,43,3.669,44,1.506,45,1.506,46,1.475,47,1.506,48,3.669,49,3.669,50,3.669,51,1.054,52,1.308,53,1.475,54,1.338,55,1.889,56,1.338,57,1.338,58,0.716,59,0.62,60,1.661,61,0.82,62,1.188,63,1.661,64,0.716,65,1.338,66,0.82,67,1.054,68,1.338,69,0.716,70,1.338,71,0.82,72,0.82,73,1.338,74,1.338,75,1.338,76,0.037,77,0.037]],["title/modules/AppModule.html",[78,1.675,79,1.675]],["body/modules/AppModule.html",[1,1.261,3,0.493,4,0.415,9,0.415,17,1.104,27,0.047,38,1.119,39,0.761,40,0.493,41,0.272,51,0.979,58,1.04,61,1.19,64,1.04,66,1.19,69,1.04,71,1.19,72,1.19,76,0.035,77,0.035,78,2.036,79,3.483,80,1.786,81,2.036,82,3.893,83,3.893,84,3.535,85,2.35,86,2.77,87,2.77,88,2.77,89,2.77,90,2.793,91,4.332,92,3.535,93,2.77,94,2.35,95,3.408,96,3.535,97,3.535,98,4.348,99,3.535,100,2.35,101,3.408,102,3.408,103,3.408,104,2.35,105,4.348,106,3.408,107,2.35,108,2.77,109,2.036,110,2.77,111,4.348,112,3.408,113,4.348,114,3.408,115,2.77,116,2.036,117,3.535,118,2.77,119,2.036,120,3.408,121,3.408,122,2.35,123,3.408,124,2.77,125,4.348,126,3.408,127,4.348,128,3.408]],["title/modules/AppRoutingModule.html",[78,1.675,90,1.469]],["body/modules/AppRoutingModule.html",[0,0.129,3,0.593,4,0.499,9,0.499,27,0.047,38,1.073,39,0.917,40,0.593,41,0.327,58,0.952,59,0.694,64,0.952,69,0.952,76,0.039,77,0.039,80,2.152,85,2.831,90,2.556,96,3.337,97,3.965,108,3.337,109,2.453,110,3.337,115,3.337,116,2.453,117,3.965,118,3.337,119,2.453,129,4.105,130,4.105,131,4.877,132,3.109,133,2.831,134,1.9,135,5.383,136,4.105,137,4.877,138,4.105,139,4.105,140,4.105,141,4.105]],["title/interfaces/Game.html",[59,0.474,142,1.675]],["body/interfaces/Game.html",[3,0.265,4,0.223,9,0.415,11,0.997,23,0.358,26,1.052,27,0.048,28,2.084,30,1.382,32,1.233,36,1.008,40,0.265,59,0.81,67,1.45,76,0.023,77,0.023,142,1.678,143,1.833,144,1.49,145,1.833,146,1.49,147,1.49,148,0.807,149,2.283,150,3.111,151,2.283,152,3.111,153,3.002,154,3.111,155,3.111,156,2.283,157,2.639,158,1.937,159,3.111,160,2.283,161,3.111,162,3.111,163,3.111,164,3.111,165,3.111,166,2.283,167,3.111,168,2.283,169,2.808,170,2.283,171,2.283,172,1.937,173,2.283,174,3.111,175,2.283,176,2.452,177,1.833,178,1.937,179,3.808,180,2.646,181,2.311,182,2.072,183,2.072,184,1.472,185,1.937,186,1.595,187,1.586,188,1.833,189,2.808,190,2.646,191,2.283,192,3.017,193,2.283,194,2.639,195,2.601,196,1.833,197,2.283,198,1.937,199,2.283,200,1.937,201,1.937,202,2.707,203,1.833,204,0.91,205,3.002,206,3.111,207,2.006,208,2.45,209,1.833,210,2.808,211,2.808,212,3.111,213,2.808,214,1.833,215,2.303,216,2.287,217,2.283,218,1.833,219,2.282,220,2.283,221,1.833,222,1.3,223,2.283,224,1.833,225,2.283,226,2.283,227,1.833,228,2.283,229,3.111,230,1.833,231,2.015,232,2.283,233,1.833,234,2.283,235,1.833,236,1.833,237,1.833,238,1.678,239,2.602,240,1.833,241,2.283,242,2.283,243,1.833,244,2.808,245,2.808,246,2.283,247,3.827,248,2.283,249,1.472,250,1.937,251,2.808,252,2.283,253,2.006,254,2.283,255,1.833,256,1.3,257,1.833,258,2.283,259,2.283,260,2.283,261,1.833,262,2.283,263,2.283,264,2.283,265,2.283,266,2.283,267,2.283,268,1.833,269,2.287,270,3.827,271,1.937,272,2.283,273,1.833,274,3.539,275,2.283,276,1.833,277,2.283,278,1.833,279,2.283,280,1.833,281,2.283,282,1.833,283,1.937,284,1.937,285,2.283,286,2.14,287,1.49]],["title/components/GameComponentComponent.html",[0,0.069,58,0.547]],["body/components/GameComponentComponent.html",[0,0.083,1,0.274,2,0.66,3,0.178,4,0.149,5,0.743,6,0.448,7,0.398,8,0.448,9,0.149,11,0.594,12,0.398,13,1.685,14,0.847,15,0.448,16,1.576,17,0.66,19,0.743,21,0.743,23,0.51,24,0.518,25,0.847,26,0.818,27,0.048,28,1.714,29,1.046,30,1.126,32,1.113,35,1.77,36,0.659,38,0.844,39,0.274,40,0.178,41,0.308,42,1.862,44,1.495,45,1.495,46,1.437,47,1.495,51,0.353,52,0.874,53,0.66,54,0.448,55,1.11,56,0.448,57,0.448,58,0.594,59,0.891,60,0.743,61,0.274,62,0.398,63,0.743,64,0.24,65,0.448,66,0.274,67,1.161,68,0.448,69,0.24,70,0.448,71,0.274,72,0.274,73,0.448,74,0.448,75,0.448,76,0.016,77,0.016,119,3.005,133,0.847,134,0.944,148,0.586,157,2.1,158,1.406,172,2.1,176,1.21,179,2.1,180,1.909,181,1.775,182,1.073,183,1.073,184,1.069,185,1.406,186,1.274,187,1.161,190,0.644,192,1.562,195,2.001,202,2.023,215,1.563,219,1.069,231,0.944,239,1.218,249,1.069,253,1.595,269,2.177,271,2.892,286,1.25,288,4.087,289,0.847,290,2.039,291,1.595,292,3.044,293,2.1,294,2.125,295,1.657,296,3.377,297,2.125,298,2.307,299,2.615,300,2.615,301,3.377,302,3.044,303,3.044,304,3.044,305,3.044,306,2.039,307,3.044,308,3.044,309,3.044,310,1.803,311,0.998,312,1.563,313,4.437,314,1.228,315,1.803,316,2.325,317,2.039,318,1.228,319,2.039,320,2.039,321,1.228,322,1.228,323,2.329,324,2.039,325,1.228,326,1.228,327,2.039,328,1.228,329,3.643,330,2.018,331,2.039,332,2.039,333,1.228,334,2.177,335,2.039,336,1.657,337,1.228,338,1.228,339,1.228,340,1.228,341,2.039,342,2.039,343,0.998,344,1.562,345,3.643,346,1.228,347,1.657,348,0.944,349,2.039,350,2.475,351,1.228,352,1.228,353,2.252,354,2.71,355,1.803,356,2.615,357,2.039,358,1.657,359,1.803,360,1.657,361,3.06,362,2.039,363,0.998,364,1.657,365,1.406,366,1.562,367,1.228,368,2.039,369,2.615,370,1.228,371,2.039,372,1.228,373,1.218,374,1.228,375,0.998,376,1.228,377,0.847,378,0.644,379,0.847,380,1.228,381,1.228,382,0.998,383,1.228,384,0.998,385,1.228,386,0.847,387,0.847,388,0.734,389,0.847,390,1.228,391,0.998,392,1.228,393,2.023,394,1.228,395,0.925,396,3.643,397,2.615,398,1.657,399,2.039,400,1.228,401,1.228,402,1.228,403,1.228,404,1.228,405,1.228,406,1.228,407,1.228,408,1.228,409,1.228,410,1.228,411,4.041,412,2.512,413,4.041,414,1.228,415,3.377,416,2.615,417,1.228,418,1.657,419,1.228,420,0.998,421,1.228,422,1.406,423,1.228,424,1.228,425,1.228,426,1.228,427,1.228,428,1.228,429,2.039,430,2.039,431,3.044,432,2.039,433,2.039,434,1.228,435,1.228,436,1.228,437,1.228,438,1.228,439,1.228,440,1.228,441,0.998,442,0.998,443,1.228,444,1.228,445,1.228,446,1.228,447,1.228,448,1.228,449,1.228,450,1.228,451,1.228,452,1.228,453,2.039,454,2.039,455,1.218,456,2.039,457,2.475,458,1.228,459,1.228,460,2.039,461,2.892,462,2.982,463,2.71,464,1.819,465,2.329,466,2.307,467,1.787,468,1.218,469,0.998,470,2.71,471,2.307,472,2.887,473,1.228,474,2.039,475,3.044,476,1.228,477,4.041,478,1.228,479,1.228,480,1.228,481,2.125,482,1.406,483,1.819,484,2.039,485,2.039,486,2.039,487,1.775,488,1.77,489,2.001,490,1.228,491,2.329,492,1.686,493,1.941,494,1.228,495,1.909,496,2.177,497,2.054,498,1.595,499,2.039,500,2.1,501,1.228,502,2.177,503,0.847,504,2.475,505,2.039,506,1.406,507,1.406,508,1.657,509,1.218,510,1.657,511,2.615,512,0.847,513,1.657,514,1.821,515,1.803,516,1.228,517,1.228,518,2.039,519,1.37,520,2.512,521,1.406,522,1.77,523,1.803,524,3.044,525,1.657,526,2.039,527,0.998,528,1.228,529,2.039,530,2.039,531,2.125,532,0.998,533,0.998,534,1.406,535,1.228,536,2.039,537,1.228,538,1.228,539,1.228,540,0.944,541,1.228,542,1.37,543,1.069,544,1.228,545,1.228,546,3.044,547,1.803,548,1.228,549,1.228,550,1.228,551,1.228,552,1.228,553,0.847,554,0.998,555,1.228,556,2.615,557,1.228,558,1.228,559,0.998,560,1.228,561,1.657,562,0.998,563,1.228,564,2.039,565,0.734,566,0.734,567,1.406,568,0.998,569,1.657,570,2.039,571,1.218,572,0.644,573,1.228,574,1.228,575,1.228,576,1.228,577,2.615,578,1.228,579,1.228,580,1.228,581,0.998,582,1.228,583,1.228,584,1.37,585,1.228,586,1.228,587,1.228,588,1.228,589,1.228,590,1.228,591,0.998,592,1.657,593,1.228,594,1.228,595,1.228,596,2.039,597,1.228,598,0.644,599,0.998,600,1.228,601,0.998,602,1.228,603,0.998,604,0.998,605,1.228,606,1.228,607,2.1,608,1.228,609,0.847,610,1.228]],["title/classes/GameConcret.html",[41,0.224,373,1.675]],["body/classes/GameConcret.html",[3,0.236,4,0.199,9,0.386,11,0.959,23,0.319,24,0.653,26,1.067,27,0.048,28,2.081,29,1.193,30,1.411,32,1.232,36,0.972,38,0.319,40,0.236,41,0.253,59,0.861,62,0.832,67,1.293,76,0.021,77,0.021,134,0.757,148,0.738,149,2.089,150,1.329,151,2.089,152,2.926,153,1.127,154,2.926,155,2.926,156,2.089,157,2.483,158,1.772,159,2.926,160,2.089,161,2.926,162,2.926,163,2.926,164,2.926,165,1.329,166,2.089,167,2.926,168,2.089,170,2.089,171,2.089,172,1.772,173,2.089,174,2.926,175,2.089,176,2.402,178,1.772,179,3.727,180,2.643,181,2.264,182,1.983,183,1.983,184,1.347,185,1.772,186,1.552,187,1.522,190,2.697,192,3.014,193,2.089,194,2.483,195,2.577,197,2.089,198,1.772,199,2.089,200,1.772,201,2.699,202,2.574,204,0.832,205,2.483,206,2.926,207,1.347,208,2.532,215,2.501,216,1.536,217,2.089,219,2.484,220,2.089,222,1.19,223,2.089,225,2.089,226,2.089,228,2.089,229,2.926,231,2.274,232,2.089,234,2.089,238,1.536,239,2.483,241,2.089,242,2.089,253,1.347,254,2.089,256,1.19,258,2.089,259,2.089,260,2.089,262,2.089,263,2.089,264,2.089,265,2.926,266,2.089,267,1.329,269,1.536,271,1.127,272,2.089,274,3.377,275,2.089,277,2.089,279,2.089,281,2.582,283,1.772,284,1.772,285,2.089,286,2.092,287,3.181,291,1.664,348,1.19,353,1.055,365,1.772,366,1.898,373,1.536,388,2.151,395,0.415,418,2.089,611,0.977,612,1.329,613,3.176,614,3.176,615,3.176,616,1.635,617,2.57,618,2.57,619,2.089,620,1.635,621,2.57,622,1.635,623,1.635,624,1.635,625,1.635,626,2.57,627,1.635,628,1.635,629,1.635,630,1.635,631,1.635,632,1.635,633,1.635,634,1.635,635,1.635,636,1.635,637,1.635,638,1.635,639,1.635,640,1.635,641,1.635,642,1.635,643,1.635,644,1.635,645,1.635,646,1.635,647,1.635,648,1.635,649,1.635,650,1.635,651,1.635,652,2.089,653,1.329,654,1.772,655,2.57,656,2.089,657,3.176,658,1.635,659,1.635,660,2.57,661,1.635,662,2.57,663,2.089]],["title/injectables/GameOptionServiceService.html",[312,1.298,664,1.675]],["body/injectables/GameOptionServiceService.html",[0,0.126,3,0.507,4,0.426,9,0.426,11,0.864,12,1.434,18,2.849,23,0.684,24,1.124,26,0.684,27,0.047,29,1.271,30,1.124,32,1.084,34,2.092,36,0.684,38,0.864,39,0.783,40,0.507,41,0.279,59,0.748,76,0.036,77,0.036,148,1.271,181,1.817,182,1.438,183,1.438,186,1.006,187,1.393,200,3.052,207,2.32,215,1.622,222,2.049,286,1.438,312,2.049,316,3.039,348,2.049,378,2.671,387,3.515,395,1.124,455,2.645,664,2.645,665,3.504,666,4.143,667,2.849,668,3.598,669,4.426,670,3.702,671,5.096,672,4.363,673,3.598,674,2.645,675,3.598,676,4.426,677,4.426,678,4.426,679,3.504,680,4.426,681,4.426,682,3.598,683,4.426,684,3.504,685,4.143,686,4.426,687,3.504,688,3.598,689,3.504,690,2.417,691,3.504,692,3.504]],["title/classes/HtmlBalise.html",[41,0.224,344,1.675]],["body/classes/HtmlBalise.html",[3,0.478,4,0.403,9,0.403,11,0.646,23,0.646,24,1.083,25,1.072,26,0.646,27,0.048,29,0.95,30,0.84,32,1.055,34,1.751,35,1.734,40,0.478,41,0.422,52,0.95,76,0.034,77,0.034,148,1.226,181,2.048,186,1.226,187,1.226,204,1.382,215,1.975,222,1.975,249,1.734,310,2.282,344,3.257,347,3.839,348,1.975,387,3.561,388,3.319,395,1.199,412,3.561,441,2.69,442,3.468,532,2.69,533,2.69,554,2.69,611,1.977,670,2.943,693,2.69,694,3.309,695,3.309,696,5.507,697,5.507,698,4.989,699,4.989,700,3.309,701,3.309,702,3.468,703,3.309,704,3.309,705,4.431,706,4.298,707,3.309,708,3.468,709,3.309,710,3.309,711,3.309,712,3.309,713,3.309,714,3.309,715,3.309,716,3.309,717,3.309,718,3.309,719,3.309,720,3.309,721,3.309,722,3.309,723,3.309,724,3.309,725,3.309,726,3.309,727,3.309,728,4.989]],["title/classes/HtmlDisplay.html",[41,0.224,298,1.675]],["body/classes/HtmlDisplay.html",[0,0.08,3,0.32,4,0.269,7,1.757,9,0.269,11,0.941,14,2.899,23,0.432,24,0.821,26,1.065,27,0.048,28,2.082,29,0.928,30,0.821,32,1.127,34,1.725,35,1.694,36,0.965,38,0.631,40,0.32,41,0.402,52,1.61,53,1.798,76,0.026,77,0.026,134,1.769,146,2.628,147,2.628,148,0.928,176,1.946,178,2.899,181,2.157,182,2.03,183,1.917,184,2.754,186,1.341,187,1.341,191,3.417,202,2.754,208,1.694,215,1.024,231,1.496,239,2.512,249,2.203,286,2.133,297,2.628,298,2.512,348,1.496,350,2.628,366,2.512,391,2.628,395,0.821,412,1.525,457,2.628,467,2.456,489,2.579,609,2.229,611,1.322,673,2.628,690,1.525,702,2.628,705,4.271,729,1.798,730,2.628,731,3.233,732,3.233,733,3.233,734,3.233,735,3.233,736,3.233,737,3.233,738,3.233,739,3.233,740,3.233,741,2.211,742,5.35,743,2.628,744,3.233,745,4.203,746,2.211,747,4.203,748,3.233,749,2.628,750,3.233,751,4.203,752,4.203,753,2.211,754,3.233,755,5.255,756,3.233,757,4.203,758,2.229,759,3.233,760,3.233,761,3.233,762,3.233,763,3.233,764,4.203,765,3.233,766,3.233,767,3.233,768,3.233,769,2.211,770,2.628,771,3.233,772,2.211,773,3.233,774,2.628,775,3.233,776,3.233,777,2.211,778,3.233,779,3.233,780,2.211,781,3.233,782,2.229,783,2.628,784,2.211,785,2.211,786,1.798,787,2.211,788,2.211,789,2.211,790,2.211,791,2.211,792,2.211,793,4.945,794,2.211,795,2.211,796,2.211,797,2.211,798,2.211,799,3.233]],["title/components/InformationButtonComponent.html",[0,0.069,61,0.626]],["body/components/InformationButtonComponent.html",[0,0.129,1,0.761,2,1.408,3,0.493,4,0.415,5,1.243,6,1.243,7,1.104,8,1.243,9,0.415,11,0.665,12,1.104,13,1.243,15,1.243,16,2.035,17,1.408,19,1.586,21,1.586,23,0.665,25,1.104,26,0.665,27,0.047,32,0.971,34,2.071,36,0.849,37,2.599,38,0.665,39,0.761,40,0.493,41,0.272,46,1.104,51,0.979,52,1.249,53,1.408,54,1.243,55,1.839,56,1.243,57,1.243,58,0.665,59,0.576,60,1.586,61,1.127,62,1.807,63,1.586,64,0.665,65,1.243,66,0.761,67,0.979,68,1.243,69,0.665,70,1.243,71,0.761,72,0.761,73,1.243,74,1.243,75,1.243,76,0.035,77,0.035,107,3.303,148,1.249,186,0.979,187,0.979,204,1.408,334,3.015,393,1.786,395,0.865,487,1.966,497,1.577,506,2.35,510,2.77,514,1.399,540,1.577,542,1.786,543,1.786,572,1.786,674,3.015,800,3.893,801,2.35,802,3.535,803,3.535,804,4.348,805,3.893,806,3.535,807,4.101,808,3.535,809,4.236,810,3.893,811,2.77,812,4.101,813,3.535,814,2.999,815,2.77,816,3.535,817,2.77,818,3.535,819,3.408,820,3.408,821,3.408,822,2.77]],["title/components/MainMenuComponent.html",[0,0.069,64,0.547]],["body/components/MainMenuComponent.html",[0,0.107,1,0.359,2,0.821,3,0.232,4,0.196,5,0.586,6,0.586,7,0.52,8,0.586,9,0.604,11,0.495,12,1.584,13,1.415,15,0.586,16,1.719,17,1.155,19,0.925,21,0.925,23,0.757,24,0.905,25,0.52,26,0.939,27,0.048,28,1.719,29,1.405,30,1.242,32,1.092,34,1.041,35,1.329,36,0.696,37,2.131,38,0.495,39,0.359,40,0.232,41,0.128,42,1.041,44,0.66,45,0.66,46,1.492,47,0.66,51,0.462,52,0.728,53,0.821,54,1.145,55,1.3,56,0.586,57,0.586,58,0.314,59,0.933,60,0.925,61,0.359,62,1.017,63,0.925,64,0.696,65,0.586,66,0.359,67,1.024,68,0.586,69,0.314,70,0.586,71,0.359,72,0.359,73,0.586,74,0.586,75,0.586,76,0.02,77,0.02,109,2.965,134,2.374,148,0.728,176,1.651,180,2.161,181,1.464,182,1.041,183,1.041,186,1.024,187,1.115,190,2.034,192,1.515,194,2.166,195,1.651,201,2.166,204,1.155,205,1.749,207,2.732,208,1.329,212,2.061,219,1.646,222,1.174,231,1.651,238,1.515,246,2.061,248,2.061,249,2.161,250,1.108,253,1.329,256,1.174,269,1.515,283,1.749,284,1.749,286,0.66,291,1.329,293,2.166,310,1.108,311,1.306,312,1.651,315,1.749,316,2.52,323,2.978,330,2.131,334,2.674,348,1.174,353,1.89,354,2.465,359,1.108,360,1.306,365,2.459,366,1.515,377,1.108,378,1.646,379,1.108,386,1.108,389,2.459,393,1.646,395,0.985,422,1.108,455,2.465,461,2.166,463,2.465,464,0.96,466,1.877,467,1.797,468,1.515,469,2.061,470,1.877,471,1.877,472,1.515,481,2.899,482,3.086,487,1.464,491,1.108,492,0.744,493,0.744,495,1.646,496,0.96,497,1.454,498,0.842,503,1.108,509,0.96,512,1.108,514,1.289,519,1.329,522,1.329,527,1.306,534,1.108,540,1.454,542,1.329,543,1.329,547,1.108,553,1.749,565,1.877,566,0.96,567,1.108,571,1.515,572,0.842,584,1.329,598,1.869,619,2.061,652,2.061,654,1.108,656,2.553,668,2.061,670,2.459,674,1.515,675,2.899,685,2.061,688,2.061,706,2.061,708,2.061,743,2.061,749,2.899,758,3.086,770,2.061,782,1.108,802,2.061,803,2.899,814,1.749,822,1.306,823,4.033,824,1.306,825,3.566,826,3.14,827,2.536,828,3.14,829,2.061,830,3.566,831,2.899,832,1.607,833,1.607,834,2.061,835,2.061,836,2.899,837,2.061,838,2.061,839,2.899,840,2.061,841,2.061,842,2.844,843,2.899,844,2.061,845,2.061,846,2.899,847,2.061,848,2.061,849,1.607,850,2.553,851,2.536,852,1.607,853,2.536,854,2.536,855,4.318,856,2.536,857,1.607,858,2.536,859,2.536,860,1.607,861,2.536,862,1.607,863,1.607,864,1.607,865,1.607,866,2.061,867,1.607,868,1.607,869,2.536,870,2.536,871,2.536,872,2.536,873,3.14,874,1.306,875,1.306,876,1.306,877,1.306,878,1.306,879,1.306,880,1.306,881,1.306,882,1.306,883,1.306,884,1.306,885,1.306,886,2.061,887,1.607,888,1.607,889,2.536,890,2.536,891,3.155,892,2.536,893,2.536,894,1.607,895,1.607,896,1.607,897,1.607,898,1.607,899,1.607,900,1.607,901,1.607,902,1.607,903,1.607,904,3.14,905,2.061,906,1.607,907,1.306,908,1.306,909,1.306,910,1.306,911,2.061,912,1.306,913,1.306,914,1.306,915,1.306,916,1.607,917,1.607,918,1.607,919,1.306,920,1.607,921,1.607,922,1.607,923,1.607,924,1.306,925,1.607,926,1.877,927,2.536,928,2.061,929,3.566,930,2.536,931,2.536,932,2.536,933,3.566,934,2.536,935,2.536,936,2.536,937,2.536,938,1.607,939,2.536,940,2.536,941,2.536,942,3.566,943,3.566,944,2.536,945,2.061,946,2.536,947,2.536,948,3.566,949,2.536,950,2.536,951,2.536,952,2.536,953,2.536,954,2.536,955,2.061,956,2.536,957,1.607,958,1.607,959,1.108,960,1.749,961,1.607,962,1.306,963,1.306,964,2.061,965,1.306,966,1.306,967,1.108,968,1.306,969,1.306,970,1.306,971,1.306,972,1.306,973,1.108,974,1.749,975,1.306,976,1.607,977,1.607,978,1.607,979,1.607,980,1.607,981,2.536,982,1.607]],["title/components/PlayerCardComponent.html",[0,0.069,66,0.626]],["body/components/PlayerCardComponent.html",[0,0.125,1,0.691,2,1.323,3,0.447,4,0.376,5,1.128,6,1.128,7,1.002,8,1.128,9,0.376,11,0.604,12,1.002,13,1.667,15,1.128,16,2.002,17,1.323,19,1.489,21,1.489,23,0.604,25,1.002,26,0.604,27,0.047,29,0.889,30,1.161,32,0.691,36,0.949,38,0.604,39,0.691,40,0.447,41,0.247,42,1.996,44,1.677,45,1.677,46,1.481,47,1.677,51,0.889,52,1.173,53,1.323,54,1.128,55,1.773,56,1.128,57,1.128,58,0.604,59,0.523,60,1.489,61,0.691,62,1.002,63,1.489,64,0.604,65,1.128,66,1.086,67,1.616,68,1.128,69,0.604,70,1.128,71,0.691,72,0.691,73,1.128,74,1.128,75,1.128,76,0.033,77,0.033,122,2.817,195,1.891,204,1.323,216,2.441,253,2.721,353,2.36,462,2.134,463,2.441,464,1.849,465,2.134,466,1.849,467,1.432,468,1.849,470,1.849,471,1.849,472,1.849,487,1.677,488,2.141,489,1.432,492,1.891,493,2.116,495,2.141,496,1.849,497,2.34,498,2.141,502,2.441,504,4.109,509,2.732,514,1.877,515,2.134,519,2.396,520,2.134,522,2.548,523,3.153,562,3.32,568,3.32,569,2.516,572,1.622,584,2.396,591,2.516,598,1.622,960,2.134,962,2.516,967,2.134,983,3.32,984,2.516,985,4.085,986,4.572,987,4.085,988,3.32,989,3.095,990,3.095,991,3.095,992,3.095,993,3.095,994,3.095,995,3.095,996,3.095,997,2.516,998,3.095,999,3.095,1000,4.085,1001,3.095,1002,3.095,1003,2.516,1004,3.095,1005,3.095,1006,3.095,1007,3.095,1008,3.095,1009,3.095,1010,3.095,1011,3.095]],["title/components/SettingsComponentComponent.html",[0,0.069,69,0.547]],["body/components/SettingsComponentComponent.html",[0,0.108,1,0.366,2,0.835,3,0.237,4,0.2,5,0.598,6,0.598,7,0.531,8,0.598,9,0.564,11,0.765,12,0.531,13,1.818,15,0.598,16,1.73,17,0.835,19,0.94,21,0.94,23,0.765,24,0.654,25,0.531,26,0.985,27,0.048,28,1.69,29,1.363,30,1.319,32,1.08,36,0.905,38,0.503,39,0.366,40,0.237,41,0.131,42,1.609,44,1.307,45,1.307,46,1.168,47,1.307,51,0.471,52,0.74,53,0.835,54,0.598,55,1.315,56,0.598,57,0.598,58,0.32,59,0.87,60,0.94,61,0.366,62,0.531,63,0.94,64,0.32,65,0.598,66,0.366,67,0.914,68,0.598,69,0.704,70,1.643,71,0.366,72,0.366,73,0.598,74,0.598,75,0.598,76,0.021,77,0.021,116,2.938,134,2.239,148,0.74,176,1.193,180,1.89,182,1.481,183,1.481,186,1.126,187,1.126,190,2.645,195,2.308,198,1.777,202,0.86,204,0.835,207,2.535,208,1.351,216,1.54,219,1.668,222,1.193,231,1.815,250,1.132,256,1.193,286,1.307,289,1.132,294,2.588,295,2.095,312,1.193,315,1.132,316,2.281,323,3.197,330,1.54,343,1.334,353,2.176,354,2.487,355,2.195,359,1.777,361,3.335,363,1.334,377,1.132,378,1.668,379,1.132,386,1.132,388,1.902,393,1.351,395,0.417,398,2.932,420,3.187,422,1.132,461,3.335,462,3.272,463,3.168,464,2.77,465,2.703,466,2.601,467,2.146,468,0.98,470,2.693,471,2.487,472,2.979,482,1.777,483,1.54,487,1.708,488,1.351,489,0.759,491,2.488,492,1.473,493,1.193,495,1.668,496,2.343,497,1.926,498,1.668,500,2.195,507,1.132,512,1.132,513,2.095,514,1.307,519,1.351,520,2.488,521,1.132,522,1.668,523,1.132,525,2.095,531,2.095,540,1.67,542,1.668,543,1.668,547,1.777,565,2.601,566,1.902,567,1.777,571,2.343,572,0.86,584,1.351,598,1.351,607,1.132,609,1.132,653,1.334,654,1.132,682,2.095,730,2.095,782,1.132,829,2.095,831,2.932,848,2.095,850,3.538,866,2.095,874,1.334,875,1.334,876,1.334,877,1.334,878,1.334,879,1.334,880,1.334,881,2.095,882,1.334,883,1.334,884,1.334,885,1.334,886,2.095,891,1.334,905,1.334,907,1.334,908,1.334,909,1.334,910,1.334,911,2.095,912,1.334,913,1.334,914,1.334,915,1.334,919,1.334,924,1.334,926,1.902,928,2.095,955,1.334,959,1.132,960,2.703,963,2.095,964,2.588,965,1.334,966,1.334,967,1.777,968,1.334,969,1.334,970,1.334,971,1.334,972,1.334,973,2.87,974,2.488,975,3.538,997,1.334,1012,3.996,1013,2.577,1014,3.183,1015,2.577,1016,2.577,1017,2.577,1018,1.641,1019,3.183,1020,1.641,1021,2.577,1022,1.641,1023,2.095,1024,2.577,1025,1.641,1026,2.577,1027,3.607,1028,1.641,1029,2.577,1030,1.641,1031,2.577,1032,1.641,1033,1.641,1034,1.641,1035,2.577,1036,1.641,1037,2.577,1038,2.577,1039,1.641,1040,1.641,1041,1.641,1042,2.577,1043,1.641,1044,1.641,1045,1.641,1046,1.641,1047,1.641,1048,1.641,1049,1.641,1050,1.334,1051,2.577,1052,1.641,1053,1.641,1054,1.641,1055,1.641,1056,1.641,1057,1.641,1058,2.577,1059,1.641,1060,2.577,1061,2.577,1062,2.577,1063,2.577,1064,1.641,1065,1.641,1066,1.641,1067,1.641,1068,2.577,1069,1.641,1070,1.641,1071,1.641,1072,1.641,1073,1.641,1074,1.641,1075,1.641,1076,1.641,1077,1.641,1078,1.641,1079,1.641,1080,1.641,1081,1.334,1082,1.641,1083,2.577,1084,1.641,1085,1.641,1086,1.641,1087,1.641,1088,1.641,1089,1.641,1090,2.577,1091,1.641,1092,2.577,1093,2.577,1094,1.641,1095,1.641,1096,1.641,1097,1.641,1098,1.641,1099,1.641]],["title/components/StartButtonComponent.html",[0,0.069,71,0.626]],["body/components/StartButtonComponent.html",[0,0.135,1,0.546,2,1.126,3,0.354,4,0.298,5,0.892,6,0.892,7,0.792,8,0.892,9,0.298,11,0.477,12,0.792,13,0.892,15,0.892,16,1.912,17,1.126,19,1.267,21,1.267,23,0.477,24,0.882,25,0.792,26,0.943,27,0.048,28,1.912,29,1.428,30,1.181,32,1.135,34,2.233,36,0.97,38,0.477,39,0.546,40,0.354,41,0.195,42,1.427,44,1.004,45,1.004,46,1.674,47,1.004,51,0.702,52,0.998,53,1.126,54,1.474,55,1.606,56,0.892,57,0.892,58,0.477,59,0.413,60,1.267,61,0.546,62,0.792,63,1.267,64,0.477,65,0.892,66,0.546,67,0.702,68,0.892,69,0.477,70,0.892,71,0.983,72,0.546,73,0.892,74,0.892,75,0.892,76,0.028,77,0.028,104,3.565,148,0.998,186,0.998,187,1.161,204,1.126,256,2.518,291,1.822,293,2.789,316,1.822,334,3.251,353,1.004,389,3.037,393,1.282,395,0.621,467,1.609,483,2.077,487,2.122,488,1.282,489,2.301,492,1.132,493,1.132,495,1.822,497,2.038,498,1.822,502,1.461,503,1.686,509,2.077,514,1.807,519,1.282,521,2.397,534,3.616,540,1.609,542,1.282,543,1.282,553,2.397,559,1.988,561,1.988,581,1.988,584,2.533,603,1.988,604,1.988,607,1.686,672,4.262,674,2.631,801,1.686,805,3.287,806,2.825,807,3.579,808,2.825,809,3.781,810,3.287,811,1.988,812,3.579,813,2.825,814,2.397,815,1.988,816,2.825,817,1.988,834,2.825,835,2.825,836,3.579,837,2.825,838,2.825,839,3.579,840,2.825,841,2.825,842,2.397,843,2.825,844,2.825,845,2.825,846,2.825,847,2.825,926,1.461,988,2.825,1081,1.988,1100,4.202,1101,3.476,1102,3.476,1103,3.476,1104,4.972,1105,4.044,1106,4.044,1107,4.044,1108,5.243,1109,2.445,1110,2.445,1111,2.445,1112,3.476,1113,2.445,1114,2.445,1115,2.445,1116,2.445,1117,3.476,1118,2.445,1119,2.445,1120,3.476,1121,2.445,1122,3.476,1123,2.445,1124,2.445,1125,2.445,1126,2.445]],["title/components/TitleComponent.html",[0,0.069,72,0.626]],["body/components/TitleComponent.html",[0,0.127,1,0.726,2,1.366,3,0.47,4,0.395,5,1.185,6,1.185,7,1.052,8,1.185,9,0.395,11,0.634,12,1.516,13,1.185,15,1.185,16,2.019,17,1.366,19,1.538,21,1.538,25,1.663,27,0.047,36,0.823,37,2.52,38,0.914,39,0.726,40,0.47,41,0.259,42,2.034,44,1.731,46,1.052,51,0.933,52,1.211,53,1.366,54,1.185,55,1.807,56,1.185,57,1.185,58,0.634,59,0.549,60,1.538,61,0.726,62,1.052,63,1.538,64,0.634,65,1.185,66,0.726,67,0.933,68,1.185,69,0.634,70,1.185,71,0.726,72,1.107,73,1.707,74,1.185,75,1.185,76,0.034,77,0.034,204,1.366,252,3.428,353,2.333,455,2.52,483,2.52,487,1.731,488,2.21,489,2.436,492,1.952,493,1.952,500,2.908,502,2.52,506,2.241,507,3.417,508,3.428,514,1.731,515,2.241,522,1.703,540,1.952,565,2.52,566,1.942,571,1.942,592,2.641,598,2.21,599,3.428,601,2.641,926,1.942,959,2.241,973,2.241,974,2.908,1003,2.641,1127,2.641,1128,4.217,1129,4.682,1130,4.217,1131,4.955,1132,3.25,1133,3.25,1134,3.25,1135,3.25,1136,3.25,1137,3.25,1138,3.25,1139,3.25,1140,3.25,1141,3.25,1142,4.217,1143,3.25,1144,3.25,1145,4.217,1146,3.25,1147,3.25,1148,3.25,1149,3.25,1150,3.25,1151,3.25,1152,3.25,1153,3.25,1154,3.25,1155,3.25,1156,3.25,1157,3.25,1158,3.25,1159,3.25,1160,3.25,1161,3.25,1162,3.25,1163,3.25,1164,3.25,1165,3.25,1166,3.25,1167,3.25,1168,3.25,1169,3.25,1170,3.25,1171,3.25,1172,3.25]],["title/coverage.html",[1173,3.107]],["body/coverage.html",[0,0.138,1,0.845,9,0.46,10,3.074,26,0.738,27,0.047,41,0.442,58,0.738,59,0.639,61,0.845,64,0.738,66,0.845,69,0.738,71,0.845,72,0.845,76,0.037,77,0.037,104,2.608,107,2.608,109,2.259,116,2.259,119,2.259,122,2.608,142,2.259,144,3.074,288,3.074,289,3.2,298,2.259,312,1.75,336,3.074,344,2.259,361,4.003,373,2.259,375,3.074,378,1.982,382,3.074,384,3.074,395,0.96,612,3.074,664,2.259,666,3.074,667,3.074,693,3.074,729,3.074,800,3.074,801,3.2,823,3.074,824,3.074,983,3.074,984,3.074,1012,3.074,1100,3.074,1127,3.074,1173,3.074,1174,3.781,1175,3.781,1176,4.641,1177,3.781,1178,4.641,1179,3.781,1180,3.781,1181,3.781,1182,4.641,1183,3.781,1184,3.781,1185,3.781,1186,3.781,1187,4.641,1188,3.781,1189,3.781,1190,3.781,1191,3.781,1192,3.781,1193,3.781,1194,3.781,1195,3.781]],["title/dependencies.html",[81,2.014,1196,1.616]],["body/dependencies.html",[27,0.047,39,0.944,45,1.735,46,1.369,47,1.735,76,0.04,77,0.04,81,2.526,99,4.033,100,3.422,124,3.436,133,2.915,690,2.915,1197,4.226,1198,5.706,1199,4.226,1200,4.961,1201,4.226,1202,4.226,1203,4.226,1204,4.226,1205,4.226,1206,4.226,1207,4.226,1208,4.226,1209,4.226,1210,4.226,1211,4.226]],["title/index.html",[23,0.457,1212,2.343,1213,2.343]],["body/index.html",[0,0.126,4,0.475,27,0.038,31,3.175,36,0.762,76,0.038,77,0.038,94,2.693,153,3.801,184,2.047,238,2.334,256,1.808,291,2.047,330,2.334,395,0.992,663,3.175,758,3.512,774,3.175,783,3.175,786,4.14,818,4.14,842,2.693,945,3.175,1023,3.175,1196,2.693,1214,4.733,1215,5.093,1216,3.175,1217,3.906,1218,3.906,1219,4.733,1220,5.423,1221,5.578,1222,3.906,1223,3.906,1224,3.906,1225,3.906,1226,3.906,1227,3.906,1228,3.906,1229,3.906,1230,3.906,1231,3.906,1232,5.093,1233,3.906,1234,5.294,1235,3.906,1236,3.906,1237,3.906,1238,3.906,1239,4.733,1240,4.733,1241,5.294,1242,4.733,1243,4.733,1244,3.906,1245,3.906,1246,3.906,1247,3.906,1248,4.733,1249,3.906,1250,3.906,1251,3.906,1252,3.906,1253,2.693]],["title/modules.html",[80,2.003]],["body/modules.html",[27,0.041,76,0.041,77,0.041,79,2.688,80,2.357,90,2.357,100,3.102,364,3.656,1254,4.498,1255,4.498,1256,5.144,1257,4.498]],["title/overview.html",[1253,2.636]],["body/overview.html",[1,1.248,2,1.276,27,0.046,51,1.131,58,0.998,61,1.142,64,0.998,66,1.142,69,0.998,71,1.142,72,1.142,76,0.038,77,0.038,78,2.354,79,3.509,80,2.065,81,2.354,82,3.202,83,3.202,84,3.202,85,2.717,86,3.202,87,3.202,88,3.202,89,3.202,90,2.679,91,4.156,92,3.868,93,3.202,94,2.717,132,2.354,142,2.354,354,2.843,355,2.717,358,3.202,611,2.354,664,2.354,1050,3.202,1253,2.717,1258,3.939]],["title/properties.html",[24,0.856,1196,1.616]],["body/properties.html",[24,1.153,27,0.044,76,0.042,77,0.042,1216,3.693,1259,4.543]],["title/routes.html",[132,2.284]],["body/routes.html",[27,0.042,76,0.042,77,0.042,132,2.729]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":353,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["0.0.0",{"_index":1259,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1160,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.03em",{"_index":1140,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.05em",{"_index":1168,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.06em",{"_index":1149,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.14.2",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":1143,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.1px",{"_index":579,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.25em",{"_index":605,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.2em",{"_index":1145,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.2px",{"_index":580,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.35",{"_index":1002,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.350s",{"_index":1094,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.3em",{"_index":1170,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.3rem",{"_index":562,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.3s",{"_index":569,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5",{"_index":1151,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.5em",{"_index":591,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5px",{"_index":968,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8em",{"_index":966,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8rem",{"_index":992,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.8s",{"_index":994,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["000000",{"_index":603,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["001546",{"_index":1011,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["00a1ef",{"_index":1154,"title":{},"body":{"components/TitleComponent.html":{}}}],["0fa",{"_index":504,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0ff",{"_index":597,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0px",{"_index":1000,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1",{"_index":354,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["1.1.13",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1010,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1.2px",{"_index":518,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.4em",{"_index":1075,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.5em",{"_index":494,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.6em",{"_index":590,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.7rem",{"_index":1121,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["1.8em",{"_index":529,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1/1",{"_index":1193,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":490,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10",{"_index":422,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["100",{"_index":361,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":544,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["102px",{"_index":1008,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["10abff",{"_index":608,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10px",{"_index":496,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11",{"_index":539,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1125a4",{"_index":970,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11em",{"_index":1135,"title":{},"body":{"components/TitleComponent.html":{}}}],["12/12",{"_index":1191,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":505,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["12px",{"_index":1117,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["13/13",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":1084,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15",{"_index":1035,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15.0.1",{"_index":1217,"title":{},"body":{"index.html":{}}}],["150px",{"_index":555,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["151px",{"_index":1009,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["15deg",{"_index":1137,"title":{},"body":{"components/TitleComponent.html":{}}}],["15px",{"_index":960,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["16.2.12",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":998,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["165ff3",{"_index":1148,"title":{},"body":{"components/TitleComponent.html":{}}}],["17.0.7",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["170",{"_index":578,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1b35d3",{"_index":965,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["1beabd",{"_index":596,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1em",{"_index":511,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1fr",{"_index":480,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1px",{"_index":509,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["2",{"_index":355,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":499,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2/2",{"_index":1176,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":359,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["20/20",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":602,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["20125f",{"_index":599,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["20px",{"_index":503,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["210px",{"_index":556,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["21px",{"_index":1004,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["25",{"_index":959,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["255",{"_index":577,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["25px",{"_index":525,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["27/27",{"_index":1179,"title":{},"body":{"coverage.html":{}}}],["281775",{"_index":1169,"title":{},"body":{"components/TitleComponent.html":{}}}],["29/29",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":517,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2p",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["2px",{"_index":521,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["3",{"_index":356,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3.2em",{"_index":583,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3/3",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":501,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["300px",{"_index":537,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30px",{"_index":531,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["3146d3",{"_index":820,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["3351ff",{"_index":1080,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["35",{"_index":1155,"title":{},"body":{"components/TitleComponent.html":{}}}],["35em",{"_index":587,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["35px",{"_index":961,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["38/38",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":1178,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":1167,"title":{},"body":{"components/TitleComponent.html":{}}}],["3px",{"_index":607,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["4",{"_index":1258,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":360,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["40px",{"_index":1079,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["42px",{"_index":1005,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["4px",{"_index":1119,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["5",{"_index":357,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["5.5em",{"_index":1166,"title":{},"body":{"components/TitleComponent.html":{}}}],["50",{"_index":598,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["50px",{"_index":561,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["55",{"_index":1157,"title":{},"body":{"components/TitleComponent.html":{}}}],["5em",{"_index":1147,"title":{},"body":{"components/TitleComponent.html":{}}}],["5px",{"_index":967,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["60",{"_index":1097,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["6px",{"_index":581,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["7",{"_index":1050,"title":{},"body":{"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["7.5.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["730505",{"_index":551,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["75",{"_index":1159,"title":{},"body":{"components/TitleComponent.html":{}}}],["797777",{"_index":548,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["7deg",{"_index":1172,"title":{},"body":{"components/TitleComponent.html":{}}}],["7px",{"_index":523,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["8",{"_index":358,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["8/8",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1068,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["800px",{"_index":528,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["80px",{"_index":527,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["82",{"_index":1066,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["82px",{"_index":1006,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["8313e7",{"_index":1156,"title":{},"body":{"components/TitleComponent.html":{}}}],["8ba2d0",{"_index":1144,"title":{},"body":{"components/TitleComponent.html":{}}}],["8d8d8d",{"_index":610,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["9/9",{"_index":1192,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":545,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["92px",{"_index":1007,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["94a0b9",{"_index":1161,"title":{},"body":{"components/TitleComponent.html":{}}}],["95",{"_index":558,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["__input",{"_index":588,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ability",{"_index":213,"title":{},"body":{"interfaces/Game.html":{}}}],["absolute",{"_index":973,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["active",{"_index":547,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["actual",{"_index":474,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["actual_component",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["actualfunctioninbacklog",{"_index":613,"title":{},"body":{"classes/GameConcret.html":{}}}],["actuallog",{"_index":194,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["actualtask",{"_index":486,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["add",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"index.html":{}}}],["addclass",{"_index":735,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addclass(id",{"_index":744,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["added",{"_index":742,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement",{"_index":736,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement(type",{"_index":750,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["adding",{"_index":178,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["additionalvalue",{"_index":751,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue[key",{"_index":794,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addnote",{"_index":149,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addnote(value",{"_index":175,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addplayername",{"_index":1015,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addplayername(event",{"_index":1018,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["adds",{"_index":754,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext",{"_index":737,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext(text",{"_index":768,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["afterviewinit",{"_index":292,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["again",{"_index":946,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["agrees",{"_index":935,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["align",{"_index":470,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["allows",{"_index":673,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{}}}],["already",{"_index":869,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["andlocations",{"_index":349,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["angular",{"_index":786,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["angular/animations",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"dependencies.html":{}}}],["angular/src/tools/esbuild/javascript",{"_index":788,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["animation",{"_index":1092,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["another",{"_index":672,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/StartButtonComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["app.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1087,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["application",{"_index":1226,"title":{},"body":{"index.html":{}}}],["applied",{"_index":626,"title":{},"body":{"classes/GameConcret.html":{}}}],["apply",{"_index":940,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["appmodule",{"_index":79,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":90,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":469,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["artifacts",{"_index":1235,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":956,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["associated",{"_index":621,"title":{},"body":{"classes/GameConcret.html":{}}}],["auto",{"_index":564,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["automatically",{"_index":1227,"title":{},"body":{"index.html":{}}}],["available",{"_index":364,"title":{},"body":{"components/GameComponentComponent.html":{},"modules.html":{}}}],["average",{"_index":1063,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["averagedecorator",{"_index":382,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["averagedecorator(this.game",{"_index":401,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["awarded",{"_index":936,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["b0b0b0",{"_index":999,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["back",{"_index":327,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["background",{"_index":514,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["background.jpg",{"_index":991,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["backlog",{"_index":180,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata",{"_index":219,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata[\"boutton",{"_index":431,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogdata[data[key",{"_index":430,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogvalue",{"_index":296,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backup",{"_index":206,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["balise",{"_index":297,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["bare",{"_index":368,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["based",{"_index":730,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["before",{"_index":844,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["behaviorsubject",{"_index":689,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["behaviorsubject(null",{"_index":683,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["being",{"_index":617,"title":{},"body":{"classes/GameConcret.html":{}}}],["belongs",{"_index":223,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["better",{"_index":985,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["between",{"_index":962,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["black",{"_index":1146,"title":{},"body":{"components/TitleComponent.html":{}}}],["block",{"_index":926,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["boolean",{"_index":239,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["bootstrap",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":497,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["bottom_input",{"_index":963,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["bound",{"_index":841,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["box",{"_index":520,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["break",{"_index":906,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["brightness(0.8",{"_index":560,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["brightness(90",{"_index":1124,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["browse",{"_index":1256,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["bsetupdefaultvalue",{"_index":614,"title":{},"body":{"classes/GameConcret.html":{}}}],["build",{"_index":1234,"title":{},"body":{"index.html":{}}}],["button",{"_index":334,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["button's",{"_index":813,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["button.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":806,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.scss",{"_index":805,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts",{"_index":801,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":811,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:21",{"_index":815,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1109,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1111,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1110,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:41",{"_index":1113,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:47",{"_index":1115,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:54",{"_index":1114,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.style.display",{"_index":871,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["button/information",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["button/start",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button_icon",{"_index":575,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_label",{"_index":574,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["buttonclicked",{"_index":809,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["c7c7c7",{"_index":1125,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["cafe",{"_index":362,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(1em",{"_index":589,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(50",{"_index":1083,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["callback",{"_index":834,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["called",{"_index":1108,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["came",{"_index":552,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["capabilities",{"_index":1250,"title":{},"body":{"index.html":{}}}],["caption_button",{"_index":1120,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["caption_button:hover",{"_index":1123,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captionbackground",{"_index":1105,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captioncolor",{"_index":1106,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["card",{"_index":253,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["card'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["card.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":987,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.scss",{"_index":986,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.ts",{"_index":984,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":989,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card/player",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["ccc",{"_index":979,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["center",{"_index":472,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["change",{"_index":256,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["changemod",{"_index":1016,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changemod(event",{"_index":1021,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changes",{"_index":1019,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["check",{"_index":1023,"title":{},"body":{"components/SettingsComponentComponent.html":{},"index.html":{}}}],["checked",{"_index":839,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["child",{"_index":1142,"title":{},"body":{"components/TitleComponent.html":{}}}],["children",{"_index":553,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["choice",{"_index":1247,"title":{},"body":{"index.html":{}}}],["choose",{"_index":482,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["choosedefaultvalue",{"_index":150,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["chooses",{"_index":941,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["chose",{"_index":928,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["chosen",{"_index":939,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["circle",{"_index":1090,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["class",{"_index":41,"title":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["classe",{"_index":745,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["classes",{"_index":611,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"overview.html":{}}}],["classes/decorateur/averagedecorator",{"_index":383,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/game",{"_index":372,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/gameconcret",{"_index":374,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/majabsdecorator",{"_index":385,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/strictdecorator",{"_index":376,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/facade/htmldisplay",{"_index":380,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/singleton/htmlbalise",{"_index":381,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clear",{"_index":453,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clearhtml",{"_index":738,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearhtml(element",{"_index":771,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearinstance",{"_index":698,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["cli",{"_index":1215,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":814,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["clip",{"_index":601,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["closebalise",{"_index":752,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["closes",{"_index":854,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["closing",{"_index":767,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["cluster_appmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1230,"title":{},"body":{"index.html":{}}}],["coffee",{"_index":948,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["color",{"_index":487,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["column",{"_index":465,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["columns",{"_index":478,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["come",{"_index":1128,"title":{},"body":{"components/TitleComponent.html":{}}}],["command",{"_index":1248,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["component.component",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.html",{"_index":295,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.scss",{"_index":294,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts",{"_index":289,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:112",{"_index":1030,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:116",{"_index":326,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:133",{"_index":339,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:154",{"_index":337,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:175",{"_index":325,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:192",{"_index":318,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:207",{"_index":321,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:21",{"_index":1033,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:22",{"_index":314,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:222",{"_index":338,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:243",{"_index":333,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:250",{"_index":340,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:26",{"_index":1032,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:31",{"_index":1036,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:35",{"_index":351,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:36",{"_index":1034,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:40",{"_index":352,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:41",{"_index":1039,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:45",{"_index":363,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:50",{"_index":346,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:52",{"_index":1025,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:55",{"_index":367,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:60",{"_index":370,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:64",{"_index":343,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:75",{"_index":328,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:78",{"_index":1022,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:87",{"_index":1028,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:99",{"_index":322,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component/game",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"coverage.html":{}}}],["component/settings",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["components/game",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/information",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/player",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/start",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title/title.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":851,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["configurable",{"_index":1101,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["connect",{"_index":784,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console",{"_index":1060,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(\"aa",{"_index":797,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console.log(\"data",{"_index":922,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["console.log(\"test",{"_index":1056,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.backlogdata",{"_index":1055,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.mode",{"_index":907,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["console.log(this.players",{"_index":653,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["const",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor",{"_index":310,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["constructor(dataservice",{"_index":311,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["constructor(private",{"_index":386,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["cont",{"_index":416,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["contain",{"_index":458,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container",{"_index":460,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container_bottom",{"_index":976,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_button",{"_index":957,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_info",{"_index":958,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["containing",{"_index":348,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["contains",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["content",{"_index":467,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["continue",{"_index":342,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["continuegame",{"_index":151,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["continuegame(defaultvalue",{"_index":193,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["courses",{"_index":217,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["coverage",{"_index":1173,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatanddownloadjson",{"_index":152,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["create",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["creating",{"_index":676,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["cross",{"_index":549,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["cup",{"_index":954,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["current",{"_index":216,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["currently",{"_index":320,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["cursor",{"_index":542,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["d000ff",{"_index":524,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dafoe",{"_index":1165,"title":{},"body":{"components/TitleComponent.html":{}}}],["data",{"_index":316,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["data[key",{"_index":415,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dataservice",{"_index":315,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["declarations",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorator",{"_index":145,"title":{},"body":{"interfaces/Game.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defaultvalue",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["define",{"_index":930,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defines",{"_index":283,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["deleting",{"_index":773,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dependencies",{"_index":81,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["design",{"_index":146,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["detector",{"_index":838,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["dev",{"_index":1223,"title":{},"body":{"index.html":{}}}],["development",{"_index":1218,"title":{},"body":{"index.html":{}}}],["devkit/build",{"_index":787,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["direction",{"_index":464,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["directive",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive's",{"_index":840,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["directives",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1233,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1238,"title":{},"body":{"index.html":{}}}],["discuss",{"_index":952,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["displayed",{"_index":770,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["displayhtml",{"_index":739,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml(element",{"_index":776,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displays",{"_index":763,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dist",{"_index":1237,"title":{},"body":{"index.html":{}}}],["div",{"_index":457,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["document.getelementbyid(\"actualtask",{"_index":714,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"contniue",{"_index":870,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"endmessage",{"_index":716,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"finishbutton",{"_index":724,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"gamemodemessage",{"_index":726,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"playerbutton",{"_index":720,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"popup",{"_index":872,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"stage1",{"_index":441,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"standardvalue",{"_index":712,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"texttoshow",{"_index":718,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"validatebutton",{"_index":722,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(id",{"_index":795,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["documentation",{"_index":1174,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["down",{"_index":619,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["download",{"_index":205,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["downloads",{"_index":950,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["duration",{"_index":997,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["during",{"_index":244,"title":{},"body":{"interfaces/Game.html":{}}}],["dynamic",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":993,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["e2e",{"_index":1245,"title":{},"body":{"index.html":{}}}],["e3e3e3",{"_index":594,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["e9e9ea",{"_index":969,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["each",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"components/MainMenuComponent.html":{}}}],["ease",{"_index":570,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["easily",{"_index":733,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["element.classlist.add(classe",{"_index":798,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element.innerhtml",{"_index":799,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["elements",{"_index":350,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["emptied",{"_index":775,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["empty",{"_index":702,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["end",{"_index":153,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["endmessage",{"_index":532,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["enter",{"_index":191,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["entered",{"_index":955,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["error(\"method",{"_index":650,"title":{},"body":{"classes/GameConcret.html":{}}}],["evenly",{"_index":512,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event",{"_index":850,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.files[0",{"_index":875,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.placeholder",{"_index":1044,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value",{"_index":1042,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value.substring(0",{"_index":1049,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["eventemitter",{"_index":810,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["everyone",{"_index":934,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["everything",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["example",{"_index":757,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["execute",{"_index":1242,"title":{},"body":{"index.html":{}}}],["exo",{"_index":1134,"title":{},"body":{"components/TitleComponent.html":{}}}],["explain",{"_index":802,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["explode",{"_index":1093,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["exports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extract",{"_index":883,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["facade",{"_index":731,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["face",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":366,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["family",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["ff61af",{"_index":1158,"title":{},"body":{"components/TitleComponent.html":{}}}],["fff",{"_index":522,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["ffffff",{"_index":510,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":879,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["filereader",{"_index":877,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["files",{"_index":1229,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1162,"title":{},"body":{"components/TitleComponent.html":{}}}],["filter",{"_index":559,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["finishbutton",{"_index":709,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["first",{"_index":842,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["fixed",{"_index":977,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["flex",{"_index":463,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["focus",{"_index":606,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["font",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["for(const",{"_index":898,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["form",{"_index":1064,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_bottom",{"_index":1076,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_top",{"_index":1065,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["format",{"_index":743,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["full",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":181,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["further",{"_index":1251,"title":{},"body":{"index.html":{}}}],["game",{"_index":59,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["game_label:before",{"_index":1082,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["gamecomponentcomponent",{"_index":58,"title":{"components/GameComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameconcret",{"_index":373,"title":{"classes/GameConcret.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"coverage.html":{}}}],["gamemodemessage",{"_index":533,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["gameoptionserviceservice",{"_index":312,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["gap",{"_index":1072,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["generate",{"_index":1232,"title":{},"body":{"index.html":{}}}],["generated",{"_index":774,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["getactualstage",{"_index":154,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getactuellog",{"_index":302,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getbacklogdata",{"_index":155,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote",{"_index":156,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote(key",{"_index":220,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getdefaultvalue",{"_index":157,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getinstance",{"_index":699,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["getmode",{"_index":303,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote",{"_index":158,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getnote(id",{"_index":324,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote(key",{"_index":226,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getnotes",{"_index":159,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer",{"_index":160,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer(key",{"_index":232,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayernumber",{"_index":161,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayers",{"_index":162,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getslidervalue",{"_index":1017,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event",{"_index":1024,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getting",{"_index":1212,"title":{"index.html":{}},"body":{}}],["give",{"_index":247,"title":{},"body":{"interfaces/Game.html":{}}}],["given",{"_index":266,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["go",{"_index":945,"title":{},"body":{"components/MainMenuComponent.html":{},"index.html":{}}}],["goal",{"_index":804,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["grade",{"_index":933,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["graded",{"_index":861,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gradient(#032d50",{"_index":1153,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(#e3e3e3",{"_index":593,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["gradient(120deg",{"_index":595,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["graph",{"_index":1257,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":477,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["group",{"_index":586,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["h1",{"_index":1003,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["h2",{"_index":1163,"title":{},"body":{"components/TitleComponent.html":{}}}],["h3",{"_index":1074,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["header",{"_index":476,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["header_sidenav",{"_index":538,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["height",{"_index":461,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["help",{"_index":818,"title":{},"body":{"components/InformationButtonComponent.html":{},"index.html":{}}}],["here",{"_index":481,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["hidden",{"_index":996,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["home",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hover",{"_index":572,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["html",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["html.addhtmlelement(\"input",{"_index":759,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["html.displayhtml(balise.title",{"_index":761,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["htmlbalise",{"_index":344,"title":{"classes/HtmlBalise.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"coverage.html":{}}}],["htmlbalise.getinstance",{"_index":391,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["htmlbalise.instance",{"_index":728,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlbuttonelement",{"_index":708,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmldisplay",{"_index":298,"title":{"classes/HtmlDisplay.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["htmldivelement",{"_index":706,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmlelement",{"_index":705,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["htmlinputelement",{"_index":442,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["http://localhost:4200",{"_index":1225,"title":{},"body":{"index.html":{}}}],["icon",{"_index":821,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["id",{"_index":202,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["identifier",{"_index":336,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["if(!closebalise",{"_index":792,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(element",{"_index":796,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(n",{"_index":452,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["if(this.popupisopen",{"_index":925,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["ignore",{"_index":388,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/SettingsComponentComponent.html":{}}}],["image",{"_index":515,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["immediately",{"_index":837,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["implemented",{"_index":651,"title":{},"body":{"classes/GameConcret.html":{}}}],["implements",{"_index":291,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["important",{"_index":1081,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["imported",{"_index":1029,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information_button",{"_index":819,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["informationbuttoncomponent",{"_index":61,"title":{"components/InformationButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable",{"_index":664,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":665,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["inline",{"_index":964,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input",{"_index":584,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["input[type=\"file",{"_index":972,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio",{"_index":1086,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":1091,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input_text",{"_index":762,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["inputs",{"_index":988,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["inputvalue",{"_index":710,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instance",{"_index":697,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instantiated",{"_index":847,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["interface",{"_index":142,"title":{"interfaces/Game.html":{}},"body":{"interfaces/Game.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":143,"title":{},"body":{"interfaces/Game.html":{}}}],["interogation",{"_index":942,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["invoked",{"_index":836,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["iscontinue",{"_index":304,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["isdownload",{"_index":163,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["isretry",{"_index":164,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["it's",{"_index":534,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["it\\'s",{"_index":980,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item",{"_index":891,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["item.hasownproperty(itemname",{"_index":894,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item.work",{"_index":903,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item[itemname",{"_index":897,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["itemname",{"_index":893,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["items",{"_index":471,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["itself",{"_index":585,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["json",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json.parse(filecontent",{"_index":882,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata",{"_index":881,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata.backlog",{"_index":889,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog.hasownproperty(key",{"_index":890,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog[key",{"_index":892,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.default",{"_index":888,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.hasownproperty(key",{"_index":1052,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata.mode",{"_index":887,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players",{"_index":899,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players.hasownproperty(key",{"_index":900,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players[key",{"_index":901,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata[key]?.name",{"_index":1053,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["justify",{"_index":466,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["karma",{"_index":1244,"title":{},"body":{"index.html":{}}}],["key",{"_index":176,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["key.startswith(\"default",{"_index":417,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('actuallog",{"_index":435,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('backlog",{"_index":429,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('default",{"_index":436,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('mode",{"_index":414,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('note",{"_index":434,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('player",{"_index":419,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["keyframes",{"_index":1095,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["keys",{"_index":885,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label",{"_index":782,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label.innertext",{"_index":791,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["launches",{"_index":210,"title":{},"body":{"interfaces/Game.html":{}}}],["left",{"_index":974,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["left_number",{"_index":1070,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["left_players",{"_index":1071,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["legend",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["lets",{"_index":732,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["letter",{"_index":1138,"title":{},"body":{"components/TitleComponent.html":{}}}],["li",{"_index":1078,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["line",{"_index":530,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["linear",{"_index":592,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":1104,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["list",{"_index":231,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["listvalue",{"_index":299,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["literal",{"_index":208,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["load",{"_index":825,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["loaded",{"_index":331,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["lobby",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local_cafe",{"_index":456,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["lunchstage",{"_index":165,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["mainmenucomponent",{"_index":64,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["majabs",{"_index":402,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majabsdecorator",{"_index":384,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["majabsdecorator(this.game",{"_index":403,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majority",{"_index":1062,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["manages",{"_index":290,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["margin",{"_index":500,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["marks",{"_index":264,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["mat",{"_index":536,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["matbuttonmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1045,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["matching",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maticonmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":1037,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["menu",{"_index":455,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["menu'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["menu.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["menu.component.html",{"_index":827,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":826,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":824,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:119",{"_index":857,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:13",{"_index":832,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:142",{"_index":852,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:24",{"_index":868,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":833,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":863,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":862,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:47",{"_index":865,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:51",{"_index":864,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":867,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:59",{"_index":860,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:65",{"_index":849,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/main",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["message",{"_index":812,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["method",{"_index":835,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["methods",{"_index":148,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["michel",{"_index":425,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["middle",{"_index":1089,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["min",{"_index":526,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mode",{"_index":323,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["modedecorator",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["modified",{"_index":695,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["modifies",{"_index":1026,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["modifybacklogdata",{"_index":166,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["modifybacklogdata(key",{"_index":254,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["module",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1252,"title":{},"body":{"index.html":{}}}],["moyenne",{"_index":400,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mr",{"_index":1164,"title":{},"body":{"components/TitleComponent.html":{}}}],["n",{"_index":271,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["names",{"_index":884,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["namesarray",{"_index":1051,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray.push(jsondata[key].name",{"_index":1054,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["navigate",{"_index":1224,"title":{},"body":{"index.html":{}}}],["nb",{"_index":281,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["need",{"_index":238,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["new",{"_index":395,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":681,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["next",{"_index":258,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["nextstage",{"_index":167,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["ng",{"_index":1221,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":305,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ngif",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":389,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["none",{"_index":393,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["noopanimationsmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["note",{"_index":179,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["noted",{"_index":185,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["notes",{"_index":365,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["null",{"_index":412,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["number",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["numbers",{"_index":1061,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["object",{"_index":747,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["object.keys(data).foreach(key",{"_index":413,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["object.keys(this.backlogdata).foreach((item",{"_index":918,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["object.keys(this.players).foreach(key",{"_index":910,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["object.keys(this.players).length",{"_index":658,"title":{},"body":{"classes/GameConcret.html":{}}}],["offset",{"_index":1118,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onbuttonclick",{"_index":807,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["once",{"_index":846,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["one",{"_index":670,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["onfileselected",{"_index":829,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["onfileselected(event",{"_index":848,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["oninit",{"_index":293,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["opacity",{"_index":975,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["open",{"_index":369,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["opened",{"_index":300,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["openinformation",{"_index":830,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["opens",{"_index":853,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["option",{"_index":378,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["optional",{"_index":183,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["origin",{"_index":600,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["otherwise",{"_index":937,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":604,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["output",{"_index":816,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["outputs",{"_index":808,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["over",{"_index":953,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["overflow",{"_index":995,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["overview",{"_index":1253,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":287,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["package",{"_index":1196,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":495,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["page",{"_index":330,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"index.html":{}}}],["page's",{"_index":734,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["param",{"_index":286,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parameters",{"_index":182,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key",{"_index":905,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key.replace('player",{"_index":421,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["parseint(match",{"_index":1047,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["passed",{"_index":682,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{}}}],["passing",{"_index":748,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["path",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrick",{"_index":427,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["pattern",{"_index":147,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["pause",{"_index":944,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["per",{"_index":1038,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["phase",{"_index":245,"title":{},"body":{"interfaces/Game.html":{}}}],["placed",{"_index":764,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["placeholder",{"_index":609,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["placeholder.replace(/\\d/g",{"_index":1046,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["places",{"_index":781,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["planing",{"_index":251,"title":{},"body":{"interfaces/Game.html":{}}}],["planning",{"_index":1131,"title":{},"body":{"components/TitleComponent.html":{}}}],["planningpokerpp",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["platform",{"_index":1246,"title":{},"body":{"index.html":{}}}],["play",{"_index":270,"title":{},"body":{"interfaces/Game.html":{}}}],["player",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["player's",{"_index":234,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerbutton",{"_index":554,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["playercardcomponent",{"_index":66,"title":{"components/PlayerCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerkey",{"_index":911,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playermax",{"_index":1014,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playernumber",{"_index":420,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playerpushbutton",{"_index":168,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerpushbutton(id",{"_index":260,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["players",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["players[1",{"_index":424,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[2",{"_index":426,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[playernumber",{"_index":423,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["playersnb",{"_index":1040,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playersnote",{"_index":615,"title":{},"body":{"classes/GameConcret.html":{}}}],["point",{"_index":943,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["pointer",{"_index":543,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["poker",{"_index":252,"title":{},"body":{"interfaces/Game.html":{},"components/TitleComponent.html":{}}}],["popup",{"_index":855,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popup.style.display",{"_index":873,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popupisopen",{"_index":828,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["position",{"_index":565,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["possible",{"_index":1103,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pp",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["press",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["pressed",{"_index":335,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["presses",{"_index":341,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["previously",{"_index":858,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["private",{"_index":387,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["project",{"_index":1214,"title":{},"body":{"index.html":{}}}],["prompts",{"_index":189,"title":{},"body":{"interfaces/Game.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"properties.html":{}}}],["protected",{"_index":1058,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["providedin",{"_index":691,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pushable_button",{"_index":1116,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushable_button:active",{"_index":1126,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushablebackground",{"_index":1107,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["puts",{"_index":947,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["quiter",{"_index":432,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["radius",{"_index":498,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rating",{"_index":265,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reader",{"_index":876,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.onload",{"_index":878,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.readastext(selectedfile",{"_index":909,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.result",{"_index":880,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["readonly",{"_index":1059,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["recorded",{"_index":859,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["recover",{"_index":228,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["red",{"_index":550,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["redirectto",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":783,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["regular.ttf",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":566,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["reload",{"_index":1228,"title":{},"body":{"index.html":{}}}],["repeat(11",{"_index":479,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["replay",{"_index":241,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["resume",{"_index":951,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["resuming",{"_index":200,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{}}}],["retrieve",{"_index":222,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["retrieves",{"_index":319,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["return",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["returned",{"_index":229,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returning",{"_index":225,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returns",{"_index":186,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rgb(0",{"_index":576,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgb(255",{"_index":582,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgba(0",{"_index":1001,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["rgba(black",{"_index":1150,"title":{},"body":{"components/TitleComponent.html":{}}}],["right",{"_index":546,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["right_style",{"_index":1073,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{}}}],["root'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["rotate",{"_index":1171,"title":{},"body":{"components/TitleComponent.html":{}}}],["round",{"_index":242,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["router",{"_index":313,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["routermodule",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":132,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":491,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["rules",{"_index":803,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["run",{"_index":1220,"title":{},"body":{"index.html":{}}}],["running",{"_index":1239,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":690,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"dependencies.html":{}}}],["résum",{"_index":454,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["save",{"_index":675,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["scaffolding",{"_index":1231,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":1098,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(0.85",{"_index":573,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(0.9",{"_index":971,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["scale(1",{"_index":1099,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1.2",{"_index":541,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(1.5",{"_index":822,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["scale(4",{"_index":1096,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scene",{"_index":671,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["score",{"_index":248,"title":{},"body":{"interfaces/Game.html":{},"components/MainMenuComponent.html":{}}}],["select",{"_index":866,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectbutton",{"_index":306,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectbutton(id",{"_index":332,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectedfile",{"_index":874,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["selects",{"_index":263,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["send",{"_index":674,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["senddata",{"_index":831,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["sending",{"_index":680,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["sends",{"_index":1031,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["sent",{"_index":685,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["serif",{"_index":492,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":1222,"title":{},"body":{"index.html":{}}}],["server",{"_index":1219,"title":{},"body":{"index.html":{}}}],["service",{"_index":668,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["service.service",{"_index":379,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["service.service.ts",{"_index":667,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:18",{"_index":684,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:23",{"_index":687,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:30",{"_index":679,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["services/gameoptionservice/game",{"_index":377,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["set",{"_index":269,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["setactualplayerturn",{"_index":169,"title":{},"body":{"interfaces/Game.html":{}}}],["setactualplayerturn(n",{"_index":267,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklog",{"_index":307,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setbacklogdata",{"_index":170,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklogdata(backlogdata",{"_index":272,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklognote",{"_index":308,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setdata",{"_index":677,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdata(newdata",{"_index":678,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdefaultvalue",{"_index":171,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setdefaultvalue(value",{"_index":275,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setplayers",{"_index":172,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setplayers(players",{"_index":277,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["sets",{"_index":197,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage",{"_index":173,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage(nb",{"_index":279,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setter",{"_index":274,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["settimeout",{"_index":908,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["settings",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["settingscomponentcomponent",{"_index":69,"title":{"components/SettingsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":285,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setupdefaultvalue",{"_index":174,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["shadow",{"_index":502,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["showtext",{"_index":740,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["showtext(label",{"_index":779,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["sidenav",{"_index":475,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["singleton",{"_index":347,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["site",{"_index":317,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["size",{"_index":493,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["sizing",{"_index":1085,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["skew",{"_index":1136,"title":{},"body":{"components/TitleComponent.html":{}}}],["slider",{"_index":1027,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["solid",{"_index":519,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["space",{"_index":468,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["spacing",{"_index":1139,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:first",{"_index":1141,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:last",{"_index":1152,"title":{},"body":{"components/TitleComponent.html":{}}}],["specific",{"_index":1102,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["src",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/decorateur/averagedecorator.ts",{"_index":1177,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/game.ts",{"_index":144,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/game.ts:10",{"_index":278,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:101",{"_index":177,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:106",{"_index":230,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:112",{"_index":227,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:119",{"_index":255,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:124",{"_index":240,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:129",{"_index":237,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:134",{"_index":203,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:140",{"_index":268,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:145",{"_index":209,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:151",{"_index":221,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:16",{"_index":273,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:21",{"_index":188,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:28",{"_index":196,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:34",{"_index":282,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:40",{"_index":276,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:45",{"_index":257,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:51",{"_index":280,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:57",{"_index":243,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:62",{"_index":214,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:67",{"_index":235,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:73",{"_index":233,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:78",{"_index":224,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:83",{"_index":218,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:89",{"_index":261,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:94",{"_index":236,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/gameconcret.ts",{"_index":612,"title":{},"body":{"classes/GameConcret.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:103",{"_index":637,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:111",{"_index":636,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:118",{"_index":633,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:125",{"_index":631,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:133",{"_index":643,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:139",{"_index":638,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:14",{"_index":628,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:148",{"_index":627,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:155",{"_index":635,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:163",{"_index":634,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:172",{"_index":641,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:180",{"_index":632,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:187",{"_index":640,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:21",{"_index":624,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:213",{"_index":639,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:220",{"_index":629,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:229",{"_index":647,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:25",{"_index":625,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:29",{"_index":620,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:34",{"_index":622,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:39",{"_index":623,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:44",{"_index":616,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:50",{"_index":646,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:59",{"_index":644,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:73",{"_index":648,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:81",{"_index":645,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:89",{"_index":642,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:96",{"_index":630,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/majabsdecorator.ts",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/modedecorator.ts",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/strictdecorator.ts",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts",{"_index":729,"title":{},"body":{"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts:12",{"_index":741,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:20",{"_index":780,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:40",{"_index":753,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:63",{"_index":746,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:74",{"_index":769,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:82",{"_index":777,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:91",{"_index":772,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/singleton/htmlbalise.ts",{"_index":693,"title":{},"body":{"classes/HtmlBalise.html":{},"coverage.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:39",{"_index":703,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:49",{"_index":701,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:9",{"_index":700,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/components/game",{"_index":288,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":800,"title":{},"body":{"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":823,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/player",{"_index":983,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["src/app/components/settings",{"_index":1012,"title":{},"body":{"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/start",{"_index":1100,"title":{},"body":{"components/StartButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/title/title.component.ts",{"_index":1127,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/services/gameoptionservice/game",{"_index":666,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["stage1",{"_index":760,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["standar",{"_index":371,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standard",{"_index":192,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["standardvalue",{"_index":485,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standarvalue",{"_index":301,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["start",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["startbuttoncomponent",{"_index":71,"title":{"components/StartButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1213,"title":{"index.html":{}},"body":{}}],["starts",{"_index":329,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["statements",{"_index":1175,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":696,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["step",{"_index":259,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["stops",{"_index":949,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["stored",{"_index":1236,"title":{},"body":{"index.html":{}}}],["strict",{"_index":398,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["strictdecorator",{"_index":375,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["strictdecorator(this.game",{"_index":399,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["strkey",{"_index":912,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["stroke",{"_index":508,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["stvalue",{"_index":704,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["style",{"_index":483,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["summary",{"_index":211,"title":{},"body":{"interfaces/Game.html":{}}}],["support",{"_index":1254,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1255,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1195,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1194,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":755,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["tags",{"_index":694,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["takes",{"_index":459,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["task",{"_index":249,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["tasks",{"_index":931,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["teh",{"_index":473,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["test",{"_index":663,"title":{},"body":{"classes/GameConcret.html":{},"index.html":{}}}],["testing",{"_index":1249,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1241,"title":{},"body":{"index.html":{}}}],["text",{"_index":489,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["texttoshow",{"_index":484,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["things",{"_index":535,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.actualfunctioninbacklog",{"_index":657,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.actuallog",{"_index":904,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata",{"_index":654,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.backlogdata.foreach((item",{"_index":1057,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.backlogdata[item",{"_index":921,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[itemname",{"_index":896,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[key",{"_index":662,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.balise",{"_index":390,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.balise.playerbutton.style.display",{"_index":392,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.bsetupdefaultvalue",{"_index":655,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.buttonclicked.emit",{"_index":817,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["this.content",{"_index":793,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["this.data",{"_index":923,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data.asobservable",{"_index":686,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data.next(newdata",{"_index":692,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data[\"actuallog",{"_index":917,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"backlog",{"_index":919,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"default",{"_index":916,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"mode",{"_index":915,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"note",{"_index":920,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[strkey",{"_index":913,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.dataservice.data$.subscribe(data",{"_index":411,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.dataservice.setdata(this.data",{"_index":924,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.defaultvalue",{"_index":656,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.endmessage",{"_index":715,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.finishbutton",{"_index":723,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.game",{"_index":396,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.choosedefaultvalue",{"_index":410,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.continuegame(this.getdefaultvalue",{"_index":407,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getactualstage",{"_index":451,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.creatanddownloadjson",{"_index":446,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isdownload",{"_index":445,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isretry",{"_index":448,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.lunchstage",{"_index":450,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.playerpushbutton(id",{"_index":438,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setactualplayerturn(1",{"_index":449,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setbacklogdata(backlogdata",{"_index":433,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setdefaultvalue(valueelement.value",{"_index":444,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setplayers(players",{"_index":428,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setupdefaultvalue",{"_index":439,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.gamemodemessage",{"_index":725,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.getactuellog",{"_index":408,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getmode",{"_index":397,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getnote(parseint(key.match(/\\d+/)?.[0",{"_index":437,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.htmldisplay",{"_index":394,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.inputvalue",{"_index":727,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.iscontinue",{"_index":405,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.mode",{"_index":886,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playerbutton",{"_index":719,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.playernumber",{"_index":1041,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players",{"_index":652,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.players.push(item",{"_index":902,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.players[id",{"_index":1048,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players[key",{"_index":659,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[playerkey",{"_index":914,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playersnb",{"_index":1043,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnote",{"_index":661,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.playersnote[key",{"_index":660,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.popupisopen",{"_index":927,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":447,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklog",{"_index":409,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklognote",{"_index":406,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setplayers",{"_index":404,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.stvalue",{"_index":711,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.task",{"_index":713,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.title",{"_index":717,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.validatebutton",{"_index":721,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["throw",{"_index":649,"title":{},"body":{"classes/GameConcret.html":{}}}],["time",{"_index":843,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["title.component.html",{"_index":1130,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":1129,"title":{},"body":{"components/TitleComponent.html":{}}}],["titlecomponent",{"_index":72,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":571,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["top_left",{"_index":1067,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["top_right",{"_index":1069,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["transform",{"_index":540,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["transformer",{"_index":789,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transformjavascript",{"_index":785,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transition",{"_index":568,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["translate",{"_index":978,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["translatey",{"_index":1122,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["transmitting",{"_index":669,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["transparent",{"_index":506,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["triggered",{"_index":262,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["true",{"_index":418,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["tslib",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":246,"title":{},"body":{"interfaces/Game.html":{},"components/MainMenuComponent.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["typeface",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1077,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["undefined",{"_index":345,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["under",{"_index":1112,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["unit",{"_index":1240,"title":{},"body":{"index.html":{}}}],["url(\"../../../assets/images/card.jpg",{"_index":557,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/hypnotic.jpg",{"_index":516,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/player",{"_index":990,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["url('../../../assets/images/hand.png",{"_index":563,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url('../assets/fonts/pressstart2p",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=exo:wght@900&display=swap",{"_index":1133,"title":{},"body":{"components/TitleComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=mr+dafoe&display=swap",{"_index":1132,"title":{},"body":{"components/TitleComponent.html":{}}}],["use",{"_index":758,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["used",{"_index":688,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["useful",{"_index":199,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["user",{"_index":1013,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["using",{"_index":250,"title":{},"body":{"interfaces/Game.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["validatebutton",{"_index":707,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["validestage",{"_index":309,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["valueelement",{"_index":440,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valueelement.value",{"_index":443,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valuers",{"_index":766,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["values",{"_index":198,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["var",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["variable",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["various",{"_index":756,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["version",{"_index":1216,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1088,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["via",{"_index":1243,"title":{},"body":{"index.html":{}}}],["view",{"_index":845,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["void",{"_index":187,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["want",{"_index":749,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["we'll",{"_index":778,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["webkit",{"_index":507,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["website",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["weight",{"_index":929,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["whether",{"_index":284,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["white",{"_index":488,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["whose",{"_index":1020,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["width",{"_index":462,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["window",{"_index":856,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["work",{"_index":895,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["worker",{"_index":790,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["wrap",{"_index":513,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["written",{"_index":618,"title":{},"body":{"classes/GameConcret.html":{}}}],["yes",{"_index":765,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["you'll",{"_index":932,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["you've",{"_index":938,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["you\\'ll",{"_index":981,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["you\\'ve",{"_index":982,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["z",{"_index":567,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["zone.js",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component that display everything.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'planningPokerPP'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Variable that contains the name of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main component that display everything.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  /**\n   * Variable that contains the name of the website.\n   */\n  title = 'planningPokerPP';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @font-face {\n  font-family: 'Press Start 2P';\n  src: url('../assets/fonts/PressStart2P-Regular.ttf');\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponentComponent\n                        \n                        \n                            InformationButtonComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            PlayerCardComponent\n                        \n                        \n                            SettingsComponentComponent\n                        \n                        \n                            StartButtonComponent\n                        \n                        \n                            TitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {StartButtonComponent} from './components/start-button/start-button.component';\nimport {InformationButtonComponent} from './components/information-button/information-button.component';\n\nimport {MainMenuComponent} from './components/main-menu/main-menu.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SettingsComponentComponent} from './components/settings-component/settings-component.component';\nimport { GameComponentComponent } from './components/game-component/game-component.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { PlayerCardComponent } from './components/player-card/player-card.component';\nimport {NgIf} from \"@angular/common\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartButtonComponent,\n    InformationButtonComponent,\n    MainMenuComponent,\n    SettingsComponentComponent,\n    GameComponentComponent,\n    TitleComponent,\n    PlayerCardComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        MatIconModule,\n        NoopAnimationsModule,\n        NgIf,\n        MatSidenavModule,\n        MatButtonModule\n    ],\n  providers:\n    [],\n  bootstrap:\n    [AppComponent]\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponentComponent} from \"./components/settings-component/settings-component.component\";\nimport {MainMenuComponent} from \"./components/main-menu/main-menu.component\";\nimport {GameComponentComponent} from \"./components/game-component/game-component.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: MainMenuComponent},\n  {path: 'lobby', component: SettingsComponentComponent},\n  {path: 'game', component: GameComponentComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/Game.ts\n        \n\n\n            \n                Description\n            \n            \n                Game interface for the Decorator design pattern\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addNote\n                                    \n                                \n                                \n                                    \n                                        chooseDefaultValue\n                                    \n                                \n                                \n                                    \n                                        continueGame\n                                    \n                                \n                                \n                                    \n                                        creatAndDownloadJSON\n                                    \n                                \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        getActualStage\n                                    \n                                \n                                \n                                    \n                                        getBacklogData\n                                    \n                                \n                                \n                                    \n                                        getBacklogDataNote\n                                    \n                                \n                                \n                                    \n                                        getDefaultValue\n                                    \n                                \n                                \n                                    \n                                        getNote\n                                    \n                                \n                                \n                                    \n                                        getNotes\n                                    \n                                \n                                \n                                    \n                                        getPlayer\n                                    \n                                \n                                \n                                    \n                                        getPlayerNumber\n                                    \n                                \n                                \n                                    \n                                        getPlayers\n                                    \n                                \n                                \n                                    \n                                        isDownload\n                                    \n                                \n                                \n                                    \n                                        isRetry\n                                    \n                                \n                                \n                                    \n                                        lunchStage\n                                    \n                                \n                                \n                                    \n                                        modifyBacklogData\n                                    \n                                \n                                \n                                    \n                                        nextStage\n                                    \n                                \n                                \n                                    \n                                        playerPushButton\n                                    \n                                \n                                \n                                    \n                                        setActualPlayerTurn\n                                    \n                                \n                                \n                                    \n                                        setBacklogData\n                                    \n                                \n                                \n                                    \n                                        setDefaultValue\n                                    \n                                \n                                \n                                    \n                                        setPlayers\n                                    \n                                \n                                \n                                    \n                                        setStage\n                                    \n                                \n                                \n                                    \n                                        setupDefaultValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:101\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:21\n                        \n                    \n\n\n            \n                \n                        Function that prompts players to enter the standard value\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:28\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:134\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:145\n                        \n                    \n\n\n            \n                \n                        Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:62\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:83\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:151\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:78\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:112\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:106\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:73\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:67\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:94\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:129\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:124\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:57\n                        \n                    \n\n\n            \n                \n                        Game function, during this phase the players, each in turn, give the score they would give to the current task\nusing the Planing Poker card.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:119\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:45\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:89\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:140\n                        \n                    \n\n\n            \n                \n                        Set the player who must play\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who is to play\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:16\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:40\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:10\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:51\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:34\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Game {\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [key: number]: string }): void;\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key: string]: number }): void;\n\n  /**\n   * Function that prompts players to enter the standard value\n   */\n  chooseDefaultValue(): void;\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void;\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean;\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void;\n\n  /**\n   * Next step function\n   */\n  nextStage(): void;\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void;\n\n  /**\n   * Game function, during this phase the players, each in turn, give the score they would give to the current task\n   * using the Planing Poker card.\n   */\n  lunchStage(): void;\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number;\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number;\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string;\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string;\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [key: string]: number };\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void;\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [key: number]: string };\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value: string, key: string): void\n\n  /**\n   * Return to note list\n   */\n  getNotes(): { [key: string]: string };\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key: string): string;\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key: string, value: number): void;\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean;\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean;\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON() : { [p: string]: any };\n\n  /**\n   * Set the player who must play\n   * @param n {number} Id of the player who is to play\n   */\n  setActualPlayerTurn(n : number): void;\n\n  /**\n   * Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n   */\n  end() : void;\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponentComponent.html":{"url":"components/GameComponentComponent.html","title":"component - GameComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-component/game-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class that manages game display\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                game-component\n            \n\n\n\n            \n                styleUrls\n                ./game-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backlogValue\n                            \n                            \n                                balise\n                            \n                            \n                                game\n                            \n                            \n                                htmlDisplay\n                            \n                            \n                                listValue\n                            \n                            \n                                opened\n                            \n                            \n                                standarValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActuelLog\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getMode\n                            \n                            \n                                getNote\n                            \n                            \n                                isContinue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectButton\n                            \n                            \n                                setBacklog\n                            \n                            \n                                setBacklogNote\n                            \n                            \n                                setPlayers\n                            \n                            \n                                valideStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-component/game-component.component.ts:22\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Contains data to start the game\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                site router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActuelLog\n                        \n                    \n                \n            \n            \n                \ngetActuelLog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:192\n                        \n                    \n\n\n            \n                \n                        retrieves the function currently noted\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Get default value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMode\n                        \n                    \n                \n            \n            \n                \ngetMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Get Game Mode\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Get Note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who set the note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContinue\n                        \n                    \n                \n            \n            \n                \nisContinue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Are we back in the game\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Function that starts the game after the page has loaded\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectButton\n                        \n                    \n                \n            \n            \n                \nselectButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:243\n                        \n                    \n\n\n            \n                \n                        Function that starts when a button is pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function identifier\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklog\n                        \n                    \n                \n            \n            \n                \nsetBacklog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Set Backlog Data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogNote\n                        \n                    \n                \n            \n            \n                \nsetBacklogNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:222\n                        \n                    \n\n\n            \n                \n                        Add a not to the Backlog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Set Player in game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valideStage\n                        \n                    \n                \n            \n            \n                \nvalideStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:250\n                        \n                    \n\n\n            \n                \n                        Function that starts when the player presses the button continue\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backlogValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:64\n                        \n                    \n\n            \n                \n                    Backlog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:50\n                        \n                    \n\n            \n                \n                    Singleton containing andlocations for HTML elements\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:35\n                        \n                    \n\n            \n                \n                    Game data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:40\n                        \n                    \n\n            \n                \n                    Class to display elements on the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of available notes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:55\n                        \n                    \n\n            \n                \n                    If the bare is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        standarValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:60\n                        \n                    \n\n            \n                \n                    Standar value\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Game} from \"../../classes/decorateur/Game\";\nimport {GameConcret} from \"../../classes/decorateur/GameConcret\";\nimport {StrictDecorator} from \"../../classes/decorateur/StrictDecorator\";\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {HtmlDisplay} from \"../../classes/facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../../classes/singleton/htmlBalise\";\nimport {Router} from \"@angular/router\";\nimport {AverageDecorator} from \"../../classes/decorateur/AverageDecorator\";\nimport {MajabsDecorator} from \"../../classes/decorateur/MajabsDecorator\";\n\n/**\n * Class that manages game display\n * @implements AfterViewInit\n * @implements OnInit\n */\n@Component({\n  selector: 'game-component',\n  templateUrl: './game-component.component.html',\n  styleUrls: ['./game-component.component.scss']\n})\nexport class GameComponentComponent implements AfterViewInit, OnInit {\n\n  /**\n   * Class constructor\n   * @param dataService {GameOptionServiceService} Contains data to start the game\n   * @param router {Router} site router\n   */\n  constructor(private dataService: GameOptionServiceService, private router: Router) {\n  }\n\n  /**\n   * Game data\n   */\n  game: Game | undefined;\n\n  /**\n   * Class to display elements on the page\n   */\n  htmlDisplay: HtmlDisplay | undefined;\n\n  /**\n   * List of available notes\n   */\n  listValue = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n\n  /**\n   * Singleton containing andlocations for HTML elements\n   */\n  balise: HtmlBalise | undefined;\n\n  /**\n   * If the bare is open\n   */\n  opened = false;\n\n  /**\n   * Standar value\n   */\n  standarValue: string = \"\"\n  /**\n   * Backlog\n   */\n  backlogValue: string = \"\"\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Function that starts the game after the page has loaded\n   */\n  ngAfterViewInit(): void {\n    this.balise = HtmlBalise.getInstance();\n    this.balise.playerButton.style.display = 'none';\n    this.htmlDisplay = new HtmlDisplay();\n    this.game = new GameConcret();\n    if (this.getMode() == \"strict\") this.game = new StrictDecorator(this.game);\n    else if (this.getMode() == \"moyenne\") this.game = new AverageDecorator(this.game);\n    else if (this.getMode() == \"majabs\") this.game = new MajabsDecorator(this.game);\n    else this.game = new StrictDecorator(this.game)\n    this.setPlayers()\n\n    if (this.isContinue()) {\n      this.setBacklogNote()\n      this.game.continueGame(this.getDefaultValue(), this.getActuelLog());\n\n    } else {\n      this.setBacklog()\n      this.game.chooseDefaultValue();\n    }\n  }\n\n  /**\n   * Get Game Mode\n   */\n  getMode(): string {\n    let mode = \"strict\"\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Mode')) {\n            mode = data[key];\n          }\n        });\n      }\n    });\n    return mode\n  }\n\n  /**\n   * Are we back in the game\n   */\n  isContinue(): boolean {\n    let cont = false;\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith(\"Default\")) {\n            cont = true;\n          }\n        })\n      }\n    })\n    return cont;\n  }\n\n  /**\n   * Set Player in game\n   */\n  setPlayers() {\n    let players: { [key: number]: string } = {}\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Player')) {\n            const playerNumber = parseInt(key.replace('Player', ''), 10);\n            players[playerNumber] = data[key];\n          }\n        });\n      } else {\n        players[1] = \"Michel\";\n        players[2] = \"Patrick\";\n      }\n    });\n    this.game?.setPlayers(players)\n  }\n\n  /**\n   * Set Backlog Data\n   */\n  setBacklog() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = 1;\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = -1;\n        backlogData[\"Boutton Quiter\"] = -1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Get Note\n   * @param id Id of the player who set the note\n   */\n  getNote(id: number): number {\n    let n = 0\n\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Note' + id)) {\n          n = data[key];\n        }\n      })\n    })\n\n    return n\n  }\n\n  /**\n   * retrieves the function currently noted\n   */\n  getActuelLog(): number {\n    let n = 0;\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('actualLog')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Get default value\n   */\n  getDefaultValue(): string {\n    let n = \"\";\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Default')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Add a not to the Backlog\n   */\n  setBacklogNote() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = this.getNote(parseInt(key.match(/\\d+/)?.[0] || ''));\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Function that starts when a button is pressed\n   * @param id function identifier\n   */\n  selectButton(id: string) {\n    this.game?.playerPushButton(id)\n  }\n\n  /**\n   * Function that starts when the player presses the button continue\n   */\n  valideStage() {\n    if (this.game?.setupDefaultValue()) {\n      const valueElement = document.getElementById(\"stage1\") as HTMLInputElement;\n      if (valueElement.value != \"\") {\n        this.game?.setDefaultValue(valueElement.value)\n      }\n    } else {\n\n      if (this.game?.isDownload()) {\n        this.game?.creatAndDownloadJSON();\n        this.router.navigateByUrl('/').then(r => true);\n      } else {\n        if (this.game?.isRetry()) {\n          this.game?.setActualPlayerTurn(1);\n          this.game?.lunchStage();\n        } else {\n          if (this.game != null) {\n            if (this.game.getActualStage()  {\n        if(n \n    \n\n    \n        \n  \n    \n      clear\n    \n    \n       Résumé \n      Standard value : {{standarValue}}\n      {{backlogValue}}\n    \n  \n  \n    \n\n      \n        \n        \n\n        \n           menu\n        \n      \n\n      \n\n      \n\n      \n\n      \n        \n      \n\n\n      \n        \n          local_cafe\n           {{ i }}\n        \n      \n\n      \n      \n\n\n      \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./game-component.component.scss\n                \n                /* This is a div that contain everything and takes all the page. */\n.container {\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n\n/* The div that contains the title, teh actual task and the button to open the sidenav. */\n.header {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n}\n\n\n/* Here we choose the style for the display of the actual task, the title and the standard value. */\n#textToShow, #StandardValue, #ActualTask {\n  color: white;\n  text-align: center;\n}\n\n#textToShow {\n  grid-column: 1/2;\n  grid-row: 1;\n  text-align: center;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.5em;\n  padding: 10px 0;\n  border-radius: 2.5em;\n  margin: 0 20% 0 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-shadow: 0 0 20px #0fa, 0 0 120px #0fa;\n  color: transparent;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#StandardValue {\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n#ActualTask {\n  grid-column: 3 / 10;\n  grid-row: 1;\n  text-align: center;\n  background-image: url(\"../../../assets/images/hypnotic.jpg\");\n  background-size: 100%;\n  border-radius: 2em;\n  padding: 10px 0;\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  font-family: 'Press Start 2P', serif;\n  min-height: 80px;\n  min-width: 800px;\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  justify-content: center;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#endMessage, #gameModeMessage{\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  text-align: center;\n}\n\n\n/* It's here that we style all things about the sidenav. */\nmat-sidenav-container {\n  height: 100%;\n  background: none;\n}\n\nmat-sidenav {\n  width: 300px;\n  padding: 10px;\n}\n\n.header_sidenav {\n  grid-column: 11;\n  grid-row: 1;\n  transform: scale(1.2);\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: white;\n  padding: 0 10px 100px 0;\n  width: 90%;\n  text-align: right;\n\n  &:active {\n    color: #797777;\n  }\n}\n\n.cross {\n  background: none;\n  color: red;\n  border: none;\n  cursor: pointer;\n\n  &:active {\n    color: #730505;\n  }\n}\n\n\n/* It's the div that contains every card the player can choose. With all the style that came with his children. */\n#PlayerButton {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-button {\n  width: 150px;\n  height: 210px;\n  background-image: url(\"../../../assets/images/card.jpg\");\n  background-size: 95%;\n  filter: brightness(0.8);\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  margin-right: -50px;\n  border-radius: 0.3rem;\n  cursor: url('../../../assets/images/hand.png'), auto;\n  position: relative;\n  z-index: 1;\n  transition: margin-right 0.3s ease, top 0.3s ease;\n\n  &:hover {\n    margin-right: 0;\n    top: -50px;\n  }\n\n  &:active {\n    transform: scale(0.85);\n  }\n}\n\n.card-button_label {\n  width: auto;\n  height: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-shadow: 0 0 7px #0fa, 0 0 120px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 2.5em;\n}\n\n.card-button_icon {\n  height: 210px;\n  text-shadow: rgb(0, 255, 170) 0.1px 0.2px 6px;\n  color: rgb(255, 255, 255);\n  font-size: 3.2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n/* Here is the style of the div that contains the input and the input itself. */\n.input-group {\n  width: 35em;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n\n  &__input {\n    height: calc(1em + 1.6em + 0.5em);\n    width: 100%;\n\n    background-image: linear-gradient(#e3e3e3, #e3e3e3),\n    linear-gradient(120deg, #1beabd 0%, #0ff 50%, #20125f 100%);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n    background-size: 200% 100%;\n    color: #000000;\n\n    line-height: 1;\n    outline: none;\n    padding: 0 1em;\n    font-family: 'Press Start 2P', serif;\n\n    border: 0.25em solid transparent;\n    border-radius: 1.8em;\n\n    &:focus {\n      box-shadow: 0 0 0 0 #fff,\n      3px -3px 30px #1beabd,\n      -3px 3px 30px #10abff;\n    }\n  }\n}\n\n::placeholder {\n  color: #8d8d8d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear               Résumé       Standard value : {{standarValue}}      {{backlogValue}}                                                     menu                                                                            local_cafe           {{ i }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConcret.html":{"url":"classes/GameConcret.html","title":"class - GameConcret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConcret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/GameConcret.ts\n        \n\n\n            \n                Description\n            \n            \n                Class containing all game information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualFunctionInBacklog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                bSetupDefaultValue\n                            \n                            \n                                defaultValue\n                            \n                            \n                                Players\n                            \n                            \n                                PlayersNote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                continueGame\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setStage\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualFunctionInBacklog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:44\n                        \n                    \n\n            \n                \n                    Which backlog function is being written down\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:29\n                        \n                    \n\n            \n                \n                    Backlog list with associated rating\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bSetupDefaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:34\n                        \n                    \n\n            \n                \n                    Has the standard value been defined?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:39\n                        \n                    \n\n            \n                \n                    Standard value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:21\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersNote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:25\n                        \n                    \n\n            \n                \n                    List of players in the game with the notes they have applied\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:148\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:14\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:220\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:96\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:125\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:180\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:118\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:163\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:155\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:111\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:103\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:139\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:213\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:187\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:172\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:89\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:133\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:59\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:81\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:50\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:229\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:73\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\n\n/**\n * Class containing all game information\n * @implements Game\n */\nexport class GameConcret implements Game{\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void {\n      throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * List of players in the game\n   */\n  Players: { [key: number]: string} = {};\n  /**\n   * List of players in the game with the notes they have applied\n   */\n  PlayersNote: { [key : string]: string } = {};\n  /**\n   * Backlog list with associated rating\n   */\n  BacklogData: { [key : string]: number } = {};\n\n  /**\n   * Has the standard value been defined?\n   */\n  bSetupDefaultValue = true;\n\n  /**\n   * Standard value\n   */\n  defaultValue = \"\";\n\n  /**\n   * Which backlog function is being written down\n   */\n  actualFunctionInBacklog : number = 0;\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [p: number]: string }): void {\n    this.Players = players\n    console.log(this.Players);\n  }\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key : string]: number }){\n    this.BacklogData = BacklogData\n  }\n\n  /**\n   * @ignore\n   */\n  chooseDefaultValue(): void {\n  }\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean {\n    return this.bSetupDefaultValue;\n  }\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void {\n    this.defaultValue = value\n    this.bSetupDefaultValue = false;\n  }\n\n  /**\n   * Next step function\n   */\n  nextStage(){\n    this.actualFunctionInBacklog++;\n  }\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number {\n    return this.actualFunctionInBacklog;\n  }\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number {\n    return Object.keys(this.Players).length;\n  }\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string {\n    return this.Players[key];\n  }\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string {\n    return this.defaultValue;\n  }\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [p: string]: number } {\n    return this.BacklogData;\n  }\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void {\n  }\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [p: number]: string } {\n    return this.Players;\n  }\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value : string, key : string) : void {\n    this.PlayersNote[key] = value;\n  }\n\n  /**\n   * Return to note list\n   */\n  getNotes() : { [key : string]: string }{\n    return this.PlayersNote;\n  }\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key : string) : string{\n    return this.PlayersNote[key];\n  }\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key : string, value : number) : void{\n    this.BacklogData[key] = value;\n  }\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number{\n    return this.BacklogData[key];\n  }\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean {\n    return false;\n  }\n\n  /**\n   * @ignore\n   * @param n\n   */\n  setActualPlayerTurn(n: number): void {\n  }\n\n  /**\n   * @ignore\n   */\n  end(): void {\n  }\n\n  /**\n   * @ignore\n   */\n  lunchStage(): void {\n  }\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean {\n    return false;\n  }\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON(): { [p: string]: any } {\n    const test : { [p: string]: any } = {}\n    return test;\n  }\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void {\n    this.actualFunctionInBacklog = nb;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameOptionServiceService.html":{"url":"injectables/GameOptionServiceService.html","title":"injectable - GameOptionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameOptionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/gameOptionService/game-option-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for transmitting data from one scene to another in JSON \nThis allows you to send data to save data when creating a scene\nor when resuming a game from the main menu\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(newData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/gameOptionService/game-option-service.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Function for sending data from one component to another\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Data to be passed from one component to another\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:18\n                        \n                    \n\n            \n                \n                    Variable containing the data sent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:23\n                        \n                    \n\n            \n                \n                    Variable used to retrieve sent data\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n/**\n * Service for transmitting data from one scene to another in JSON \n * This allows you to send data to save data when creating a scene\n * or when resuming a game from the main menu\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameOptionServiceService {\n\n  /**\n   * Variable containing the data sent\n   * @private\n   */\n  private data = new BehaviorSubject(null);\n\n  /**\n   * Variable used to retrieve sent data\n   */\n  data$ = this.data.asObservable();\n\n  /**\n   * Function for sending data from one component to another\n   * @param {any} newData Data to be passed from one component to another\n   * @return {void}\n   */\n  setData(newData: any): void {\n    this.data.next(newData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlBalise.html":{"url":"classes/HtmlBalise.html","title":"class - HtmlBalise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlBalise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/singleton/htmlBalise.ts\n        \n\n\n            \n                Description\n            \n            \n                class singleton which contains the html tags to be modified\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearInstance\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:9\n                        \n                    \n\n            \n                \n                    variable containing singleton class instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        clearInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:49\n                        \n                    \n\n\n            \n                \n                        Function to empty the instance to create a new one\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:39\n                        \n                    \n\n\n            \n                \n                        Function to retrieve class instance\n\n\n                        \n                            Returns :         HtmlBalise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HtmlBalise{\n  /**\n   * variable containing singleton class instance\n   * @private\n   */\n  private static instance: HtmlBalise | null = null;\n\n\n  /** @ignore */ stValue : HTMLElement\n  /** @ignore */ task : HTMLElement\n  /** @ignore */ endMessage : HTMLElement\n  /** @ignore */ title : HTMLDivElement\n  /** @ignore */ playerButton : HTMLDivElement\n  /** @ignore */ validateButton : HTMLButtonElement\n  /** @ignore */ finishButton : HTMLElement;\n  /** @ignore */ gameModeMessage : HTMLDivElement;\n  /** @ignore */ inputValue : HTMLInputElement;\n\n  /** @ignore */\n  private constructor() {\n    this.stValue = document.getElementById(\"StandardValue\") as HTMLElement\n    this.task = document.getElementById(\"ActualTask\") as HTMLElement\n    this.endMessage = document.getElementById(\"endMessage\") as HTMLElement\n    this.title = document.getElementById(\"textToShow\") as HTMLDivElement\n    this.playerButton = document.getElementById(\"PlayerButton\") as HTMLDivElement;\n    this.validateButton = document.getElementById(\"validateButton\") as HTMLButtonElement;\n    this.finishButton = document.getElementById(\"finishButton\") as HTMLElement;\n    this.gameModeMessage = document.getElementById(\"gameModeMessage\") as HTMLDivElement;\n    this.inputValue = document.getElementById(\"stage1\") as HTMLInputElement;\n  }\n\n  /**\n   * Function to retrieve class instance\n   * @return {HtmlBalise}\n   */\n  static getInstance(): HtmlBalise {\n    if (!HtmlBalise.instance){\n      HtmlBalise.instance = new HtmlBalise();\n    }\n    return HtmlBalise.instance;\n  }\n\n  /**\n   * Function to empty the instance to create a new one\n   */\n  static clearInstance(): void{\n    HtmlBalise.instance = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlDisplay.html":{"url":"classes/HtmlDisplay.html","title":"class - HtmlDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/facade/HtmlDisplay.ts\n        \n\n\n            \n                Description\n            \n            \n                Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                addHtmlElement\n                            \n                            \n                                addText\n                            \n                            \n                                clearHTML\n                            \n                            \n                                displayHTML\n                            \n                            \n                                showText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/facade/HtmlDisplay.ts:12\n                        \n                    \n\n            \n                \n                    Variable that contains everything that will be added to the DOM in HTML format\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(id: string, classe: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:63\n                        \n                    \n\n\n            \n                \n                        Function for adding a class to an HTML object by passing its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the element to which you want to add a class\n\n                                            \n                                        \n                                        \n                                                classe\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    name of the class to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHtmlElement\n                        \n                    \n                \n            \n            \n                \naddHtmlElement(type: string, id?: string, additionalValue?: literal type, closeBalise: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:40\n                        \n                    \n\n\n            \n                \n                        Function that adds an HTML tag with its various parameters to the content variable.\nExample ://Example of use\nconst balise = HtmlBalise.getInstance()\nlet html = new HtmlDisplay()\nhtml.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\nhtml.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"div\"\n                                            \n\n                                            \n                                                    type of HTML tag to be placed in the DOM\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    id of element to be added to DOM\n\n                                            \n                                        \n                                        \n                                                additionalValue\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    list containing the add valuers of the add element type of [key : string] : string\n\n                                            \n                                        \n                                        \n                                                closeBalise\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    defined if the added tag is a closing tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addText\n                        \n                    \n                \n            \n            \n                \naddText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:74\n                        \n                    \n\n\n            \n                \n                        Function to add a text to the content, not an HTML tag but a text to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text to be added to content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHTML\n                        \n                    \n                \n            \n            \n                \nclearHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:91\n                        \n                    \n\n\n            \n                \n                        Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element to be emptied\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayHTML\n                        \n                    \n                \n            \n            \n                \ndisplayHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:82\n                        \n                    \n\n\n            \n                \n                        Function for adding content to an HTML object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element in which we'll add all the content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showText\n                        \n                    \n                \n            \n            \n                \nshowText(label: HTMLElement, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:20\n                        \n                    \n\n\n            \n                \n                        Function that places a text in an HTML DOM element\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    reference to an HTML element to which a text has been added\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text which will be placed in an HTML component\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {connect} from \"rxjs\";\nimport transformJavaScript from \"@angular-devkit/build-angular/src/tools/esbuild/javascript-transformer-worker\";\n\n/**\n * Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n */\nexport class HtmlDisplay{\n\n  /**\n   * Variable that contains everything that will be added to the DOM in HTML format\n   */\n  content = \"\";\n\n\n  /**\n   * Function that places a text in an HTML DOM element\n   * @param label {HTMLElement} reference to an HTML element to which a text has been added\n   * @param text {string} text which will be placed in an HTML component\n   */\n  showText(label : HTMLElement, text : string){\n    label.innerText = text;\n  }\n\n  /**\n   * Function that adds an HTML tag with its various parameters to the content variable.\n   *\n   * @example\n   * //Example of use\n   * const balise = HtmlBalise.getInstance()\n   * let html = new HtmlDisplay()\n   * html.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\n   * html.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n   *\n   *\n   * @param type {string} type of HTML tag to be placed in the DOM\n   * @param id {string} id of element to be added to DOM\n   * @param additionalValue {{[string] : string}} list containing the add valuers of the add element type of [key : string] : string\n   * @param closeBalise {boolean} defined if the added tag is a closing tag\n   */\n  addHtmlElement(type : string = \"div\", id? : string, additionalValue? : {[key : string] : string}, closeBalise : boolean = false){\n    if(!closeBalise) {\n      this.content += \" {\n          this.content += key + \"='\" + additionalValue[key] + \"' \"\n        });\n      }\n\n      this.content += \">\"\n    }else{\n      this.content += \"\";\n    }\n  }\n\n  /**\n   * Function for adding a class to an HTML object by passing its ID\n   * @param id {string} id of the element to which you want to add a class\n   * @param classe {string} name of the class to be added\n   */\n  addClass(id: string, classe: string){\n    const element = document.getElementById(id);\n    if(element == null) return\n    console.log(\"aa\")\n    element.classList.add(classe);\n  }\n\n  /**\n   * Function to add a text to the content, not an HTML tag but a text to be displayed.\n   * @param text {string} text to be added to content\n   */\n  addText(text : string){\n    this.content += text;\n  }\n\n  /**\n   * Function for adding content to an HTML object\n   * @param element {HTMLElement} DOM element in which we'll add all the content\n   */\n  displayHTML(element : HTMLElement){\n    element.innerHTML = this.content;\n    this.content = \"\"\n  }\n\n  /**\n   * Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n   * @param element {HTMLElement} DOM element to be emptied\n   */\n  clearHTML(element : HTMLElement){\n    element.innerHTML = \"\";\n    this.content = \"\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationButtonComponent.html":{"url":"components/InformationButtonComponent.html","title":"component - InformationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-button/information-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create an information button to explain the rules and the goal of this website.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-button\n            \n\n\n\n            \n                styleUrls\n                ./information-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/information-button/information-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/information-button/information-button.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\n\n/**\n * Component that create an information button to explain the rules and the goal of this website.\n */\n@Component({\n  selector: 'information-button',\n  templateUrl: './information-button.component.html',\n  styleUrls: ['./information-button.component.scss']\n})\n\nexport class InformationButtonComponent {\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n}\n\n    \n\n    \n        \n  help\n\n\n    \n\n    \n                \n                    ./information-button.component.scss\n                \n                .information_button {\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n\n  &:hover {\n    cursor: pointer;\n    color: #3146d3;\n  }\n}\n\n.icon-display {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  help'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-menu/main-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n\n\n            \n                styleUrls\n                ./main-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualLog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                defaultValue\n                            \n                            \n                                mode\n                            \n                            \n                                players\n                            \n                            \n                                popupIsOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                openInformation\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main-menu/main-menu.component.ts:13\n                            \n                        \n\n                \n                    \n                            Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:29\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:65\n                        \n                    \n\n\n            \n                \n                        Function to save data from the input JSON file as a variable for use in the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    con contains the JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInformation\n                        \n                    \n                \n            \n            \n                \nopenInformation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Opens or closes popup window when information button is clicked\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Function to send previously recorded data to game-option-service for in-game use\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:59\n                        \n                    \n\n            \n                \n                    First Backlog not yet graded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:43\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:39\n                        \n                    \n\n            \n                \n                    Data sent to the game in JSON format\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:51\n                        \n                    \n\n            \n                \n                    Standard value used\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:47\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:55\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popupIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:24\n                        \n                    \n\n            \n                \n                    Defines whether the popup is already displayed or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create page for the main menu of the website. We can choose here if we want to start a\n * new game or load a game from a json file.\n */\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit{\n\n  /**\n   * Component that create page for the main menu of the website. We can choose here if we want to start a\n   * new game or load a game from a json file.\n   */\n  constructor(private dataService: GameOptionServiceService) {}\n\n  /**\n   * Defines whether the popup is already displayed or not\n   */\n  popupIsOpen = false\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n      const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n      button.style.display = \"none\";\n      const popup = document.getElementById(\"popup\") as HTMLDivElement;\n      popup.style.display = \"none\";\n  }\n\n  /**\n   * Data sent to the game in JSON format\n   */\n  Data: { [Type: string]: string} = {}\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: { [key : string]: number } = {};\n  /**\n   * Select game mode\n   */\n  mode = \"\"\n  /**\n   * Standard value used\n   */\n  defaultValue = \"\"\n  /**\n   * List of players in the game\n   */\n  players : string[] = []\n  /**\n   * First Backlog not yet graded\n   */\n  actualLog = 0;\n\n  /**\n   * Function to save data from the input JSON file as a variable for use in the game\n   * @param event {event} con contains the JSON file\n   */\n  onFileSelected(event: any = 0){\n    this.players = [];\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n      // Extract names from JSON using keys\n\n      this.mode = jsonData.mode\n      this.defaultValue = jsonData.default\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          for (const itemName in item) {\n            if (item.hasOwnProperty(itemName) && itemName !== 'work') {\n              this.BacklogData[itemName] = item[itemName] as number\n            }\n          }\n        }\n      }\n\n      for(const key in jsonData.Players){\n        if (jsonData.Players.hasOwnProperty(key)) {\n          const item : string = jsonData.Players[key];\n          this.players.push(item);\n        }\n      }\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          if (!item.work) {\n            this.actualLog = parseInt(key) - 1;\n            break;\n          }\n        }\n      }\n\n      console.log(this.mode, this.defaultValue, this.BacklogData, this.players, this.actualLog)\n\n      setTimeout(() => {\n        const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n        button.style.display = \"flex\"\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n\n  /**\n   * Function to send previously recorded data to game-option-service for in-game use\n   */\n  sendData(){\n    Object.keys(this.players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + (playerKey + 1);\n      this.Data[strKey] = this.players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n    this.Data[\"Default\"] = this.defaultValue;\n    this.Data[\"actualLog\"] = (this.actualLog + 1) + \"\";\n\n    Object.keys(this.BacklogData).forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n      this.Data[\"Note\" + index] = this.BacklogData[item] + \"\"\n    });\n\n    console.log(\"data\", this.Data);\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * Opens or closes popup window when information button is clicked\n   */\n  openInformation(){\n    const popup = document.getElementById(\"popup\") as HTMLDivElement;\n    if(this.popupIsOpen) popup.style.display = \"none\";\n    else popup.style.display = \"block\";\n    this.popupIsOpen = !this.popupIsOpen;\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n    \n    Chose a json file\n  \n\n\n  Game rules\n  \n    First choose the default value, this task will have the weight of 1 and you will use it to define the other\n      tasks in the backlog.\n    \n    Each time it's your turn, you'll choose a grade (a weight) for the task you need to grade.\n    If everyone agrees, the score will be awarded, otherwise the rules of the mode you've chosen will apply.\n    If one of you chooses the interogation point, the game will pause and you will have to explain the task to the\n      player who set the interogation point. Then you'll have to go around again.\n    \n    If one of you puts down the coffee card, then the game stops, downloads a save game that you can use to resume\n      the game. And you can discuss this over a cup of coffee.\n    \n    Once all the notes have been entered, you will download a JSON containing the notes you have assigned.\n  \n\n\n    \n\n    \n                \n                    ./main-menu.component.scss\n                \n                .container_button {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 40%;\n}\n\n.container_info-button {\n  height: 25%;\n  padding: 80px 15px 0 35px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\nstart-button {\n  transform: scale(1.5);\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    font-family: 'Press Start 2P', serif;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n.container_bottom{\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  justify-content: center;\n  height: 20%;\n}\n\n#popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  padding: 20px;\n  border: 1px solid #ccc;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Chose a json file    Game rules      First choose the default value, this task will have the weight of 1 and you will use it to define the other      tasks in the backlog.        Each time it\\'s your turn, you\\'ll choose a grade (a weight) for the task you need to grade.    If everyone agrees, the score will be awarded, otherwise the rules of the mode you\\'ve chosen will apply.    If one of you chooses the interogation point, the game will pause and you will have to explain the task to the      player who set the interogation point. Then you\\'ll have to go around again.        If one of you puts down the coffee card, then the game stops, downloads a save game that you can use to resume      the game. And you can discuss this over a cup of coffee.        Once all the notes have been entered, you will download a JSON containing the notes you have assigned.  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCardComponent.html":{"url":"components/PlayerCardComponent.html","title":"component - PlayerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-card/player-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a card for the player and their name, to have a better display\nin the .\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-card\n            \n\n\n\n            \n                styleUrls\n                ./player-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                i\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-card/player-card.component.ts:17\n                            \n                        \n                \n                    \n                        Value of the current player.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * Component that create a card for the player and their name, to have a better display\n * in the .\n */\n@Component({\n  selector: 'player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.scss']\n})\n\nexport class PlayerCardComponent {\n  /**\n   * Value of the current player.\n   */\n  @Input() i: number = 0;\n}\n\n    \n\n    \n        \n   Player {{i}} \n  \n\n\n    \n\n    \n                \n                    ./player-card.component.scss\n                \n                .card {\n  display: flex;\n  background-image: url(\"../../../assets/images/player-card-background.jpg\");\n  background-size: 50%;\n  flex-direction: column;\n  border-radius: 0.3rem;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem;\n  border: 1px solid #e0e0e0;\n  transition: 0.8s;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  width: 160px;\n\n  &:hover {\n    border: 1px solid #b0b0b0;\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.35);\n  }\n}\n\nh1 {\n  color: #fff;\n  text-shadow:\n    0 0 7px #fff,\n    0 0 10px #fff,\n    0 0 21px #fff,\n    0 0 42px #0fa,\n    0 0 82px #0fa,\n    0 0 92px #0fa,\n    0 0 102px #0fa,\n    0 0 151px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.2em;\n}\n\ninput {\n  background: #001546;\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 0.5em;\n  border: 1px solid white;\n  border-radius: 0.3rem;\n  padding: 7px 0 7px 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Player {{i}}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponentComponent.html":{"url":"components/SettingsComponentComponent.html","title":"component - SettingsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings-component/settings-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the page where the user will choose every option for his game.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-component\n            \n\n\n\n            \n                styleUrls\n                ./settings-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                mode\n                            \n                            \n                                playerMax\n                            \n                            \n                                playerNumber\n                            \n                            \n                                Players\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayerName\n                            \n                            \n                                changeMod\n                            \n                            \n                                getSliderValue\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlayerName\n                        \n                    \n                \n            \n            \n                \naddPlayerName(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Changes the name of the player whose name has just been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    input text value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMod\n                        \n                    \n                \n            \n            \n                \nchangeMod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Change game mode\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    value of check box\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSliderValue\n                        \n                    \n                \n            \n            \n                \ngetSliderValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Modifies the number of players by the slider value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    slider value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Changes backlog values based on imported JSON file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Sends data to the game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:26\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:21\n                        \n                    \n\n            \n                \n                    Data that will be passed to the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"strict\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:36\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:31\n                        \n                    \n\n            \n                \n                    Maximum number of players per game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:41\n                        \n                    \n\n            \n                \n                    Current number of players\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of players\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create the page where the user will choose every option for his game.\n */\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings-component.component.html',\n  styleUrls: ['./settings-component.component.scss']\n})\n\nexport class SettingsComponentComponent {\n  /** @ignore */\n  constructor(private dataService: GameOptionServiceService) {\n  }\n\n  /**\n   * Data that will be passed to the game\n   */\n  Data: { [Type: string]: string } = {}\n\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: string[] = [];\n\n  /**\n   * Maximum number of players per game\n   */\n  playerMax: number = 15;\n\n  /**\n   * Select game mode\n   */\n  mode = \"strict\";\n\n  /**\n   * Current number of players\n   */\n  playerNumber: number = 2;\n  /**\n   * List of players\n   */\n  Players: { [key: number]: string } = {}\n  /** @ignore */playersNb: number[] = [1, 2]\n\n  /**\n   * Modifies the number of players by the slider value\n   * @param event slider value\n   */\n  getSliderValue(event: any = 0) {\n    this.playerNumber = event.target.value;\n    this.playersNb = []\n    for (let i = 1; i  0) {\n      const placeholder = event.target.placeholder;\n      const match = placeholder.replace(/\\D/g, \"\");\n      const id = parseInt(match);\n      this.Players[id] = event.target.value.substring(0, 7);\n      console.log(this.Players);\n    }\n  }\n\n  /**\n   * Change game mode\n   * @param event value of check box\n   */\n  changeMod(event: any = 0) {\n    this.mode = event.target.value;\n    console.log(this.mode);\n  }\n\n  /**\n   * Changes backlog values based on imported JSON file\n   * @param event JSON file\n   */\n  onFileSelected(event: any = 0) {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n\n      // Extract names from JSON using keys\n      const namesArray: string[] = [];\n      for (const key in jsonData) {\n        if (jsonData.hasOwnProperty(key) && jsonData[key]?.name) {\n          namesArray.push(jsonData[key].name);\n        }\n      }\n      this.BacklogData = namesArray;\n      setTimeout(() => {\n        console.log(this.BacklogData);\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n  /**\n   * Sends data to the game\n   */\n  sendData(){\n    console.log(\"test\");\n    Object.keys(this.Players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + playerKey;\n      this.Data[strKey] = this.Players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n\n    this.BacklogData.forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n    });\n\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * @ignore\n   * @protected\n   */\n  protected readonly console = console;\n}\n\n    \n\n    \n        \n  \n    \n      \n         Numbers of Players \n        \n        {{ playerNumber }}\n      \n\n      \n        \n      \n    \n\n    \n      \n         Game mode\n        \n          \n            \n            Strict\n            \n            \n          \n          \n            \n            Absolute Majority \n            \n            \n          \n          \n            \n            Average\n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n      Chose a json file\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-component.component.scss\n                \n                form {\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.form_top {\n  display: flex;\n  flex-direction: row;\n  height: 82%;\n  width: 100%;\n}\n\n.top_left {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 80%;\n}\n\n.top_right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  width: 20%;\n}\n\n.left_number-players {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20%;\n}\n\n.left_players {\n  display: flex;\n  width: 100%;\n  height: 80%;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.right_style-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & h3 {\n    font-family: 'Press Start 2P', serif;\n    font-size: 1.4em;\n    margin: 0;\n  }\n}\n\n.bottom_input-json {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & input {\n    color: white;\n    font-family: 'Press Start 2P', serif;\n  }\n}\n\n\n.form_bottom {\n  display: flex;\n  width: 100%;\n  height: 25%;\n  margin-top: 15px;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n\nul {\n  list-style-type: none;\n}\n\nli {\n  position: relative;\n  padding: 10px 10px 10px 40px;\n  height: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n\n  &:active {\n    color: #3351ff !important;\n  }\n}\n\n.style-game_label:before {\n  content: \"\";\n  width: 15px;\n  height: 15px;\n  background: #fff;\n  position: absolute;\n  left: 7px;\n  top: calc(50% - 13px);\n  box-sizing: border-box;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"] {\n  opacity: 0;\n  -webkit-appearance: none;\n  display: inline-block;\n  vertical-align: middle;\n  z-index: 100;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 30px;\n  position: absolute;\n  left: 0;\n  top: calc(50% - 15px);\n  cursor: pointer;\n}\n\n.circle {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  left: -3px;\n  top: 2px;\n  border: 5px solid #fff;\n  opacity: 0;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked ~ .circle {\n  position: absolute;\n  opacity: 1;\n  animation-name: explode;\n  animation-duration: 0.350s;\n}\n\n@keyframes explode {\n  0% {\n    opacity: 0;\n    transform: scale(4);\n  }\n  60% {\n    opacity: 1;\n    transform: scale(0.5);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Numbers of Players                 {{ playerNumber }}                                                 Game mode                                          Strict                                                                    Absolute Majority                                                                     Average                                                                        Chose a json file                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartButtonComponent.html":{"url":"components/StartButtonComponent.html","title":"component - StartButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/start-button/start-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a configurable button with some specific style, the only change possible\nis the link, the color of the background and the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                start-button\n            \n\n\n\n            \n                styleUrls\n                ./start-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./start-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captionBackground\n                            \n                            \n                                captionColor\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                pushableBackground\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captionBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:21\n                            \n                        \n                \n                    \n                        Variable to change the background color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        captionColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:26\n                            \n                        \n                \n                    \n                        Variable to change the text color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        link\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:36\n                            \n                        \n                \n                    \n                        Variable to change the link of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:31\n                            \n                        \n                \n                    \n                        Variable to change the text on a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pushableBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable to change the color under a button when it's called in another component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:41\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n/**\n * Component that create a configurable button with some specific style, the only change possible\n * is the link, the color of the background and the text.\n */\n@Component({\n  selector: 'start-button',\n  templateUrl: './start-button.component.html',\n  styleUrls: ['./start-button.component.scss']\n})\nexport class StartButtonComponent implements OnInit{\n  /**\n   * Variable to change the color under a button when it's called in another component.\n   */\n  @Input() pushableBackground: string = '';\n\n  /**\n   * Variable to change the background color of a button when it's called in another component.\n   */\n  @Input() captionBackground: string = '';\n\n  /**\n   * Variable to change the text color of a button when it's called in another component.\n   */\n  @Input() captionColor: string = '';\n\n  /**\n   * Variable to change the text on a button when it's called in another component.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Variable to change the link of a button when it's called in another component.\n   */\n  @Input() link: string = '';\n\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n\n  }\n}\n\n    \n\n    \n        \n   {{ name }} \n\n\n    \n\n    \n                \n                    ./start-button.component.scss\n                \n                .pushable_button {\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n}\n\n.caption_button {\n  display: block;\n  padding: 20px 50px;\n  border-radius: 12px;\n  border: 3px solid white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.7rem;\n  text-shadow: 1px 1px 2px #000000;\n  transform: translateY(-6px);\n}\n\n.caption_button:hover {\n  filter: brightness(90%);\n  color: #c7c7c7 !important;\n}\n\n\n.pushable_button:active .caption_button {\n  transform: translateY(-2px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ name }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title/title.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the title of the website and all the style that come with it, on the main menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pp-title\n            \n\n\n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that create the title of the website and all the style that come with it, on the main menu.\n */\n@Component({\n  selector: 'pp-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n}\n\n    \n\n    \n        \n  \n    PLANNING\n    PLANNING\n  \n  POKER\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Mr+Dafoe&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@900&display=swap');\n\nh1 {\n  position: relative;\n  font-family: 'Exo', serif;\n  font-size: 11em;\n  margin: 0;\n  transform: skew(-15deg);\n  letter-spacing: 0.03em;\n\n  span:first-child {\n    display: block;\n    text-shadow: 0 0 0.1em #8ba2d0, 0 0 0.2em black, 0 0 5em #165ff3;\n    -webkit-text-stroke: 0.06em rgba(black, 0.5);\n  }\n\n  span:last-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-image: linear-gradient(#032d50 25%, #00a1ef 35%, white 50%, #20125f 50%, #8313e7 55%, #ff61af 75%);\n    -webkit-text-stroke: 0.01em #94a0b9;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\nh2 {\n  font-family: 'Mr Dafoe', serif;\n  font-size: 5.5em;\n  margin-left: 3em;\n  color: white;\n  text-shadow: 0 0 0.05em #fff, 0 0 0.2em #281775, 0 0 0.3em #20125f;\n  transform: rotate(-7deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PLANNING    PLANNING    POKER'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/AverageDecorator.ts\n            \n            class\n            AverageDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/Game.ts\n            \n            interface\n            Game\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/GameConcret.ts\n            \n            class\n            GameConcret\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/MajabsDecorator.ts\n            \n            class\n            MajabsDecorator\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/ModeDecorator.ts\n            \n            class\n            ModeDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/StrictDecorator.ts\n            \n            class\n            StrictDecorator\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/classes/facade/HtmlDisplay.ts\n            \n            class\n            HtmlDisplay\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/classes/singleton/htmlBalise.ts\n            \n            class\n            HtmlBalise\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/game-component/game-component.component.ts\n            \n            component\n            GameComponentComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/components/information-button/information-button.component.ts\n            \n            component\n            InformationButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/components/player-card/player-card.component.ts\n            \n            component\n            PlayerCardComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/settings-component/settings-component.component.ts\n            \n            component\n            SettingsComponentComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/start-button/start-button.component.ts\n            \n            component\n            StartButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/gameOptionService/game-option-service.service.ts\n            \n            injectable\n            GameOptionServiceService\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.7\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^17.0.7\n        \n            @angular/compiler : ^17.0.7\n        \n            @angular/core : ^17.0.7\n        \n            @angular/forms : ^17.0.7\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^17.0.7\n        \n            @angular/platform-browser-dynamic : ^17.0.7\n        \n            @angular/router : ^17.0.7\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeface-press-start-2p : ^1.1.13\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanningPokerPP\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
