var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.022,1,0.59]],["body/components/AppComponent.html",[0,0.041,1,1.08,2,1.352,3,0.488,4,0.411,5,1.206,6,1.351,7,1.076,8,1.206,9,0.411,10,2.944,11,0.656,12,1.479,13,1.698,14,3.149,15,1.206,16,1.919,17,1.551,18,3.699,19,1.698,20,4.959,21,1.516,22,4.535,23,0.656,24,1.203,25,1.551,26,0.656,27,0.045,28,1.351,29,1.076,30,0.958,31,3.699,32,0.749,33,3.609,34,1.902,35,2.41,36,0.945,37,2.738,38,0.824,39,0.749,40,3.699,41,1.918,42,1.918,43,0.488,44,0.27,45,1.514,46,1.206,47,2.179,48,2.944,49,3.609,50,3.609,51,2.944,52,1.902,53,3.609,54,1.514,55,1.514,56,1.352,57,1.514,58,3.609,59,3.609,60,3.609,61,0.958,62,1.203,63,1.352,64,1.206,65,1.739,66,1.206,67,1.206,68,0.656,69,0.569,70,1.658,71,0.749,72,1.076,73,1.516,74,0.656,75,1.206,76,0.749,77,0.958,78,1.206,79,0.656,80,1.206,81,0.749,82,1.076,83,0.749,84,0.749,85,1.206,86,1.206,87,1.206,88,0.034,89,0.034]],["title/modules/AppModule.html",[90,1.717,91,1.717]],["body/modules/AppModule.html",[1,1.177,3,0.434,4,0.366,9,0.366,17,0.957,27,0.045,38,1.061,39,0.666,41,2.235,42,1.705,43,0.568,44,0.24,45,1.346,46,1.073,61,0.852,68,0.964,71,1.101,74,0.964,76,1.101,79,0.964,81,0.666,83,1.177,84,1.101,88,0.032,89,0.032,90,1.938,91,3.559,92,1.705,93,1.938,94,3.827,95,3.827,96,3.431,97,3.258,98,2.618,99,2.618,100,2.618,101,2.618,102,2.618,103,2.818,104,4.326,105,3.431,106,2.618,107,2.228,108,3.209,109,2.92,110,2.92,111,3.431,112,2.92,113,1.938,114,3.209,115,2.618,116,3.209,117,2.228,118,4.206,119,3.209,120,2.228,121,2.618,122,1.938,123,2.618,124,4.206,125,3.209,126,3.431,127,2.618,128,2.618,129,1.938,130,3.827,131,2.618,132,1.938,133,3.209,134,3.209,135,2.228,136,3.209,137,2.618,138,4.206,139,3.209,140,4.206,141,3.209,142,4.691,143,4.206,144,3.209,145,4.206,146,2.228,147,3.209,148,2.618,149,3.431,150,2.618,151,1.938,152,3.209,153,1.938,154,1.201,155,3.209,156,1.346,157,0.755,158,3.209,159,3.209,160,3.209,161,3.209,162,3.209,163,3.209]],["title/modules/AppRoutingModule.html",[90,1.717,103,1.511]],["body/modules/AppRoutingModule.html",[0,0.041,3,0.555,4,0.468,9,0.468,27,0.045,38,1.026,39,0.853,43,0.555,44,0.308,68,0.893,69,0.648,74,0.893,79,0.893,81,1.019,82,1.226,88,0.037,89,0.037,92,2.184,97,2.854,103,2.61,109,2.854,110,3.41,121,3.353,122,2.482,123,3.353,128,3.353,129,2.482,130,4.285,131,3.353,132,2.482,150,3.353,151,2.482,164,4.11,165,4.11,166,4.911,167,3.171,168,2.482,169,1.937,170,5.561,171,4.11,172,4.006,173,4.11,174,4.11,175,4.11,176,4.11]],["title/interfaces/Game.html",[69,0.448,177,1.717]],["body/interfaces/Game.html",[3,0.251,4,0.211,9,0.394,11,0.943,23,0.337,26,0.995,27,0.046,28,2.173,30,1.466,32,1.163,36,0.953,43,0.251,46,1.769,69,0.767,77,1.359,88,0.022,89,0.022,154,2.139,156,2.118,177,1.717,178,1.854,179,1.512,180,1.854,181,1.512,182,1.512,183,0.754,184,2.319,185,3.164,186,2.319,187,3.164,188,3.065,189,3.164,190,3.164,191,2.319,192,2.693,193,1.974,194,3.164,195,2.319,196,3.164,197,3.164,198,3.164,199,3.164,200,3.164,201,2.319,202,3.164,203,2.319,204,2.843,205,2.319,206,2.319,207,1.974,208,2.319,209,3.164,210,2.319,211,2.533,212,1.854,213,1.974,214,3.893,215,2.722,216,1.918,217,1.918,218,1.511,219,1.974,220,1.496,221,1.488,222,1.854,223,2.843,224,2.722,225,2.319,226,3.092,227,2.319,228,2.693,229,2.687,230,1.854,231,2.319,232,1.974,233,2.319,234,1.974,235,1.974,236,2.786,237,1.854,238,0.95,239,3.601,240,3.164,241,2.061,242,2.52,243,1.854,244,2.843,245,2.843,246,3.879,247,2.843,248,1.854,249,2.342,250,2.319,251,1.854,252,2.346,253,2.319,254,1.854,255,1.34,256,2.319,257,1.854,258,2.319,259,2.319,260,1.854,261,2.319,262,3.164,263,1.854,264,2.08,265,2.319,266,1.854,267,2.319,268,1.854,269,1.854,270,1.854,271,1.974,272,2.665,273,1.854,274,2.319,275,2.319,276,1.854,277,2.843,278,2.843,279,2.843,280,3.879,281,2.843,282,1.717,283,1.974,284,2.843,285,2.319,286,2.342,287,2.319,288,1.854,289,1.34,290,1.854,291,2.319,292,2.319,293,2.319,294,1.854,295,2.319,296,2.319,297,2.319,298,2.319,299,2.319,300,2.319,301,1.854,302,2.693,303,3.879,304,1.974,305,2.319,306,1.854,307,3.601,308,2.319,309,1.854,310,2.319,311,1.854,312,2.319,313,1.854,314,2.319,315,1.854,316,1.974,317,1.974,318,2.319,319,1.512]],["title/components/GameComponentComponent.html",[0,0.022,68,0.517]],["body/components/GameComponentComponent.html",[0,0.026,1,0.257,2,0.614,3,0.167,4,0.141,5,0.688,6,0.464,7,0.369,8,0.414,9,0.141,11,0.56,12,0.369,13,1.754,14,0.86,15,0.414,16,1.503,17,0.614,19,0.771,21,0.688,23,0.48,24,0.546,25,0.788,26,0.772,27,0.046,28,1.784,29,1.1,30,1.193,32,1.049,35,1.816,36,0.621,38,0.796,39,0.257,43,0.167,44,0.293,45,0.52,46,1.029,47,0.748,52,1.928,54,1.547,55,1.547,56,1.34,57,1.547,61,0.329,62,0.817,63,0.614,64,0.414,65,1.029,66,0.414,67,0.414,68,0.56,69,0.844,70,0.883,71,0.257,72,0.369,73,0.688,74,0.225,75,0.414,76,0.257,77,1.086,78,0.414,79,0.225,80,0.414,81,0.257,82,0.369,83,0.257,84,0.257,85,0.414,86,0.414,87,0.414,88,0.016,89,0.016,132,3.079,153,1.596,154,1.64,156,1.434,157,0.868,168,0.748,169,0.97,183,0.546,192,2.138,193,1.43,207,2.138,211,1.245,214,2.138,215,1.96,216,0.989,217,0.989,218,1.094,219,1.43,220,1.193,221,1.086,224,0.658,226,1.596,229,2.064,236,2.077,252,1.094,264,0.97,272,1.243,282,1.243,286,1.859,302,2.561,304,2.95,320,4.16,321,0.748,322,2.059,323,1.451,324,3.079,325,1.859,326,1.835,327,1.43,328,3.417,329,2.156,330,2.36,331,2.643,332,2.643,333,3.417,334,3.079,335,3.079,336,3.079,337,3.079,338,2.059,339,3.079,340,3.079,341,3.079,342,1.01,343,1.61,344,4.496,345,1.239,346,1.835,347,2.389,348,1.68,349,1.239,350,2.059,351,2.059,352,1.239,353,1.239,354,2.373,355,2.059,356,1.239,357,1.239,358,2.059,359,1.239,360,3.688,361,2.063,362,2.059,363,2.059,364,1.239,365,2.226,366,2.059,367,1.68,368,1.239,369,1.239,370,1.239,371,1.239,372,2.059,373,2.059,374,1.01,375,1.596,376,3.688,377,1.239,378,1.68,379,1.094,380,2.059,381,2.138,382,1.239,383,1.239,384,2.084,385,2.775,386,1.835,387,2.643,388,1.68,389,2.059,390,1.835,391,1.68,392,3.122,393,2.059,394,1.01,395,1.68,396,1.68,397,1.596,398,1.239,399,2.059,400,2.643,401,1.239,402,2.059,403,1.239,404,1.243,405,1.239,406,1.01,407,1.239,408,0.86,409,0.658,410,0.86,411,1.239,412,1.239,413,1.01,414,1.239,415,1.01,416,1.239,417,0.748,418,0.748,419,1.239,420,1.01,421,1.239,422,2.077,423,1.239,424,3.688,425,2.643,426,1.68,427,2.059,428,1.239,429,1.239,430,1.239,431,1.239,432,1.239,433,1.239,434,1.239,435,1.239,436,1.239,437,1.239,438,1.239,439,4.092,440,2.561,441,4.092,442,1.239,443,3.417,444,2.643,445,1.239,446,1.43,447,1.239,448,1.01,449,1.239,450,1.43,451,1.239,452,1.239,453,1.239,454,1.239,455,1.239,456,1.239,457,2.059,458,2.059,459,3.079,460,2.059,461,2.059,462,1.239,463,1.239,464,1.239,465,1.239,466,1.239,467,1.239,468,1.239,469,1.01,470,1.01,471,1.239,472,1.239,473,1.239,474,1.239,475,1.239,476,1.239,477,1.239,478,1.239,479,1.239,480,1.239,481,2.059,482,2.059,483,1.243,484,2.059,485,2.512,486,1.239,487,1.239,488,2.059,489,2.95,490,3.042,491,2.775,492,1.859,493,2.373,494,2.36,495,1.841,496,1.243,497,1.239,498,2.775,499,2.36,500,2.957,501,1.239,502,2.059,503,3.079,504,1.239,505,4.092,506,1.239,507,1.239,508,1.239,509,2.156,510,1.43,511,1.859,512,2.059,513,2.059,514,2.059,515,1.838,516,1.816,517,2.064,518,1.239,519,2.373,520,1.737,521,2.001,522,1.239,523,1.96,524,2.226,525,2.118,526,1.636,527,2.059,528,2.138,529,1.239,530,2.226,531,0.86,532,2.512,533,2.059,534,1.43,535,1.43,536,1.68,537,1.243,538,1.68,539,2.643,540,0.86,541,1.68,542,1.886,543,1.835,544,1.239,545,1.239,546,2.059,547,1.404,548,2.561,549,1.43,550,1.816,551,1.835,552,3.079,553,1.68,554,2.059,555,1.01,556,1.239,557,2.059,558,2.059,559,2.156,560,1.01,561,1.01,562,1.68,563,1.239,564,2.059,565,1.239,566,1.239,567,1.239,568,0.97,569,1.239,570,1.404,571,1.094,572,1.239,573,1.239,574,3.079,575,1.835,576,1.239,577,1.239,578,1.239,579,1.239,580,1.239,581,0.86,582,1.01,583,1.239,584,2.643,585,1.239,586,1.239,587,1.01,588,1.239,589,1.68,590,1.01,591,1.239,592,2.059,593,0.748,594,0.748,595,1.43,596,1.01,597,1.68,598,2.059,599,1.243,600,0.658,601,1.239,602,1.239,603,1.239,604,1.239,605,2.643,606,1.239,607,1.239,608,1.239,609,1.01,610,1.239,611,1.239,612,1.404,613,1.239,614,1.239,615,1.239,616,1.239,617,1.239,618,1.239,619,1.01,620,1.68,621,1.239,622,1.239,623,1.239,624,2.059,625,1.239,626,0.658,627,1.01,628,1.239,629,1.01,630,1.239,631,1.01,632,1.01,633,1.239,634,1.239,635,2.138,636,1.239,637,0.86,638,1.239]],["title/classes/GameConcret.html",[44,0.213,404,1.717]],["body/classes/GameConcret.html",[3,0.223,4,0.188,9,0.366,11,0.906,23,0.3,24,0.69,26,1.008,27,0.046,28,2.169,29,1.256,30,1.497,32,1.162,36,0.919,38,0.3,43,0.223,44,0.241,45,1.53,46,1.729,69,0.816,72,0.776,77,1.211,88,0.02,89,0.02,154,2.096,156,2.301,157,0.389,169,0.779,183,0.69,184,2.122,185,1.349,186,2.122,187,2.975,188,1.148,189,2.975,190,2.975,191,2.122,192,2.533,193,1.806,194,2.975,195,2.122,196,2.975,197,2.975,198,2.975,199,2.975,200,1.349,201,2.122,202,2.975,203,2.122,205,2.122,206,2.122,207,1.806,208,2.122,209,2.975,210,2.122,211,2.481,213,1.806,214,3.809,215,2.719,216,1.835,217,1.835,218,1.382,219,1.806,220,1.455,221,1.427,224,2.775,226,3.089,227,2.122,228,2.533,229,2.663,231,2.122,232,1.806,233,2.122,234,1.806,235,2.754,236,2.648,238,0.87,239,2.975,240,2.975,241,1.382,242,2.604,249,1.571,250,2.122,252,2.554,253,2.122,255,1.226,256,2.122,258,2.122,259,2.122,261,2.122,262,2.975,264,2.348,265,2.122,267,2.122,271,1.806,272,2.543,274,2.122,275,2.122,286,1.571,287,2.122,289,1.226,291,2.122,292,2.122,293,2.122,295,2.122,296,2.122,297,2.122,298,2.975,299,2.122,300,1.349,302,1.806,304,1.148,305,2.122,307,3.436,308,2.122,310,2.122,312,2.122,314,2.624,316,1.806,317,1.806,318,2.122,319,3.235,323,1.515,379,1.382,384,0.974,396,2.122,397,1.942,404,1.571,446,1.806,639,0.998,640,1.349,641,3.216,642,3.216,643,3.216,644,1.653,645,2.601,646,2.601,647,2.601,648,1.653,649,2.601,650,1.653,651,1.653,652,1.653,653,1.653,654,2.601,655,1.653,656,1.653,657,1.653,658,1.653,659,1.653,660,1.653,661,1.653,662,1.653,663,1.653,664,1.653,665,1.653,666,1.653,667,1.653,668,1.653,669,1.653,670,1.653,671,1.653,672,1.653,673,1.653,674,1.653,675,1.653,676,1.653,677,1.653,678,1.653,679,1.653,680,2.122,681,1.349,682,1.806,683,2.601,684,2.122,685,3.216,686,1.653,687,1.653,688,2.601,689,1.653,690,2.601,691,2.122]],["title/injectables/GameOptionServiceService.html",[343,1.34,692,1.717]],["body/injectables/GameOptionServiceService.html",[0,0.039,3,0.48,4,0.405,9,0.405,11,0.816,12,1.339,18,2.898,23,0.646,24,1.192,26,0.646,27,0.045,29,1.339,30,1.192,32,1.022,34,2.17,36,0.646,38,0.816,39,0.737,43,0.48,44,0.266,46,1.188,69,0.708,88,0.034,89,0.034,154,1.681,156,1.491,157,1.056,183,1.192,216,1.33,217,1.33,220,0.943,221,1.306,234,3.118,241,2.386,255,2.116,343,2.116,347,3.129,379,2.386,409,2.749,417,3.123,483,2.711,692,2.711,693,3.553,694,4.22,695,2.898,696,3.663,697,4.49,698,4.445,699,5.173,700,4.445,701,3.663,702,2.711,703,3.663,704,4.49,705,4.49,706,4.49,707,3.553,708,4.49,709,4.49,710,3.663,711,4.49,712,3.553,713,4.22,714,4.49,715,3.553,716,3.663,717,3.553,718,2.467,719,3.553,720,3.553]],["title/classes/HtmlBalise.html",[44,0.213,375,1.717]],["body/classes/HtmlBalise.html",[3,0.453,4,0.382,9,0.382,11,0.61,23,0.61,24,1.148,25,1,26,0.61,27,0.046,29,1,30,0.89,32,0.994,34,1.816,35,1.782,43,0.453,44,0.402,45,2.365,62,0.89,88,0.033,89,0.033,153,2.025,154,1.896,156,1.816,157,1.127,183,1.148,220,1.148,221,1.148,238,1.447,255,2.039,282,2.025,375,3.341,378,3.909,379,2.3,417,3.165,440,3.64,469,2.736,470,3.531,560,2.736,561,2.736,582,2.736,639,2.025,698,3.531,721,2.736,722,3.354,723,3.354,724,5.591,725,5.591,726,5.063,727,5.063,728,3.354,729,3.354,730,3.531,731,3.354,732,3.354,733,4.514,734,4.378,735,3.354,736,3.531,737,3.354,738,3.354,739,3.354,740,3.354,741,3.354,742,3.354,743,3.354,744,3.354,745,3.354,746,3.354,747,3.354,748,3.354,749,3.354,750,3.354,751,3.354,752,3.354,753,3.354,754,3.354,755,3.354,756,5.063]],["title/classes/HtmlDisplay.html",[44,0.213,330,1.717]],["body/classes/HtmlDisplay.html",[0,0.025,3,0.302,4,0.254,7,1.641,9,0.254,11,0.889,14,2.956,23,0.406,24,0.867,26,1.006,27,0.046,28,2.17,29,0.975,30,0.867,32,1.062,34,1.786,35,1.737,36,0.911,38,0.594,43,0.302,44,0.383,46,1.762,62,1.51,63,1.68,88,0.025,89,0.025,154,1.996,156,0.937,157,0.769,169,1.822,181,2.667,182,2.667,183,0.867,211,2.005,213,2.956,216,1.877,217,1.772,218,2.832,220,1.256,221,1.256,225,3.472,236,2.832,242,1.737,264,1.54,272,2.57,282,2.57,329,2.667,330,2.57,379,1.737,381,2.27,397,2.57,420,2.667,440,1.55,485,2.667,495,2.536,517,2.664,637,2.27,639,1.348,701,2.667,718,1.55,730,2.667,733,4.348,757,1.821,758,2.667,759,3.269,760,3.269,761,3.269,762,3.269,763,3.867,764,3.269,765,3.269,766,3.269,767,3.269,768,3.269,769,3.269,770,2.233,771,5.428,772,2.667,773,3.269,774,4.257,775,2.233,776,4.257,777,3.269,778,2.667,779,3.269,780,4.257,781,4.257,782,2.233,783,3.269,784,5.33,785,3.269,786,4.257,787,2.27,788,3.269,789,3.269,790,3.269,791,3.269,792,3.269,793,4.257,794,3.269,795,3.269,796,3.269,797,3.269,798,2.233,799,2.667,800,3.269,801,2.233,802,3.269,803,2.667,804,3.269,805,3.269,806,2.233,807,3.269,808,3.269,809,2.233,810,3.269,811,2.27,812,2.667,813,2.233,814,2.233,815,1.821,816,2.233,817,2.233,818,2.233,819,2.233,820,2.233,821,2.233,822,5.014,823,2.233,824,2.233,825,2.233,826,2.233,827,2.233,828,3.269]],["title/components/InformationButtonComponent.html",[0,0.022,71,0.59]],["body/components/InformationButtonComponent.html",[0,0.04,1,0.713,2,1.311,3,0.465,4,0.392,5,1.149,6,1.287,7,1.025,8,1.149,9,0.392,11,0.625,12,1.025,13,1.287,15,1.149,16,1.905,17,1.311,19,1.646,21,1.47,23,0.625,25,1.025,26,0.625,27,0.045,32,0.912,34,2.144,36,0.799,37,2.655,38,0.625,39,0.713,43,0.465,44,0.257,56,1.025,61,0.912,62,1.167,63,1.311,64,1.149,65,1.708,66,1.149,67,1.149,68,0.625,69,0.542,70,1.621,71,1.06,72,1.688,73,1.47,74,0.625,75,1.149,76,0.713,77,0.912,78,1.149,79,0.625,80,1.149,81,0.713,82,1.025,83,0.713,84,0.713,85,1.149,86,1.149,87,1.149,88,0.033,89,0.033,120,3.367,157,0.809,183,1.167,220,0.912,221,0.912,238,1.47,365,3.085,422,1.827,515,2.034,525,1.62,534,2.387,538,2.804,542,1.442,568,1.62,570,1.827,571,1.827,600,1.827,702,3.085,829,3.955,830,2.387,831,4.397,832,4.397,833,4.397,834,3.955,835,3.587,836,4.169,837,3.587,838,4.309,839,3.955,840,2.804,841,4.169,842,3.587,843,3.053,844,2.804,845,3.587,846,2.804,847,3.587,848,3.438,849,3.438,850,3.438,851,2.804]],["title/components/MainMenuComponent.html",[0,0.022,74,0.517]],["body/components/MainMenuComponent.html",[0,0.033,1,0.533,2,0.765,3,0.22,4,0.185,5,0.543,6,0.608,7,0.484,8,0.543,9,0.556,11,0.578,12,1.479,13,1.473,15,0.543,16,1.631,17,1.077,19,0.961,21,0.858,23,0.715,24,0.959,25,0.484,26,0.915,27,0.046,28,1.826,29,1.455,30,1.294,32,1.058,34,1.077,35,1.364,36,0.715,37,2.181,38,0.825,39,0.337,40,3.209,41,0.863,42,0.863,43,0.22,44,0.122,46,0.858,47,0.981,48,1.326,51,1.326,52,1.077,54,0.682,55,0.682,56,1.393,57,0.682,61,0.431,62,0.681,63,0.765,64,1.063,65,1.208,66,0.543,67,0.543,68,0.295,69,0.85,70,1.063,71,0.337,72,0.948,73,0.858,74,0.657,75,0.543,76,0.337,77,0.681,78,0.543,79,0.295,80,0.543,81,0.337,82,0.484,83,0.337,84,0.337,85,0.543,86,0.543,87,0.543,88,0.019,89,0.019,110,1.128,111,1.326,112,1.128,113,0.981,115,1.326,122,3.111,126,1.326,127,1.326,146,1.128,153,0.981,154,1.565,157,0.925,169,2.473,183,0.681,211,1.702,215,1.92,216,1.191,217,1.191,220,1.044,221,1.109,224,2.09,226,1.549,228,2.208,229,1.702,235,2.208,238,1.208,241,2.708,242,1.364,252,1.69,255,1.209,264,1.702,283,1.128,289,1.702,316,1.782,317,1.782,323,1.209,325,1.92,342,1.326,343,1.702,346,1.782,347,2.592,348,2.093,354,2.731,361,2.181,365,2.74,384,1.749,385,2.181,390,1.128,391,1.326,397,1.549,408,1.128,409,1.69,410,1.128,417,0.981,418,2.181,422,1.69,450,1.128,483,2.524,489,2.208,491,2.524,492,0.981,494,1.92,495,1.853,496,1.549,498,1.92,499,1.92,500,1.549,509,2.947,510,2.509,515,1.516,519,1.128,520,0.766,521,0.766,523,1.69,524,0.981,525,1.498,526,0.863,531,1.128,537,0.981,540,1.128,542,1.334,547,1.364,550,1.364,555,1.326,568,1.498,570,1.364,571,1.364,575,1.128,581,1.782,593,1.92,594,0.981,595,1.128,599,1.549,600,0.863,612,1.364,626,1.92,680,2.093,682,1.128,684,2.594,696,2.093,702,1.549,703,2.093,713,2.093,716,2.093,734,2.093,736,2.093,772,2.093,778,2.947,787,2.509,799,2.093,811,1.128,843,1.782,851,1.326,852,4.204,853,1.326,854,3.613,855,3.18,856,2.566,857,3.933,858,3.18,859,2.566,860,2.093,861,3.613,862,2.947,863,1.625,864,1.625,865,1.625,866,4.181,867,2.566,868,1.625,869,2.093,870,2.093,871,2.947,872,2.093,873,2.093,874,2.947,875,2.093,876,2.093,877,2.509,878,2.093,879,2.093,880,2.093,881,2.093,882,2.093,883,2.093,884,1.625,885,2.594,886,2.566,887,1.625,888,2.566,889,2.566,890,4.377,891,2.566,892,1.625,893,2.566,894,2.566,895,1.625,896,2.566,897,1.625,898,1.625,899,1.625,900,1.625,901,1.625,902,2.093,903,1.625,904,1.625,905,2.566,906,1.625,907,1.625,908,1.625,909,1.326,910,1.625,911,2.566,912,2.566,913,2.566,914,3.18,915,1.625,916,1.625,917,1.326,918,1.326,919,1.326,920,1.326,921,1.326,922,1.326,923,1.326,924,1.326,925,1.326,926,1.326,927,1.326,928,1.326,929,2.093,930,1.625,931,1.625,932,2.566,933,2.566,934,3.209,935,2.566,936,2.566,937,1.625,938,1.625,939,1.625,940,1.625,941,1.625,942,1.625,943,1.625,944,1.625,945,1.625,946,1.625,947,3.18,948,2.093,949,1.625,950,1.326,951,1.326,952,1.326,953,1.326,954,2.093,955,1.326,956,1.326,957,1.326,958,1.326,959,1.625,960,1.625,961,1.625,962,1.326,963,1.625,964,1.625,965,1.625,966,1.625,967,1.326,968,1.625,969,1.92,970,2.566,971,1.625,972,2.566,973,1.625,974,1.625,975,1.625,976,2.566,977,2.566,978,2.566,979,3.169,980,2.566,981,2.566,982,2.566,983,2.566,984,2.566,985,2.566,986,2.566,987,1.625,988,1.625,989,1.128,990,1.782,991,1.625,992,1.326,993,1.326,994,2.093,995,1.326,996,1.326,997,1.128,998,1.326,999,1.326,1000,1.326,1001,1.326,1002,1.326,1003,1.128,1004,1.782,1005,1.326,1006,1.625,1007,1.625,1008,1.625]],["title/components/PlayerCardComponent.html",[0,0.022,76,0.59]],["body/components/PlayerCardComponent.html",[0,0.039,1,0.645,2,1.228,3,0.42,4,0.354,5,1.039,6,1.163,7,0.927,8,1.039,9,0.354,11,0.565,12,0.927,13,1.729,15,1.039,16,1.875,17,1.228,19,1.541,21,1.376,23,0.565,25,0.927,26,0.565,27,0.045,29,0.927,30,1.225,32,0.645,36,0.894,38,0.565,39,0.645,43,0.42,44,0.233,52,2.062,54,1.727,55,1.727,56,1.377,57,1.727,61,0.825,62,1.093,63,1.228,64,1.039,65,1.643,66,1.039,67,1.039,68,0.565,69,0.49,70,1.544,71,0.645,72,0.927,73,1.376,74,0.565,75,1.039,76,1.02,77,1.514,78,1.039,79,0.565,80,1.039,81,0.645,82,0.927,83,0.645,84,0.645,85,1.039,86,1.039,87,1.039,88,0.031,89,0.031,135,2.859,229,1.94,238,1.376,249,2.486,286,3.174,384,2.183,490,2.158,491,2.486,492,1.876,493,2.158,494,1.876,495,1.464,496,1.876,498,1.876,499,1.876,500,1.876,515,1.727,516,2.188,517,1.464,520,1.94,521,2.176,523,2.188,524,1.876,525,2.41,526,2.188,530,2.486,532,4.172,537,2.788,542,1.937,543,2.158,547,2.454,548,2.158,550,2.612,551,3.207,590,3.359,596,3.359,597,2.535,600,1.651,612,2.454,619,2.535,626,1.651,979,2.486,990,2.158,992,2.535,997,2.158,1009,3.359,1010,2.535,1011,4.118,1012,4.618,1013,4.118,1014,3.359,1015,3.108,1016,3.108,1017,3.108,1018,3.108,1019,3.108,1020,3.108,1021,3.108,1022,3.108,1023,2.535,1024,3.108,1025,3.108,1026,4.118,1027,3.108,1028,3.108,1029,2.535,1030,3.108,1031,3.108,1032,3.108,1033,3.108,1034,3.108,1035,3.108,1036,3.108,1037,3.108]],["title/components/SettingsComponentComponent.html",[0,0.022,79,0.517]],["body/components/SettingsComponentComponent.html",[0,0.033,1,0.343,2,0.776,3,0.223,4,0.188,5,0.553,6,0.619,7,0.493,8,0.553,9,0.535,11,0.721,12,0.493,13,1.892,15,0.553,16,1.638,17,0.776,19,0.974,21,0.87,23,0.721,24,0.69,25,0.493,26,0.93,27,0.046,28,1.758,29,1.433,30,1.397,32,1.017,36,0.854,38,0.473,39,0.343,43,0.223,44,0.124,45,1.349,46,1.075,47,0.998,52,1.664,54,1.349,55,1.349,56,1.087,57,1.349,61,0.439,62,0.69,63,0.776,64,0.553,65,1.219,66,0.553,67,0.553,68,0.3,69,0.823,70,1.075,71,0.343,72,0.493,73,0.87,74,0.3,75,0.553,76,0.343,77,0.853,78,0.553,79,0.663,80,1.526,81,0.343,82,0.493,83,0.343,84,0.343,85,0.553,86,0.553,87,0.553,88,0.02,89,0.02,129,3.008,157,0.389,169,2.309,183,0.69,211,1.226,215,1.938,216,1.365,217,1.365,220,1.052,221,1.052,224,2.648,229,2.381,232,1.806,236,0.878,238,0.87,241,2.604,242,1.382,249,1.571,252,1.709,255,1.226,264,1.869,283,1.148,289,1.226,321,0.998,326,2.233,327,1.806,343,1.226,346,1.148,347,2.342,354,3.261,361,1.571,374,1.349,384,2.013,385,2.543,386,2.233,390,1.806,392,3.403,394,1.349,408,1.148,409,1.709,410,1.148,422,1.382,426,2.975,448,3.235,450,1.148,489,3.403,490,3.338,491,3.246,492,2.835,493,2.754,494,2.66,495,2.213,496,0.998,498,2.756,499,2.543,500,3.051,510,1.806,511,1.571,515,1.767,516,1.382,517,0.779,519,2.533,520,1.515,521,1.226,523,1.709,524,2.395,525,1.984,526,1.709,528,2.233,535,1.148,540,1.148,541,2.122,542,1.349,547,1.382,548,2.533,549,1.148,550,1.709,551,1.148,553,2.122,559,2.122,568,1.718,570,1.709,571,1.709,575,1.806,593,2.66,594,1.942,595,1.806,599,2.395,600,0.878,612,1.382,626,1.382,635,1.148,637,1.148,681,1.349,682,1.148,710,2.122,758,2.122,811,1.148,860,2.122,862,2.975,883,2.122,885,3.595,902,2.122,917,1.349,918,1.349,919,1.349,920,1.349,921,1.349,922,1.349,923,1.349,924,2.122,925,1.349,926,1.349,927,1.349,928,1.349,929,2.122,934,1.349,948,1.349,950,1.349,951,1.349,952,1.349,953,1.349,954,2.122,955,1.349,956,1.349,957,1.349,958,1.349,962,1.349,967,1.349,969,1.942,979,1.571,989,1.148,990,2.754,993,2.122,994,2.624,995,1.349,996,1.349,997,1.806,998,1.349,999,1.349,1000,1.349,1001,1.349,1002,1.349,1003,2.925,1004,2.533,1005,3.595,1023,1.349,1038,4.065,1039,2.601,1040,3.216,1041,2.601,1042,2.601,1043,2.601,1044,1.653,1045,3.216,1046,1.653,1047,1.653,1048,2.601,1049,1.653,1050,2.122,1051,2.601,1052,1.653,1053,2.601,1054,3.647,1055,1.653,1056,2.601,1057,1.653,1058,2.601,1059,1.653,1060,1.653,1061,1.653,1062,2.601,1063,1.653,1064,2.601,1065,2.601,1066,1.653,1067,1.653,1068,1.653,1069,2.601,1070,1.653,1071,1.653,1072,1.653,1073,1.653,1074,1.653,1075,1.653,1076,1.653,1077,1.349,1078,2.601,1079,1.653,1080,1.653,1081,1.653,1082,1.653,1083,1.653,1084,1.653,1085,2.601,1086,1.653,1087,2.601,1088,2.601,1089,2.601,1090,2.601,1091,2.601,1092,1.653,1093,1.653,1094,1.653,1095,1.653,1096,2.601,1097,1.653,1098,1.653,1099,1.653,1100,1.653,1101,1.653,1102,1.653,1103,1.653,1104,1.653,1105,1.653,1106,1.653,1107,1.653,1108,1.653,1109,1.349,1110,1.653,1111,2.601,1112,1.653,1113,1.653,1114,1.653,1115,1.653,1116,1.653,1117,1.653,1118,2.601,1119,1.653,1120,2.601,1121,2.601,1122,1.653,1123,1.653,1124,1.653,1125,1.653,1126,1.653,1127,1.653]],["title/components/ShopComponentComponent.html",[0,0.022,81,0.59]],["body/components/ShopComponentComponent.html",[0,0.04,1,0.733,2,1.333,3,0.477,4,0.402,5,1.18,7,1.053,8,1.18,9,0.402,11,0.642,12,1.053,15,1.18,16,1.912,17,1.333,21,1.495,23,0.642,25,1.053,26,0.642,27,0.045,32,0.928,36,0.892,38,0.892,39,0.733,41,1.876,42,1.876,43,0.477,44,0.264,45,1.481,56,1.053,61,0.937,62,1.187,63,1.464,64,1.18,65,1.725,66,1.18,67,1.18,68,0.642,69,0.557,70,1.641,71,0.733,72,1.053,73,1.495,74,0.642,75,1.18,76,0.733,77,0.937,78,1.18,79,0.642,80,1.18,81,1.071,82,1.647,83,0.733,84,0.733,85,1.18,86,1.18,87,1.18,88,0.034,89,0.034,109,3.105,146,3.409,151,2.964,168,2.131,172,3.648,183,1.187,216,1.322,217,1.322,220,1.187,221,1.303,321,2.131,323,2.107,325,2.964,326,3.105,327,3.105,381,2.451,384,1.674,418,2.131,446,3.105,979,2.7,1128,4.004,1129,4.472,1130,4.909,1131,4.472,1132,4.909,1133,4.472,1134,3.53,1135,3.53,1136,3.53,1137,3.53,1138,4.472,1139,4.472,1140,3.53,1141,3.53,1142,3.53,1143,3.53,1144,3.53,1145,3.53,1146,3.53,1147,4.472]],["title/components/StartButtonComponent.html",[0,0.022,83,0.59]],["body/components/StartButtonComponent.html",[0,0.042,1,0.512,2,1.047,3,0.333,4,0.281,5,0.825,6,0.924,7,0.736,8,0.825,9,0.281,11,0.448,12,0.736,13,0.924,15,0.825,16,1.798,17,1.047,19,1.315,21,1.174,23,0.448,24,0.932,25,0.736,26,0.89,27,0.046,28,1.99,29,1.503,30,1.25,32,1.069,34,2.315,36,0.916,38,0.448,39,0.512,43,0.333,44,0.185,52,1.474,54,1.035,55,1.035,56,1.563,57,1.035,61,0.655,62,0.932,63,1.047,64,1.368,65,1.49,66,0.825,67,0.825,68,0.448,69,0.389,70,1.368,71,0.512,72,0.736,73,1.174,74,0.448,75,0.825,76,0.512,77,0.655,78,0.825,79,0.448,80,0.825,81,0.512,82,0.736,83,0.925,84,0.512,85,0.825,86,0.825,87,0.825,88,0.027,89,0.027,117,3.64,157,0.58,183,0.932,220,0.932,221,1.086,238,1.174,289,2.6,323,1.655,325,2.47,347,1.867,365,3.332,384,0.924,418,2.692,422,1.311,495,1.655,511,2.121,515,2.199,516,1.311,517,2.374,520,1.162,521,1.162,523,1.867,525,2.1,526,1.867,530,1.489,531,1.713,537,2.121,542,1.87,547,1.311,549,2.439,562,4.337,568,1.655,570,1.311,571,1.311,581,2.439,587,2.012,589,2.012,609,2.012,612,2.603,631,2.012,632,2.012,635,1.713,700,4.337,702,2.692,830,1.713,834,3.338,835,2.866,836,3.637,837,2.866,838,3.844,839,3.338,840,2.012,841,3.637,842,2.866,843,2.439,844,2.012,845,2.866,846,2.012,869,2.866,870,2.866,871,3.637,872,2.866,873,2.866,874,3.637,875,2.866,876,2.866,877,2.439,878,2.866,879,2.866,880,2.866,881,2.866,882,2.866,969,1.489,1014,2.866,1109,2.012,1148,4.276,1149,3.513,1150,3.513,1151,3.513,1152,5.039,1153,4.091,1154,4.091,1155,4.091,1156,5.317,1157,2.467,1158,2.467,1159,2.467,1160,3.513,1161,2.467,1162,2.467,1163,2.467,1164,2.467,1165,3.513,1166,2.467,1167,2.467,1168,3.513,1169,2.467,1170,3.513,1171,2.467,1172,2.467,1173,2.467,1174,2.467]],["title/components/TitleComponent.html",[0,0.022,84,0.59]],["body/components/TitleComponent.html",[0,0.04,1,0.68,2,1.271,3,0.443,4,0.373,5,1.096,6,1.227,7,0.977,8,1.096,9,0.373,11,0.596,12,1.413,13,1.227,15,1.096,16,1.891,17,1.271,19,1.596,21,1.425,25,1.552,27,0.045,36,0.775,37,2.575,38,0.861,39,0.68,43,0.443,44,0.245,52,2.106,54,1.789,56,0.977,61,0.87,62,1.132,63,1.271,64,1.096,65,1.678,66,1.096,67,1.096,68,0.596,69,0.517,70,1.584,71,0.68,72,0.977,73,1.425,74,0.596,75,1.096,76,0.68,77,0.87,78,1.096,79,0.596,80,1.096,81,0.68,82,0.977,83,0.68,84,1.042,85,1.584,86,1.096,87,1.096,88,0.032,89,0.032,238,1.425,285,3.479,384,2.16,483,2.575,511,2.575,515,1.789,516,2.266,517,2.513,520,2.009,521,2.009,528,2.961,530,2.575,534,2.276,535,3.486,536,3.479,542,1.789,543,2.276,550,1.742,568,2.009,593,2.575,594,1.979,599,1.979,620,2.674,626,2.266,627,3.479,629,2.674,969,1.979,989,2.276,1003,2.276,1004,2.961,1029,2.674,1175,2.674,1176,4.264,1177,4.74,1178,4.264,1179,5.019,1180,3.278,1181,3.278,1182,3.278,1183,3.278,1184,3.278,1185,3.278,1186,3.278,1187,3.278,1188,3.278,1189,3.278,1190,4.264,1191,3.278,1192,3.278,1193,4.264,1194,3.278,1195,3.278,1196,3.278,1197,3.278,1198,3.278,1199,3.278,1200,3.278,1201,3.278,1202,3.278,1203,3.278,1204,3.278,1205,3.278,1206,3.278,1207,3.278,1208,3.278,1209,3.278,1210,3.278,1211,3.278,1212,3.278,1213,3.278,1214,3.278,1215,3.278,1216,3.278,1217,3.278,1218,3.278,1219,3.278,1220,3.278]],["title/coverage.html",[1221,3.164]],["body/coverage.html",[0,0.043,1,0.787,9,0.432,10,3.094,26,0.689,27,0.045,44,0.42,68,0.689,69,0.598,71,0.787,74,0.689,76,0.787,79,0.689,81,0.787,83,0.787,84,0.787,88,0.036,89,0.036,117,2.634,120,2.634,122,2.29,129,2.29,132,2.29,135,2.634,151,2.29,157,0.892,177,2.29,179,3.094,320,3.094,321,3.062,330,2.29,343,1.787,367,3.094,375,2.29,392,4.089,404,2.29,406,3.094,409,2.016,413,3.094,415,3.094,640,3.094,692,2.29,694,3.094,695,3.094,721,3.094,757,3.094,829,3.094,830,3.248,852,3.094,853,3.094,1009,3.094,1010,3.094,1038,3.094,1128,3.094,1148,3.094,1175,3.094,1221,3.094,1222,3.793,1223,3.793,1224,4.677,1225,3.793,1226,4.677,1227,3.793,1228,3.793,1229,3.793,1230,4.677,1231,3.793,1232,3.793,1233,3.793,1234,3.793,1235,4.677,1236,3.793,1237,3.793,1238,3.793,1239,3.793,1240,3.793,1241,3.793,1242,3.793,1243,3.793,1244,3.793,1245,3.793]],["title/dependencies.html",[93,2.065,1246,1.65]],["body/dependencies.html",[27,0.045,39,0.874,41,2.648,42,2.238,55,1.767,56,1.256,57,1.767,88,0.038,89,0.038,93,2.542,112,3.46,113,3.008,137,3.435,148,3.435,149,3.435,168,2.542,718,2.924,909,3.435,1247,4.211,1248,5.81,1249,4.211,1250,4.982,1251,4.211,1252,4.211,1253,4.211,1254,4.211,1255,4.211,1256,4.211,1257,4.211,1258,4.211,1259,4.211,1260,4.211,1261,4.211,1262,4.211,1263,4.211]],["title/index.html",[23,0.432,1264,2.376,1265,2.376]],["body/index.html",[0,0.039,4,0.451,27,0.036,31,3.232,36,0.72,88,0.036,89,0.036,107,2.751,157,0.932,188,3.886,218,2.106,271,2.751,289,1.867,323,1.867,361,2.392,691,3.232,787,3.59,803,3.232,812,3.232,815,4.218,847,4.218,877,2.751,1050,3.232,1246,2.751,1266,4.804,1267,5.17,1268,3.232,1269,3.962,1270,3.962,1271,4.804,1272,5.506,1273,5.663,1274,3.962,1275,3.962,1276,3.962,1277,3.962,1278,3.962,1279,3.962,1280,3.962,1281,3.962,1282,3.962,1283,3.962,1284,5.17,1285,3.962,1286,5.375,1287,3.962,1288,3.962,1289,3.962,1290,3.962,1291,4.804,1292,4.804,1293,5.375,1294,4.804,1295,4.804,1296,3.962,1297,3.962,1298,3.962,1299,3.962,1300,4.804,1301,3.962,1302,3.962,1303,3.962,1304,3.962,1305,3.962,1306,2.751]],["title/modules.html",[92,2.061]],["body/modules.html",[27,0.04,88,0.04,89,0.04,91,2.758,92,2.427,103,2.427,113,2.758,395,3.726,1307,4.567,1308,4.567,1309,5.224,1310,4.567]],["title/overview.html",[1306,2.694]],["body/overview.html",[1,1.175,2,1.18,27,0.045,61,1.05,68,0.939,71,1.072,74,0.939,76,1.072,79,0.939,83,1.175,84,1.072,88,0.036,89,0.036,90,2.389,91,3.601,92,2.103,93,2.389,94,3.228,95,3.228,96,3.228,97,2.748,98,3.228,99,3.228,100,3.228,101,3.228,102,3.228,103,2.746,104,4.215,105,3.916,106,3.228,107,2.748,167,2.389,177,2.389,385,2.898,386,2.748,388,3.228,639,2.389,692,2.389,1077,3.228,1306,2.748,1311,3.957]],["title/properties.html",[24,0.907,1246,1.65]],["body/properties.html",[24,1.224,27,0.042,88,0.04,89,0.04,1268,3.763,1312,4.613]],["title/routes.html",[167,2.342]],["body/routes.html",[27,0.04,88,0.04,89,0.04,167,2.799]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":384,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["0.0.0",{"_index":1312,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1208,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.03em",{"_index":1188,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.05em",{"_index":1216,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.06em",{"_index":1197,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.14.2",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":1191,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.1px",{"_index":607,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.25em",{"_index":633,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.2em",{"_index":1193,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.2px",{"_index":608,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.35",{"_index":1028,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.350s",{"_index":1122,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.3em",{"_index":1218,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.3rem",{"_index":590,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.3s",{"_index":597,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5",{"_index":1199,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.5em",{"_index":619,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5px",{"_index":998,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8em",{"_index":996,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8rem",{"_index":1018,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.8s",{"_index":1020,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["000000",{"_index":631,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["001546",{"_index":1037,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["00a1ef",{"_index":1202,"title":{},"body":{"components/TitleComponent.html":{}}}],["0fa",{"_index":532,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0ff",{"_index":625,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0px",{"_index":1026,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1",{"_index":385,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["1.1.13",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1036,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1.2px",{"_index":546,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.4em",{"_index":1103,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.5em",{"_index":522,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.6em",{"_index":618,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.7rem",{"_index":1169,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["1.8em",{"_index":557,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1/1",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":518,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10",{"_index":450,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["100",{"_index":392,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":572,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["102px",{"_index":1034,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["10abff",{"_index":636,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10px",{"_index":524,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11",{"_index":567,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1125a4",{"_index":1000,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11em",{"_index":1183,"title":{},"body":{"components/TitleComponent.html":{}}}],["12/12",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":533,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["12px",{"_index":1165,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["13px",{"_index":1112,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15",{"_index":1062,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15.0.0",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["15.0.1",{"_index":1269,"title":{},"body":{"index.html":{}}}],["15/15",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":583,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["151px",{"_index":1035,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["15deg",{"_index":1185,"title":{},"body":{"components/TitleComponent.html":{}}}],["15px",{"_index":990,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["16.2.12",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":1024,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["165ff3",{"_index":1196,"title":{},"body":{"components/TitleComponent.html":{}}}],["17.0.7",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["170",{"_index":606,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1b35d3",{"_index":995,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["1beabd",{"_index":624,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1em",{"_index":539,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1fr",{"_index":508,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1px",{"_index":537,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["2",{"_index":386,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":527,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2/2",{"_index":1224,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":390,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["20/20",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":630,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["20125f",{"_index":627,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["20px",{"_index":531,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["210px",{"_index":584,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["21px",{"_index":1030,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["25",{"_index":989,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["255",{"_index":605,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["25px",{"_index":553,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["27/27",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["281775",{"_index":1217,"title":{},"body":{"components/TitleComponent.html":{}}}],["29/29",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":545,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2p",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["2px",{"_index":549,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["3",{"_index":387,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3.2em",{"_index":611,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3/3",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":529,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["300px",{"_index":565,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30px",{"_index":559,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["3146d3",{"_index":849,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["3351ff",{"_index":1108,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["35",{"_index":1203,"title":{},"body":{"components/TitleComponent.html":{}}}],["35em",{"_index":615,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["35px",{"_index":991,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["38/38",{"_index":1230,"title":{},"body":{"coverage.html":{}}}],["39/39",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":1215,"title":{},"body":{"components/TitleComponent.html":{}}}],["3px",{"_index":635,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["4/4",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":391,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["40px",{"_index":1107,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["42px",{"_index":1031,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["4px",{"_index":1167,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["5",{"_index":388,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["5.5em",{"_index":1214,"title":{},"body":{"components/TitleComponent.html":{}}}],["50",{"_index":626,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["50px",{"_index":589,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["55",{"_index":1205,"title":{},"body":{"components/TitleComponent.html":{}}}],["5em",{"_index":1195,"title":{},"body":{"components/TitleComponent.html":{}}}],["5px",{"_index":997,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["60",{"_index":1125,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["66",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":609,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["7",{"_index":1077,"title":{},"body":{"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["7.5.0",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["730505",{"_index":579,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["75",{"_index":1207,"title":{},"body":{"components/TitleComponent.html":{}}}],["797777",{"_index":576,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["7deg",{"_index":1220,"title":{},"body":{"components/TitleComponent.html":{}}}],["7px",{"_index":551,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["8",{"_index":389,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["8.0.0",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1234,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1096,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["800px",{"_index":556,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["80px",{"_index":555,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["82",{"_index":1094,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["82px",{"_index":1032,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["8313e7",{"_index":1204,"title":{},"body":{"components/TitleComponent.html":{}}}],["8ba2d0",{"_index":1192,"title":{},"body":{"components/TitleComponent.html":{}}}],["8d8d8d",{"_index":638,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["9",{"_index":1311,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":573,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["92px",{"_index":1033,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["94a0b9",{"_index":1209,"title":{},"body":{"components/TitleComponent.html":{}}}],["95",{"_index":586,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["__input",{"_index":616,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ability",{"_index":247,"title":{},"body":{"interfaces/Game.html":{}}}],["absolute",{"_index":1003,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["active",{"_index":575,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["actual",{"_index":502,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["actual_component",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["actualfunctioninbacklog",{"_index":641,"title":{},"body":{"classes/GameConcret.html":{}}}],["actuallog",{"_index":228,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["actualtask",{"_index":514,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["add",{"_index":218,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"index.html":{}}}],["addclass",{"_index":764,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addclass(id",{"_index":773,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["added",{"_index":771,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement",{"_index":765,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement(type",{"_index":779,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["adding",{"_index":213,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["additionalvalue",{"_index":780,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue[key",{"_index":823,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addnote",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addnote(value",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addplayername",{"_index":1041,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addplayername(event",{"_index":1044,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["adds",{"_index":783,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext",{"_index":766,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext(text",{"_index":797,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["afterviewinit",{"_index":324,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["align",{"_index":498,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["allows",{"_index":701,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{}}}],["already",{"_index":905,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["andlocations",{"_index":380,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["angular",{"_index":815,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["angular/animations",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":909,"title":{},"body":{"components/MainMenuComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["angular/material/sidenav",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/ShopComponentComponent.html":{},"dependencies.html":{}}}],["angular/router/upgrade",{"_index":907,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["angular/src/tools/esbuild/javascript",{"_index":817,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["angular/upgrade",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":1120,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["another",{"_index":700,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/StartButtonComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["app.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1115,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["application",{"_index":1278,"title":{},"body":{"index.html":{}}}],["applied",{"_index":654,"title":{},"body":{"classes/GameConcret.html":{}}}],["appmodule",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":103,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":497,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["artifacts",{"_index":1287,"title":{},"body":{"index.html":{}}}],["associated",{"_index":649,"title":{},"body":{"classes/GameConcret.html":{}}}],["auto",{"_index":592,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["automatically",{"_index":1279,"title":{},"body":{"index.html":{}}}],["available",{"_index":395,"title":{},"body":{"components/GameComponentComponent.html":{},"modules.html":{}}}],["average",{"_index":1090,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["averagedecorator",{"_index":413,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["averagedecorator(this.game",{"_index":429,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["b0b0b0",{"_index":1025,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["back",{"_index":358,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["background",{"_index":542,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["background.jpg",{"_index":1017,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["backlog",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata",{"_index":252,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata[\"boutton",{"_index":459,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogdata[data[key",{"_index":458,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogvalue",{"_index":328,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backup",{"_index":240,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["balise",{"_index":329,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["bare",{"_index":399,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["based",{"_index":758,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["before",{"_index":879,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["behaviorsubject",{"_index":717,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["behaviorsubject(null",{"_index":711,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["being",{"_index":645,"title":{},"body":{"classes/GameConcret.html":{}}}],["belongs",{"_index":256,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["better",{"_index":1011,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["between",{"_index":992,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["black",{"_index":1194,"title":{},"body":{"components/TitleComponent.html":{}}}],["block",{"_index":969,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["boolean",{"_index":272,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":525,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["bottom_input",{"_index":993,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["bound",{"_index":876,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["box",{"_index":548,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["break",{"_index":949,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["brightness(0.8",{"_index":588,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["brightness(90",{"_index":1172,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["browse",{"_index":1309,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["bsetupdefaultvalue",{"_index":642,"title":{},"body":{"classes/GameConcret.html":{}}}],["build",{"_index":1286,"title":{},"body":{"index.html":{}}}],["button",{"_index":365,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["button's",{"_index":842,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["button.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":835,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.scss",{"_index":834,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts",{"_index":830,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":840,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:21",{"_index":844,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1157,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1159,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1158,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:41",{"_index":1161,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:47",{"_index":1163,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:54",{"_index":1162,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.style.display",{"_index":912,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["button/information",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["button/start",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button_icon",{"_index":603,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_label",{"_index":602,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["buttonclicked",{"_index":838,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["c7c7c7",{"_index":1173,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["cafe",{"_index":393,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(1em",{"_index":617,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(50",{"_index":1111,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["callback",{"_index":869,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["called",{"_index":1156,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["came",{"_index":580,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["capabilities",{"_index":1302,"title":{},"body":{"index.html":{}}}],["caption_button",{"_index":1168,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["caption_button:hover",{"_index":1171,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captionbackground",{"_index":1153,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captioncolor",{"_index":1154,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["card",{"_index":286,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/PlayerCardComponent.html":{}}}],["card'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["card.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":1013,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.scss",{"_index":1012,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.ts",{"_index":1010,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":1015,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card/player",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["ccc",{"_index":1008,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["center",{"_index":500,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["change",{"_index":289,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["changemod",{"_index":1042,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changemod(event",{"_index":1048,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changer",{"_index":1135,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["changes",{"_index":1045,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changlang",{"_index":859,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changlang(lang",{"_index":864,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changlang(lang:any",{"_index":971,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changselected",{"_index":1132,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["check",{"_index":1050,"title":{},"body":{"components/SettingsComponentComponent.html":{},"index.html":{}}}],["checked",{"_index":874,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["child",{"_index":1190,"title":{},"body":{"components/TitleComponent.html":{}}}],["children",{"_index":581,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["choice",{"_index":1299,"title":{},"body":{"index.html":{}}}],["choose",{"_index":510,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["choosedefaultvalue",{"_index":185,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["chose",{"_index":1091,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["circle",{"_index":1118,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["class",{"_index":44,"title":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["classe",{"_index":774,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["classes",{"_index":639,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"overview.html":{}}}],["classes/decorateur/averagedecorator",{"_index":414,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/game",{"_index":403,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/gameconcret",{"_index":405,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/majabsdecorator",{"_index":416,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/strictdecorator",{"_index":407,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/facade/htmldisplay",{"_index":411,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/singleton/htmlbalise",{"_index":412,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clear",{"_index":481,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clearhtml",{"_index":767,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearhtml(element",{"_index":800,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearinstance",{"_index":726,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["cli",{"_index":1267,"title":{},"body":{"index.html":{}}}],["click",{"_index":1144,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["clicked",{"_index":843,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["clip",{"_index":629,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["closebalise",{"_index":781,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["closes",{"_index":889,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["closing",{"_index":796,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["cluster_appmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1282,"title":{},"body":{"index.html":{}}}],["color",{"_index":515,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["column",{"_index":493,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["columns",{"_index":506,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["come",{"_index":1176,"title":{},"body":{"components/TitleComponent.html":{}}}],["command",{"_index":1300,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["component.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.html",{"_index":327,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["component.component.scss",{"_index":326,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["component.component.ts",{"_index":321,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:112",{"_index":1057,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:116",{"_index":357,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:133",{"_index":370,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:154",{"_index":368,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:175",{"_index":356,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:192",{"_index":349,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:207",{"_index":352,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:21",{"_index":1060,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:22",{"_index":345,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:222",{"_index":369,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:243",{"_index":364,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:250",{"_index":371,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:26",{"_index":1059,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:31",{"_index":1063,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:34",{"_index":1141,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["component.component.ts:35",{"_index":382,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:36",{"_index":1061,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:40",{"_index":383,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:41",{"_index":1066,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:43",{"_index":1134,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["component.component.ts:45",{"_index":394,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:50",{"_index":377,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:52",{"_index":1052,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:55",{"_index":398,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:60",{"_index":401,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:64",{"_index":374,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:75",{"_index":359,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:78",{"_index":1049,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:87",{"_index":1055,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:99",{"_index":353,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component/game",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"coverage.html":{}}}],["component/settings",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component/shop",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ShopComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["components/game",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/information",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/player",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/shop",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/start",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title/title.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":886,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["configurable",{"_index":1149,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["connect",{"_index":813,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console",{"_index":1087,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(\"aa",{"_index":826,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console.log(\"data",{"_index":965,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["console.log(\"test",{"_index":1083,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.backlogdata",{"_index":1082,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.mode",{"_index":950,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["console.log(this.players",{"_index":681,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["const",{"_index":169,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["constructor(dataservice",{"_index":342,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["constructor(private",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["cont",{"_index":444,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["contain",{"_index":486,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container",{"_index":488,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container_bottom",{"_index":1006,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_button",{"_index":987,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_info",{"_index":988,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["containing",{"_index":379,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["contains",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["content",{"_index":495,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["continue",{"_index":373,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["continuegame",{"_index":186,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["continuegame(defaultvalue",{"_index":227,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["courses",{"_index":250,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["coverage",{"_index":1221,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatanddownloadjson",{"_index":187,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["create",{"_index":238,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["creating",{"_index":704,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["cross",{"_index":577,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["current",{"_index":249,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["currently",{"_index":351,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["cursor",{"_index":570,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["d000ff",{"_index":552,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dafoe",{"_index":1213,"title":{},"body":{"components/TitleComponent.html":{}}}],["data",{"_index":347,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["data[key",{"_index":443,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dataservice",{"_index":346,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["declarations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorator",{"_index":180,"title":{},"body":{"interfaces/Game.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defaultvalue",{"_index":235,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defines",{"_index":316,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["deleting",{"_index":802,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dependencies",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["design",{"_index":181,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["detector",{"_index":873,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["dev",{"_index":1275,"title":{},"body":{"index.html":{}}}],["development",{"_index":1270,"title":{},"body":{"index.html":{}}}],["devkit/build",{"_index":816,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["direction",{"_index":492,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive's",{"_index":875,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["directives",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1285,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1290,"title":{},"body":{"index.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["displayed",{"_index":799,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["displayhtml",{"_index":768,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml(element",{"_index":805,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displays",{"_index":792,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dist",{"_index":1289,"title":{},"body":{"index.html":{}}}],["div",{"_index":485,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["document.getelementbyid(\"actualtask",{"_index":742,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"contniue",{"_index":911,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"endmessage",{"_index":744,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"finishbutton",{"_index":752,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"gamemodemessage",{"_index":754,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"playerbutton",{"_index":748,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"popup",{"_index":913,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"stage1",{"_index":469,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"standardvalue",{"_index":740,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"texttoshow",{"_index":746,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"validatebutton",{"_index":750,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(id",{"_index":824,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["document.getelementsbyclassname(\"skinbutton",{"_index":1145,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["documentation",{"_index":1222,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["down",{"_index":647,"title":{},"body":{"classes/GameConcret.html":{}}}],["download",{"_index":239,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["du",{"_index":1137,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["duration",{"_index":1023,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["during",{"_index":277,"title":{},"body":{"interfaces/Game.html":{}}}],["dynamic",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1143,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["e0e0e0",{"_index":1019,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["e2e",{"_index":1297,"title":{},"body":{"index.html":{}}}],["e3e3e3",{"_index":622,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["e9e9ea",{"_index":999,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["each",{"_index":246,"title":{},"body":{"interfaces/Game.html":{}}}],["ease",{"_index":598,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["easily",{"_index":761,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["element.classlist.add(classe",{"_index":827,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element.innerhtml",{"_index":828,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["elements",{"_index":381,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/ShopComponentComponent.html":{}}}],["emptied",{"_index":804,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["empty",{"_index":730,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["en",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{}}}],["end",{"_index":188,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["endmessage",{"_index":560,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["english",{"_index":976,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["enter",{"_index":225,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["entered",{"_index":1047,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["error(\"method",{"_index":678,"title":{},"body":{"classes/GameConcret.html":{}}}],["evenly",{"_index":540,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event",{"_index":885,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.files[0",{"_index":918,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.placeholder",{"_index":1071,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value",{"_index":1069,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value.substring(0",{"_index":1076,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["eventemitter",{"_index":839,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["everything",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["example",{"_index":786,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["execute",{"_index":1294,"title":{},"body":{"index.html":{}}}],["exo",{"_index":1182,"title":{},"body":{"components/TitleComponent.html":{}}}],["explain",{"_index":831,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["explode",{"_index":1121,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["exports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extract",{"_index":926,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["facade",{"_index":759,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["face",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":397,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["family",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["ff61af",{"_index":1206,"title":{},"body":{"components/TitleComponent.html":{}}}],["fff",{"_index":550,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["ffffff",{"_index":538,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":922,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["filereader",{"_index":920,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["files",{"_index":1281,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1210,"title":{},"body":{"components/TitleComponent.html":{}}}],["filter",{"_index":587,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["finishbutton",{"_index":737,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["first",{"_index":877,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["fixed",{"_index":1007,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["flex",{"_index":491,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["focus",{"_index":634,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["font",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["for(const",{"_index":941,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["for(let",{"_index":1147,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["form",{"_index":1092,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_bottom",{"_index":1104,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_top",{"_index":1093,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["format",{"_index":772,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["français",{"_index":977,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["full",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["further",{"_index":1303,"title":{},"body":{"index.html":{}}}],["game",{"_index":69,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["game_label:before",{"_index":1110,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["gamecomponentcomponent",{"_index":68,"title":{"components/GameComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameconcret",{"_index":404,"title":{"classes/GameConcret.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"coverage.html":{}}}],["gamemodemessage",{"_index":561,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["gameoptionserviceservice",{"_index":343,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["gamerules",{"_index":980,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules1",{"_index":981,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules2",{"_index":982,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules3",{"_index":983,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules4",{"_index":984,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules5",{"_index":985,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules6",{"_index":986,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gap",{"_index":1100,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["generate",{"_index":1284,"title":{},"body":{"index.html":{}}}],["generated",{"_index":803,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["getactualstage",{"_index":189,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getactuellog",{"_index":334,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getbacklogdata",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote",{"_index":191,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote(key",{"_index":253,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getdefaultvalue",{"_index":192,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getinstance",{"_index":727,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["getmode",{"_index":335,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote",{"_index":193,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getnote(id",{"_index":355,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote(key",{"_index":259,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getnotes",{"_index":194,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer(key",{"_index":265,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayernumber",{"_index":196,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayers",{"_index":197,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getslidervalue",{"_index":1043,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event",{"_index":1051,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getting",{"_index":1264,"title":{"index.html":{}},"body":{}}],["give",{"_index":280,"title":{},"body":{"interfaces/Game.html":{}}}],["given",{"_index":299,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["go",{"_index":1305,"title":{},"body":{"index.html":{}}}],["goal",{"_index":833,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["graded",{"_index":896,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gradient(#032d50",{"_index":1201,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(#e3e3e3",{"_index":621,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["gradient(120deg",{"_index":623,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["graph",{"_index":1310,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":505,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["group",{"_index":614,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["h1",{"_index":1029,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["h2",{"_index":1211,"title":{},"body":{"components/TitleComponent.html":{}}}],["h3",{"_index":1102,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["header",{"_index":504,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["header_sidenav",{"_index":566,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["height",{"_index":489,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["help",{"_index":847,"title":{},"body":{"components/InformationButtonComponent.html":{},"index.html":{}}}],["here",{"_index":509,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["hidden",{"_index":1022,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["home",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ShopComponentComponent.html":{}}}],["hover",{"_index":600,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["html.addhtmlelement(\"input",{"_index":788,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["html.displayhtml(balise.title",{"_index":790,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["htmlbalise",{"_index":375,"title":{"classes/HtmlBalise.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"coverage.html":{}}}],["htmlbalise.getinstance",{"_index":420,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["htmlbalise.instance",{"_index":756,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlbuttonelement",{"_index":736,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmlcollectionof",{"_index":1146,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["htmldisplay",{"_index":330,"title":{"classes/HtmlDisplay.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["htmldivelement",{"_index":734,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmlelement",{"_index":733,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["htmlinputelement",{"_index":470,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["http",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:4200",{"_index":1277,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["httploaderfactory",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["httploaderfactory(http:httpclient",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":850,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["id",{"_index":236,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["identifier",{"_index":367,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["if(!closebalise",{"_index":821,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(element",{"_index":825,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(n",{"_index":480,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["if(this.popupisopen",{"_index":968,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["ignore",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["image",{"_index":543,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["immediately",{"_index":872,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["implemented",{"_index":679,"title":{},"body":{"classes/GameConcret.html":{}}}],["implements",{"_index":323,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["important",{"_index":1109,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["imported",{"_index":1056,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ShopComponentComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information_button",{"_index":848,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["informationbuttoncomponent",{"_index":71,"title":{"components/InformationButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable",{"_index":692,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":693,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["inline",{"_index":994,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input",{"_index":612,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["input[type=\"file",{"_index":1002,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio",{"_index":1114,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":1119,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input_text",{"_index":791,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["inputs",{"_index":1014,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["inputvalue",{"_index":738,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instance",{"_index":725,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instantiated",{"_index":882,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["interface",{"_index":177,"title":{"interfaces/Game.html":{}},"body":{"interfaces/Game.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":178,"title":{},"body":{"interfaces/Game.html":{}}}],["invoked",{"_index":871,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["iscontinue",{"_index":336,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["isdownload",{"_index":198,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["isretry",{"_index":199,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["it's",{"_index":562,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["item",{"_index":934,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["item.hasownproperty(itemname",{"_index":937,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item.work",{"_index":946,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item[itemname",{"_index":940,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["itemname",{"_index":936,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["items",{"_index":499,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["itself",{"_index":613,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["json",{"_index":241,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json.parse(filecontent",{"_index":925,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json_file",{"_index":978,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata",{"_index":924,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata.backlog",{"_index":932,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog.hasownproperty(key",{"_index":933,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog[key",{"_index":935,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.default",{"_index":931,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.hasownproperty(key",{"_index":1079,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata.mode",{"_index":930,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players",{"_index":942,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players.hasownproperty(key",{"_index":943,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players[key",{"_index":944,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata[key]?.name",{"_index":1080,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["justify",{"_index":494,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["karma",{"_index":1296,"title":{},"body":{"index.html":{}}}],["key",{"_index":211,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["key.startswith(\"default",{"_index":445,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('actuallog",{"_index":463,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('backlog",{"_index":457,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('default",{"_index":464,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('mode",{"_index":442,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('note",{"_index":462,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('player",{"_index":447,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["keyframes",{"_index":1123,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["keys",{"_index":928,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["l'affichage",{"_index":1136,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["label",{"_index":811,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label.innertext",{"_index":820,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["lang",{"_index":857,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lang.target.value",{"_index":973,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["language",{"_index":866,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["launches",{"_index":244,"title":{},"body":{"interfaces/Game.html":{}}}],["left",{"_index":1004,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["left_number",{"_index":1098,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["left_players",{"_index":1099,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["lets",{"_index":760,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["letter",{"_index":1186,"title":{},"body":{"components/TitleComponent.html":{}}}],["li",{"_index":1106,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["line",{"_index":558,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["linear",{"_index":620,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":1152,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["list",{"_index":264,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["listvalue",{"_index":331,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["literal",{"_index":242,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["load",{"_index":854,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["loaded",{"_index":362,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["loader",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lobby",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local_cafe",{"_index":484,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["localstorage.getitem('lang",{"_index":916,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["localstorage.setitem('lang",{"_index":974,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lunchstage",{"_index":200,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["mainmenucomponent",{"_index":74,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["majabs",{"_index":430,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majabsdecorator",{"_index":415,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["majabsdecorator(this.game",{"_index":431,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majority",{"_index":1089,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["manages",{"_index":322,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["margin",{"_index":528,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["marks",{"_index":297,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["mat",{"_index":564,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["matbuttonmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1072,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["matching",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maticon",{"_index":910,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["maticonmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["matsidenavmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":1064,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["menu",{"_index":483,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["menu'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["menu.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["menu.component.html",{"_index":856,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":855,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":853,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:133",{"_index":892,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:156",{"_index":887,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:167",{"_index":865,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:19",{"_index":863,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":904,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":900,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":868,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":898,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:57",{"_index":897,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":901,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:65",{"_index":899,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:69",{"_index":903,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:73",{"_index":895,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:79",{"_index":884,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/main",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["message",{"_index":841,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["method",{"_index":870,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["methods",{"_index":183,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["michel",{"_index":453,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["middle",{"_index":1117,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["min",{"_index":554,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mode",{"_index":354,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["modedecorator",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["modified",{"_index":723,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["modifies",{"_index":1053,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["modifybacklogdata",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["modifybacklogdata(key",{"_index":287,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["module",{"_index":90,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":92,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1304,"title":{},"body":{"index.html":{}}}],["moyenne",{"_index":428,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mr",{"_index":1212,"title":{},"body":{"components/TitleComponent.html":{}}}],["n",{"_index":304,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["names",{"_index":927,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["namesarray",{"_index":1078,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray.push(jsondata[key].name",{"_index":1081,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["navigate",{"_index":1276,"title":{},"body":{"index.html":{}}}],["nb",{"_index":314,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["nbplayer",{"_index":1088,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["need",{"_index":271,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["new",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":709,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["next",{"_index":291,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["nextstage",{"_index":202,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["ng",{"_index":1273,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":337,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ngif",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngmodelgroup",{"_index":908,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["ngmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{}}}],["ngoninit",{"_index":418,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["ngx",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"dependencies.html":{}}}],["none",{"_index":422,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["noopanimationsmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["note",{"_index":214,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["noted",{"_index":219,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["notes",{"_index":396,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["null",{"_index":440,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["number",{"_index":229,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["object",{"_index":776,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["object.keys(data).foreach(key",{"_index":441,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["object.keys(this.backlogdata).foreach((item",{"_index":961,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["object.keys(this.players).foreach(key",{"_index":953,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["object.keys(this.players).length",{"_index":686,"title":{},"body":{"classes/GameConcret.html":{}}}],["offset",{"_index":1166,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onbuttonclick",{"_index":836,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["once",{"_index":881,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["one",{"_index":698,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["onfileselected",{"_index":860,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["onfileselected(event",{"_index":883,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["oninit",{"_index":325,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["opacity",{"_index":1005,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["open",{"_index":400,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["opened",{"_index":332,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["openinformation",{"_index":861,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["opens",{"_index":888,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["option",{"_index":409,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["optional",{"_index":217,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["origin",{"_index":628,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":632,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["output",{"_index":845,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["outputs",{"_index":837,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["overflow",{"_index":1021,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["overview",{"_index":1306,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":319,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["package",{"_index":1246,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":523,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["page",{"_index":361,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"index.html":{}}}],["page's",{"_index":762,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["param",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parameters",{"_index":216,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["parseint(key",{"_index":948,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key.replace('player",{"_index":449,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["parseint(match",{"_index":1074,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["passed",{"_index":710,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{}}}],["passing",{"_index":777,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["path",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrick",{"_index":455,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["pattern",{"_index":182,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["per",{"_index":1065,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["phase",{"_index":278,"title":{},"body":{"interfaces/Game.html":{}}}],["placed",{"_index":793,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["placeholder",{"_index":637,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["placeholder.replace(/\\d/g",{"_index":1073,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["places",{"_index":810,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["planing",{"_index":284,"title":{},"body":{"interfaces/Game.html":{}}}],["planning",{"_index":1179,"title":{},"body":{"components/TitleComponent.html":{}}}],["planningpokerpp",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["platform",{"_index":1298,"title":{},"body":{"index.html":{}}}],["play",{"_index":303,"title":{},"body":{"interfaces/Game.html":{}}}],["player",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["player's",{"_index":267,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerbutton",{"_index":582,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["playercardcomponent",{"_index":76,"title":{"components/PlayerCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerkey",{"_index":954,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playermax",{"_index":1040,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playernumber",{"_index":448,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playerpushbutton",{"_index":203,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerpushbutton(id",{"_index":293,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["players",{"_index":224,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["players[1",{"_index":452,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[2",{"_index":454,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[playernumber",{"_index":451,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["playersnb",{"_index":1067,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playersnote",{"_index":643,"title":{},"body":{"classes/GameConcret.html":{}}}],["pointer",{"_index":571,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["poker",{"_index":285,"title":{},"body":{"interfaces/Game.html":{},"components/TitleComponent.html":{}}}],["popup",{"_index":890,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popup.style.display",{"_index":914,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popupisopen",{"_index":858,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["position",{"_index":593,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["possible",{"_index":1151,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pp",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["press",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["pressed",{"_index":366,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["presses",{"_index":372,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["previously",{"_index":893,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["private",{"_index":417,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["project",{"_index":1266,"title":{},"body":{"index.html":{}}}],["prompts",{"_index":223,"title":{},"body":{"interfaces/Game.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"properties.html":{}}}],["protected",{"_index":1085,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["provide",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":719,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["public",{"_index":763,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["pushable_button",{"_index":1164,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushable_button:active",{"_index":1174,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushablebackground",{"_index":1155,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["quiter",{"_index":460,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["radius",{"_index":526,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rating",{"_index":298,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reader",{"_index":919,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.onload",{"_index":921,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.readastext(selectedfile",{"_index":952,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.result",{"_index":923,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["readonly",{"_index":1086,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["recorded",{"_index":894,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["recover",{"_index":261,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["red",{"_index":578,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["redirectto",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":812,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["regular.ttf",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":594,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["reload",{"_index":1280,"title":{},"body":{"index.html":{}}}],["repeat(11",{"_index":507,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["replay",{"_index":274,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["resuming",{"_index":234,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{}}}],["retrieve",{"_index":255,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["retrieves",{"_index":350,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["return",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["returned",{"_index":262,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returning",{"_index":258,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returns",{"_index":220,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rgb(0",{"_index":604,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgb(255",{"_index":610,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgba(0",{"_index":1027,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["rgba(black",{"_index":1198,"title":{},"body":{"components/TitleComponent.html":{}}}],["right",{"_index":574,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["right_style",{"_index":1101,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["rotate",{"_index":1219,"title":{},"body":{"components/TitleComponent.html":{}}}],["round",{"_index":275,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["router",{"_index":344,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["routerlink",{"_index":1130,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["routermodule",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":167,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":165,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":519,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["rules",{"_index":832,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["run",{"_index":1272,"title":{},"body":{"index.html":{}}}],["running",{"_index":1291,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":718,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"dependencies.html":{}}}],["résum",{"_index":482,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["save",{"_index":703,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["scaffolding",{"_index":1283,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":1126,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(0.85",{"_index":601,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(0.9",{"_index":1001,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["scale(1",{"_index":1127,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1.2",{"_index":569,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(1.5",{"_index":851,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["scale(4",{"_index":1124,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scene",{"_index":699,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["score",{"_index":281,"title":{},"body":{"interfaces/Game.html":{}}}],["select",{"_index":902,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectbutton",{"_index":338,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectbutton(id",{"_index":363,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectedfile",{"_index":917,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectedlanguage",{"_index":972,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["selectioner",{"_index":1139,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["selects",{"_index":296,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["selectskin",{"_index":1133,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["selectskin(e",{"_index":1140,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["send",{"_index":702,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["senddata",{"_index":862,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["sending",{"_index":708,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["sends",{"_index":1058,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["sent",{"_index":713,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["serif",{"_index":520,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":1274,"title":{},"body":{"index.html":{}}}],["server",{"_index":1271,"title":{},"body":{"index.html":{}}}],["service",{"_index":696,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["service.service",{"_index":410,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["service.service.ts",{"_index":695,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:18",{"_index":712,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:23",{"_index":715,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:30",{"_index":707,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["services/gameoptionservice/game",{"_index":408,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["set",{"_index":302,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setactualplayerturn",{"_index":204,"title":{},"body":{"interfaces/Game.html":{}}}],["setactualplayerturn(n",{"_index":300,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklog",{"_index":339,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setbacklogdata",{"_index":205,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklogdata(backlogdata",{"_index":305,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklognote",{"_index":340,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setdata",{"_index":705,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdata(newdata",{"_index":706,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdefaultvalue",{"_index":206,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setdefaultvalue(value",{"_index":308,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setplayers",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setplayers(players",{"_index":310,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["sets",{"_index":231,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage",{"_index":208,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage(nb",{"_index":312,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setter",{"_index":307,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["settimeout",{"_index":951,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["settings",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["settingscomponentcomponent",{"_index":79,"title":{"components/SettingsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":318,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setupdefaultvalue",{"_index":209,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setuplocationsync",{"_index":906,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["shadow",{"_index":530,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["shop",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["shopcomponentcomponent",{"_index":81,"title":{"components/ShopComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["showtext",{"_index":769,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["showtext(label",{"_index":808,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["sidenav",{"_index":503,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["singleton",{"_index":378,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["site",{"_index":348,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["size",{"_index":521,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["sizing",{"_index":1113,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["skew",{"_index":1184,"title":{},"body":{"components/TitleComponent.html":{}}}],["skin",{"_index":1138,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["slider",{"_index":1054,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["solid",{"_index":547,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["space",{"_index":496,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["spacing",{"_index":1187,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:first",{"_index":1189,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:last",{"_index":1200,"title":{},"body":{"components/TitleComponent.html":{}}}],["specific",{"_index":1150,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["src",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app",{"_index":164,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:27",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/decorateur/averagedecorator.ts",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/game.ts",{"_index":179,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/game.ts:10",{"_index":311,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:101",{"_index":212,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:106",{"_index":263,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:112",{"_index":260,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:119",{"_index":288,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:124",{"_index":273,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:129",{"_index":270,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:134",{"_index":237,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:140",{"_index":301,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:145",{"_index":243,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:151",{"_index":254,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:16",{"_index":306,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:21",{"_index":222,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:28",{"_index":230,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:34",{"_index":315,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:40",{"_index":309,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:45",{"_index":290,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:51",{"_index":313,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:57",{"_index":276,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:62",{"_index":248,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:67",{"_index":268,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:73",{"_index":266,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:78",{"_index":257,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:83",{"_index":251,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:89",{"_index":294,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:94",{"_index":269,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/gameconcret.ts",{"_index":640,"title":{},"body":{"classes/GameConcret.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:103",{"_index":665,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:111",{"_index":664,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:118",{"_index":661,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:125",{"_index":659,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:133",{"_index":671,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:139",{"_index":666,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:14",{"_index":656,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:148",{"_index":655,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:155",{"_index":663,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:163",{"_index":662,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:172",{"_index":669,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:180",{"_index":660,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:187",{"_index":668,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:21",{"_index":652,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:213",{"_index":667,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:220",{"_index":657,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:229",{"_index":675,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:25",{"_index":653,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:29",{"_index":648,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:34",{"_index":650,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:39",{"_index":651,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:44",{"_index":644,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:50",{"_index":674,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:59",{"_index":672,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:73",{"_index":676,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:81",{"_index":673,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:89",{"_index":670,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:96",{"_index":658,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/majabsdecorator.ts",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/modedecorator.ts",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/strictdecorator.ts",{"_index":1233,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts",{"_index":757,"title":{},"body":{"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts:12",{"_index":770,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:20",{"_index":809,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:40",{"_index":782,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:63",{"_index":775,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:74",{"_index":798,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:82",{"_index":806,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:91",{"_index":801,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/singleton/htmlbalise.ts",{"_index":721,"title":{},"body":{"classes/HtmlBalise.html":{},"coverage.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:39",{"_index":731,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:49",{"_index":729,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:9",{"_index":728,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/components/game",{"_index":320,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":829,"title":{},"body":{"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":852,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/player",{"_index":1009,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["src/app/components/settings",{"_index":1038,"title":{},"body":{"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/shop",{"_index":1128,"title":{},"body":{"components/ShopComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/start",{"_index":1148,"title":{},"body":{"components/StartButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/title/title.component.ts",{"_index":1175,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/services/gameoptionservice/game",{"_index":694,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["stage1",{"_index":789,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["standalone",{"_index":1129,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["standar",{"_index":402,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standard",{"_index":226,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["standardvalue",{"_index":513,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standarvalue",{"_index":333,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["start",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["startbuttoncomponent",{"_index":83,"title":{"components/StartButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1265,"title":{"index.html":{}},"body":{}}],["starts",{"_index":360,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["statements",{"_index":1223,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":724,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["step",{"_index":292,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["stored",{"_index":1288,"title":{},"body":{"index.html":{}}}],["strict",{"_index":426,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["strictdecorator",{"_index":406,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["strictdecorator(this.game",{"_index":427,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["strkey",{"_index":955,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["stroke",{"_index":536,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["stvalue",{"_index":732,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["style",{"_index":511,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styleurl",{"_index":1131,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["summary",{"_index":245,"title":{},"body":{"interfaces/Game.html":{}}}],["support",{"_index":1307,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1308,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":784,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["tags",{"_index":722,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["takes",{"_index":487,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["task",{"_index":282,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["teh",{"_index":501,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["test",{"_index":691,"title":{},"body":{"classes/GameConcret.html":{},"index.html":{}}}],["testing",{"_index":1301,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1293,"title":{},"body":{"index.html":{}}}],["text",{"_index":517,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["texttoshow",{"_index":512,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["things",{"_index":563,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.actualfunctioninbacklog",{"_index":685,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.actuallog",{"_index":947,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata",{"_index":682,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.backlogdata.foreach((item",{"_index":1084,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.backlogdata[item",{"_index":964,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[itemname",{"_index":939,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[key",{"_index":690,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.balise",{"_index":419,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.balise.playerbutton.style.display",{"_index":421,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.bsetupdefaultvalue",{"_index":683,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.buttonclicked.emit",{"_index":846,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["this.content",{"_index":822,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["this.data",{"_index":966,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data.asobservable",{"_index":714,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data.next(newdata",{"_index":720,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data[\"actuallog",{"_index":960,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"backlog",{"_index":962,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"default",{"_index":959,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"mode",{"_index":958,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"note",{"_index":963,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[strkey",{"_index":956,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.dataservice.data$.subscribe(data",{"_index":439,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.dataservice.setdata(this.data",{"_index":967,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.defaultvalue",{"_index":684,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.endmessage",{"_index":743,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.finishbutton",{"_index":751,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.game",{"_index":424,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.choosedefaultvalue",{"_index":438,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.continuegame(this.getdefaultvalue",{"_index":435,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getactualstage",{"_index":479,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.creatanddownloadjson",{"_index":474,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isdownload",{"_index":473,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isretry",{"_index":476,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.lunchstage",{"_index":478,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.playerpushbutton(id",{"_index":466,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setactualplayerturn(1",{"_index":477,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setbacklogdata(backlogdata",{"_index":461,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setdefaultvalue(valueelement.value",{"_index":472,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setplayers(players",{"_index":456,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setupdefaultvalue",{"_index":467,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.gamemodemessage",{"_index":753,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.getactuellog",{"_index":436,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getmode",{"_index":425,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getnote(parseint(key.match(/\\d+/)?.[0",{"_index":465,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.htmldisplay",{"_index":423,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.inputvalue",{"_index":755,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.iscontinue",{"_index":433,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.lang",{"_index":915,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.mode",{"_index":929,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playerbutton",{"_index":747,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.playernumber",{"_index":1068,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players",{"_index":680,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.players.push(item",{"_index":945,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.players[id",{"_index":1075,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players[key",{"_index":687,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[playerkey",{"_index":957,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playersnb",{"_index":1070,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnote",{"_index":689,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.playersnote[key",{"_index":688,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.popupisopen",{"_index":970,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":475,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklog",{"_index":437,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklognote",{"_index":434,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setplayers",{"_index":432,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.stvalue",{"_index":739,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.task",{"_index":741,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.title",{"_index":745,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(localstorage.getitem('lang",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(selectedlanguage",{"_index":975,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.validatebutton",{"_index":749,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["throw",{"_index":677,"title":{},"body":{"classes/GameConcret.html":{}}}],["time",{"_index":878,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["title.component.html",{"_index":1178,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":1177,"title":{},"body":{"components/TitleComponent.html":{}}}],["titlecomponent",{"_index":84,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":599,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["top_left",{"_index":1095,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["top_right",{"_index":1097,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["transform",{"_index":568,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["transformer",{"_index":818,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transformjavascript",{"_index":814,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transition",{"_index":596,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["translate",{"_index":979,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["translate/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{}}}],["translatemodule.forroot",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{}}}],["translateservice:translateservice",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{}}}],["translatey",{"_index":1170,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["translation",{"_index":867,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["transmitting",{"_index":697,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["transparent",{"_index":534,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["triggered",{"_index":295,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["true",{"_index":446,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/ShopComponentComponent.html":{}}}],["tslib",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":279,"title":{},"body":{"interfaces/Game.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["typeface",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":1105,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["un",{"_index":1142,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["undefined",{"_index":376,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["under",{"_index":1160,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["unit",{"_index":1292,"title":{},"body":{"index.html":{}}}],["url(\"../../../assets/images/card.jpg",{"_index":585,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/hypnotic.jpg",{"_index":544,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/player",{"_index":1016,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["url('../../../assets/images/hand.png",{"_index":591,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url('../assets/fonts/pressstart2p",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=exo:wght@900&display=swap",{"_index":1181,"title":{},"body":{"components/TitleComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=mr+dafoe&display=swap",{"_index":1180,"title":{},"body":{"components/TitleComponent.html":{}}}],["use",{"_index":787,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["used",{"_index":716,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["usefactory",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":233,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["user",{"_index":1039,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["using",{"_index":283,"title":{},"body":{"interfaces/Game.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["validatebutton",{"_index":735,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["validestage",{"_index":341,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["valueelement",{"_index":468,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valueelement.value",{"_index":471,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valuers",{"_index":795,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["values",{"_index":232,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["variable",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["various",{"_index":785,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["version",{"_index":1268,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1116,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["via",{"_index":1295,"title":{},"body":{"index.html":{}}}],["view",{"_index":880,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["void",{"_index":221,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["want",{"_index":778,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["we'll",{"_index":807,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["webkit",{"_index":535,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["website",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["whether",{"_index":317,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["white",{"_index":516,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["whose",{"_index":1046,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["width",{"_index":490,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["window",{"_index":891,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["work",{"_index":938,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["worker",{"_index":819,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["wrap",{"_index":541,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["written",{"_index":646,"title":{},"body":{"classes/GameConcret.html":{}}}],["yes",{"_index":794,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["z",{"_index":595,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["zone.js",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component that display everything.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'planningPokerPP'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n            \n                \n                    Variable that contains the name of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/**\n * Main component that display everything.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n  /**\n   * @ignore\n   * @param translateService\n   */\n  constructor(private translateService:TranslateService) {\n    this.translateService.setDefaultLang('en');\n    this.translateService.use(localStorage.getItem('lang') || 'en')\n  }\n\n  /**\n   * Variable that contains the name of the website.\n   */\n  title = 'planningPokerPP';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @font-face {\n  font-family: 'Press Start 2P';\n  src: url('../assets/fonts/PressStart2P-Regular.ttf');\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nStartButtonComponent \n\nStartButtonComponent \n\nStartButtonComponent  -->\n\nAppModule->StartButtonComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponentComponent\n                        \n                        \n                            InformationButtonComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            PlayerCardComponent\n                        \n                        \n                            SettingsComponentComponent\n                        \n                        \n                            StartButtonComponent\n                        \n                        \n                            TitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StartButtonComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {StartButtonComponent} from './components/start-button/start-button.component';\nimport {InformationButtonComponent} from './components/information-button/information-button.component';\n\nimport {MainMenuComponent} from './components/main-menu/main-menu.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SettingsComponentComponent} from './components/settings-component/settings-component.component';\nimport { GameComponentComponent } from './components/game-component/game-component.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { PlayerCardComponent } from './components/player-card/player-card.component';\nimport {NgIf} from \"@angular/common\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\nimport {ShopComponentComponent} from \"./components/shop-component/shop-component.component\";\n\n/**\n * @ignore\n * @param http\n * @constructor\n */\nexport function HttpLoaderFactory(http:HttpClient){\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartButtonComponent,\n    InformationButtonComponent,\n    MainMenuComponent,\n    SettingsComponentComponent,\n    GameComponentComponent,\n    TitleComponent,\n    PlayerCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatIconModule,\n    NoopAnimationsModule,\n    NgIf,\n    MatSidenavModule,\n    MatButtonModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient]\n        }\n      }\n    ),\n  ],\n  providers:\n    [HttpClient],\n  exports: [\n    StartButtonComponent\n  ],\n  bootstrap:\n    [AppComponent]\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponentComponent} from \"./components/settings-component/settings-component.component\";\nimport {MainMenuComponent} from \"./components/main-menu/main-menu.component\";\nimport {GameComponentComponent} from \"./components/game-component/game-component.component\";\nimport {ShopComponentComponent} from \"./components/shop-component/shop-component.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: MainMenuComponent},\n  {path: 'lobby', component: SettingsComponentComponent},\n  {path: 'game', component: GameComponentComponent},\n  {path: 'shop', component: ShopComponentComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/Game.ts\n        \n\n\n            \n                Description\n            \n            \n                Game interface for the Decorator design pattern\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addNote\n                                    \n                                \n                                \n                                    \n                                        chooseDefaultValue\n                                    \n                                \n                                \n                                    \n                                        continueGame\n                                    \n                                \n                                \n                                    \n                                        creatAndDownloadJSON\n                                    \n                                \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        getActualStage\n                                    \n                                \n                                \n                                    \n                                        getBacklogData\n                                    \n                                \n                                \n                                    \n                                        getBacklogDataNote\n                                    \n                                \n                                \n                                    \n                                        getDefaultValue\n                                    \n                                \n                                \n                                    \n                                        getNote\n                                    \n                                \n                                \n                                    \n                                        getNotes\n                                    \n                                \n                                \n                                    \n                                        getPlayer\n                                    \n                                \n                                \n                                    \n                                        getPlayerNumber\n                                    \n                                \n                                \n                                    \n                                        getPlayers\n                                    \n                                \n                                \n                                    \n                                        isDownload\n                                    \n                                \n                                \n                                    \n                                        isRetry\n                                    \n                                \n                                \n                                    \n                                        lunchStage\n                                    \n                                \n                                \n                                    \n                                        modifyBacklogData\n                                    \n                                \n                                \n                                    \n                                        nextStage\n                                    \n                                \n                                \n                                    \n                                        playerPushButton\n                                    \n                                \n                                \n                                    \n                                        setActualPlayerTurn\n                                    \n                                \n                                \n                                    \n                                        setBacklogData\n                                    \n                                \n                                \n                                    \n                                        setDefaultValue\n                                    \n                                \n                                \n                                    \n                                        setPlayers\n                                    \n                                \n                                \n                                    \n                                        setStage\n                                    \n                                \n                                \n                                    \n                                        setupDefaultValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:101\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:21\n                        \n                    \n\n\n            \n                \n                        Function that prompts players to enter the standard value\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:28\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:134\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:145\n                        \n                    \n\n\n            \n                \n                        Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:62\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:83\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:151\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:78\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:112\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:106\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:73\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:67\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:94\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:129\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:124\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:57\n                        \n                    \n\n\n            \n                \n                        Game function, during this phase the players, each in turn, give the score they would give to the current task\nusing the Planing Poker card.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:119\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:45\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:89\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:140\n                        \n                    \n\n\n            \n                \n                        Set the player who must play\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who is to play\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:16\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:40\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:10\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:51\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:34\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Game {\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [key: number]: string }): void;\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key: string]: number }): void;\n\n  /**\n   * Function that prompts players to enter the standard value\n   */\n  chooseDefaultValue(): void;\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void;\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean;\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void;\n\n  /**\n   * Next step function\n   */\n  nextStage(): void;\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void;\n\n  /**\n   * Game function, during this phase the players, each in turn, give the score they would give to the current task\n   * using the Planing Poker card.\n   */\n  lunchStage(): void;\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number;\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number;\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string;\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string;\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [key: string]: number };\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void;\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [key: number]: string };\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value: string, key: string): void\n\n  /**\n   * Return to note list\n   */\n  getNotes(): { [key: string]: string };\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key: string): string;\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key: string, value: number): void;\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean;\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean;\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON() : { [p: string]: any };\n\n  /**\n   * Set the player who must play\n   * @param n {number} Id of the player who is to play\n   */\n  setActualPlayerTurn(n : number): void;\n\n  /**\n   * Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n   */\n  end() : void;\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponentComponent.html":{"url":"components/GameComponentComponent.html","title":"component - GameComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-component/game-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class that manages game display\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                game-component\n            \n\n\n\n            \n                styleUrls\n                ./game-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backlogValue\n                            \n                            \n                                balise\n                            \n                            \n                                game\n                            \n                            \n                                htmlDisplay\n                            \n                            \n                                listValue\n                            \n                            \n                                opened\n                            \n                            \n                                standarValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActuelLog\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getMode\n                            \n                            \n                                getNote\n                            \n                            \n                                isContinue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectButton\n                            \n                            \n                                setBacklog\n                            \n                            \n                                setBacklogNote\n                            \n                            \n                                setPlayers\n                            \n                            \n                                valideStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-component/game-component.component.ts:22\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Contains data to start the game\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                site router\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActuelLog\n                        \n                    \n                \n            \n            \n                \ngetActuelLog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:192\n                        \n                    \n\n\n            \n                \n                        retrieves the function currently noted\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:207\n                        \n                    \n\n\n            \n                \n                        Get default value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMode\n                        \n                    \n                \n            \n            \n                \ngetMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Get Game Mode\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:175\n                        \n                    \n\n\n            \n                \n                        Get Note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who set the note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContinue\n                        \n                    \n                \n            \n            \n                \nisContinue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Are we back in the game\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Function that starts the game after the page has loaded\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectButton\n                        \n                    \n                \n            \n            \n                \nselectButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:243\n                        \n                    \n\n\n            \n                \n                        Function that starts when a button is pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function identifier\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklog\n                        \n                    \n                \n            \n            \n                \nsetBacklog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:154\n                        \n                    \n\n\n            \n                \n                        Set Backlog Data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogNote\n                        \n                    \n                \n            \n            \n                \nsetBacklogNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:222\n                        \n                    \n\n\n            \n                \n                        Add a not to the Backlog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Set Player in game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valideStage\n                        \n                    \n                \n            \n            \n                \nvalideStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:250\n                        \n                    \n\n\n            \n                \n                        Function that starts when the player presses the button continue\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backlogValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:64\n                        \n                    \n\n            \n                \n                    Backlog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:50\n                        \n                    \n\n            \n                \n                    Singleton containing andlocations for HTML elements\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:35\n                        \n                    \n\n            \n                \n                    Game data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:40\n                        \n                    \n\n            \n                \n                    Class to display elements on the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of available notes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:55\n                        \n                    \n\n            \n                \n                    If the bare is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        standarValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:60\n                        \n                    \n\n            \n                \n                    Standar value\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Game} from \"../../classes/decorateur/Game\";\nimport {GameConcret} from \"../../classes/decorateur/GameConcret\";\nimport {StrictDecorator} from \"../../classes/decorateur/StrictDecorator\";\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {HtmlDisplay} from \"../../classes/facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../../classes/singleton/htmlBalise\";\nimport {Router} from \"@angular/router\";\nimport {AverageDecorator} from \"../../classes/decorateur/AverageDecorator\";\nimport {MajabsDecorator} from \"../../classes/decorateur/MajabsDecorator\";\n\n/**\n * Class that manages game display\n * @implements AfterViewInit\n * @implements OnInit\n */\n@Component({\n  selector: 'game-component',\n  templateUrl: './game-component.component.html',\n  styleUrls: ['./game-component.component.scss']\n})\nexport class GameComponentComponent implements AfterViewInit, OnInit {\n\n  /**\n   * Class constructor\n   * @param dataService {GameOptionServiceService} Contains data to start the game\n   * @param router {Router} site router\n   */\n  constructor(private dataService: GameOptionServiceService, private router: Router) {\n  }\n\n  /**\n   * Game data\n   */\n  game: Game | undefined;\n\n  /**\n   * Class to display elements on the page\n   */\n  htmlDisplay: HtmlDisplay | undefined;\n\n  /**\n   * List of available notes\n   */\n  listValue = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n\n  /**\n   * Singleton containing andlocations for HTML elements\n   */\n  balise: HtmlBalise | undefined;\n\n  /**\n   * If the bare is open\n   */\n  opened = false;\n\n  /**\n   * Standar value\n   */\n  standarValue: string = \"\"\n  /**\n   * Backlog\n   */\n  backlogValue: string = \"\"\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Function that starts the game after the page has loaded\n   */\n  ngAfterViewInit(): void {\n    this.balise = HtmlBalise.getInstance();\n    this.balise.playerButton.style.display = 'none';\n    this.htmlDisplay = new HtmlDisplay();\n    this.game = new GameConcret();\n    if (this.getMode() == \"strict\") this.game = new StrictDecorator(this.game);\n    else if (this.getMode() == \"moyenne\") this.game = new AverageDecorator(this.game);\n    else if (this.getMode() == \"majabs\") this.game = new MajabsDecorator(this.game);\n    else this.game = new StrictDecorator(this.game)\n    this.setPlayers()\n\n    if (this.isContinue()) {\n      this.setBacklogNote()\n      this.game.continueGame(this.getDefaultValue(), this.getActuelLog());\n\n    } else {\n      this.setBacklog()\n      this.game.chooseDefaultValue();\n    }\n  }\n\n  /**\n   * Get Game Mode\n   */\n  getMode(): string {\n    let mode = \"strict\"\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Mode')) {\n            mode = data[key];\n          }\n        });\n      }\n    });\n    return mode\n  }\n\n  /**\n   * Are we back in the game\n   */\n  isContinue(): boolean {\n    let cont = false;\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith(\"Default\")) {\n            cont = true;\n          }\n        })\n      }\n    })\n    return cont;\n  }\n\n  /**\n   * Set Player in game\n   */\n  setPlayers() {\n    let players: { [key: number]: string } = {}\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Player')) {\n            const playerNumber = parseInt(key.replace('Player', ''), 10);\n            players[playerNumber] = data[key];\n          }\n        });\n      } else {\n        players[1] = \"Michel\";\n        players[2] = \"Patrick\";\n      }\n    });\n    this.game?.setPlayers(players)\n  }\n\n  /**\n   * Set Backlog Data\n   */\n  setBacklog() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = 1;\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = -1;\n        backlogData[\"Boutton Quiter\"] = -1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Get Note\n   * @param id Id of the player who set the note\n   */\n  getNote(id: number): number {\n    let n = 0\n\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Note' + id)) {\n          n = data[key];\n        }\n      })\n    })\n\n    return n\n  }\n\n  /**\n   * retrieves the function currently noted\n   */\n  getActuelLog(): number {\n    let n = 0;\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('actualLog')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Get default value\n   */\n  getDefaultValue(): string {\n    let n = \"\";\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Default')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Add a not to the Backlog\n   */\n  setBacklogNote() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = this.getNote(parseInt(key.match(/\\d+/)?.[0] || ''));\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Function that starts when a button is pressed\n   * @param id function identifier\n   */\n  selectButton(id: string) {\n    this.game?.playerPushButton(id)\n  }\n\n  /**\n   * Function that starts when the player presses the button continue\n   */\n  valideStage() {\n    if (this.game?.setupDefaultValue()) {\n      const valueElement = document.getElementById(\"stage1\") as HTMLInputElement;\n      if (valueElement.value != \"\") {\n        this.game?.setDefaultValue(valueElement.value)\n      }\n    } else {\n\n      if (this.game?.isDownload()) {\n        this.game?.creatAndDownloadJSON();\n        this.router.navigateByUrl('/').then(r => true);\n      } else {\n        if (this.game?.isRetry()) {\n          this.game?.setActualPlayerTurn(1);\n          this.game?.lunchStage();\n        } else {\n          if (this.game != null) {\n            if (this.game.getActualStage()  {\n        if(n \n    \n\n    \n        \n  \n    \n      clear\n    \n    \n       Résumé \n      Standard value : {{standarValue}}\n      {{backlogValue}}\n    \n  \n  \n    \n\n      \n        \n        \n\n        \n           menu\n        \n      \n\n      \n\n      \n\n      \n\n      \n        \n      \n\n\n      \n        \n          local_cafe\n           {{ i }}\n        \n      \n\n      \n      \n\n\n      \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./game-component.component.scss\n                \n                /* This is a div that contain everything and takes all the page. */\n.container {\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n\n/* The div that contains the title, teh actual task and the button to open the sidenav. */\n.header {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n}\n\n\n/* Here we choose the style for the display of the actual task, the title and the standard value. */\n#textToShow, #StandardValue, #ActualTask {\n  color: white;\n  text-align: center;\n}\n\n#textToShow {\n  grid-column: 1/2;\n  grid-row: 1;\n  text-align: center;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.5em;\n  padding: 10px 0;\n  border-radius: 2.5em;\n  margin: 0 20% 0 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-shadow: 0 0 20px #0fa, 0 0 120px #0fa;\n  color: transparent;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#StandardValue {\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n#ActualTask {\n  grid-column: 3 / 10;\n  grid-row: 1;\n  text-align: center;\n  background-image: url(\"../../../assets/images/hypnotic.jpg\");\n  background-size: 100%;\n  border-radius: 2em;\n  padding: 10px 0;\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  font-family: 'Press Start 2P', serif;\n  min-height: 80px;\n  min-width: 800px;\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  justify-content: center;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#endMessage, #gameModeMessage{\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  text-align: center;\n}\n\n\n/* It's here that we style all things about the sidenav. */\nmat-sidenav-container {\n  height: 100%;\n  background: none;\n}\n\nmat-sidenav {\n  width: 300px;\n  padding: 10px;\n}\n\n.header_sidenav {\n  grid-column: 11;\n  grid-row: 1;\n  transform: scale(1.2);\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: white;\n  padding: 0 10px 100px 0;\n  width: 90%;\n  text-align: right;\n\n  &:active {\n    color: #797777;\n  }\n}\n\n.cross {\n  background: none;\n  color: red;\n  border: none;\n  cursor: pointer;\n\n  &:active {\n    color: #730505;\n  }\n}\n\n\n/* It's the div that contains every card the player can choose. With all the style that came with his children. */\n#PlayerButton {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-button {\n  width: 150px;\n  height: 210px;\n  background-image: url(\"../../../assets/images/card.jpg\");\n  background-size: 95%;\n  filter: brightness(0.8);\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  margin-right: -50px;\n  border-radius: 0.3rem;\n  cursor: url('../../../assets/images/hand.png'), auto;\n  position: relative;\n  z-index: 1;\n  transition: margin-right 0.3s ease, top 0.3s ease;\n\n  &:hover {\n    margin-right: 0;\n    top: -50px;\n  }\n\n  &:active {\n    transform: scale(0.85);\n  }\n}\n\n.card-button_label {\n  width: auto;\n  height: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-shadow: 0 0 7px #0fa, 0 0 120px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 2.5em;\n}\n\n.card-button_icon {\n  height: 210px;\n  text-shadow: rgb(0, 255, 170) 0.1px 0.2px 6px;\n  color: rgb(255, 255, 255);\n  font-size: 3.2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n/* Here is the style of the div that contains the input and the input itself. */\n.input-group {\n  width: 35em;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n\n  &__input {\n    height: calc(1em + 1.6em + 0.5em);\n    width: 100%;\n\n    background-image: linear-gradient(#e3e3e3, #e3e3e3),\n    linear-gradient(120deg, #1beabd 0%, #0ff 50%, #20125f 100%);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n    background-size: 200% 100%;\n    color: #000000;\n\n    line-height: 1;\n    outline: none;\n    padding: 0 1em;\n    font-family: 'Press Start 2P', serif;\n\n    border: 0.25em solid transparent;\n    border-radius: 1.8em;\n\n    &:focus {\n      box-shadow: 0 0 0 0 #fff,\n      3px -3px 30px #1beabd,\n      -3px 3px 30px #10abff;\n    }\n  }\n}\n\n::placeholder {\n  color: #8d8d8d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear               Résumé       Standard value : {{standarValue}}      {{backlogValue}}                                                     menu                                                                            local_cafe           {{ i }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConcret.html":{"url":"classes/GameConcret.html","title":"class - GameConcret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConcret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/GameConcret.ts\n        \n\n\n            \n                Description\n            \n            \n                Class containing all game information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualFunctionInBacklog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                bSetupDefaultValue\n                            \n                            \n                                defaultValue\n                            \n                            \n                                Players\n                            \n                            \n                                PlayersNote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                continueGame\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setStage\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualFunctionInBacklog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:44\n                        \n                    \n\n            \n                \n                    Which backlog function is being written down\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:29\n                        \n                    \n\n            \n                \n                    Backlog list with associated rating\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bSetupDefaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:34\n                        \n                    \n\n            \n                \n                    Has the standard value been defined?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:39\n                        \n                    \n\n            \n                \n                    Standard value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:21\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersNote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:25\n                        \n                    \n\n            \n                \n                    List of players in the game with the notes they have applied\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:148\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:14\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:220\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:96\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:125\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:180\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:118\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:163\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:155\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:111\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:103\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:139\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:213\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:187\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:172\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:89\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:133\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:59\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:81\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:50\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:229\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:73\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\n\n/**\n * Class containing all game information\n * @implements Game\n */\nexport class GameConcret implements Game{\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void {\n      throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * List of players in the game\n   */\n  Players: { [key: number]: string} = {};\n  /**\n   * List of players in the game with the notes they have applied\n   */\n  PlayersNote: { [key : string]: string } = {};\n  /**\n   * Backlog list with associated rating\n   */\n  BacklogData: { [key : string]: number } = {};\n\n  /**\n   * Has the standard value been defined?\n   */\n  bSetupDefaultValue = true;\n\n  /**\n   * Standard value\n   */\n  defaultValue = \"\";\n\n  /**\n   * Which backlog function is being written down\n   */\n  actualFunctionInBacklog : number = 0;\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [p: number]: string }): void {\n    this.Players = players\n    console.log(this.Players);\n  }\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key : string]: number }){\n    this.BacklogData = BacklogData\n  }\n\n  /**\n   * @ignore\n   */\n  chooseDefaultValue(): void {\n  }\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean {\n    return this.bSetupDefaultValue;\n  }\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void {\n    this.defaultValue = value\n    this.bSetupDefaultValue = false;\n  }\n\n  /**\n   * Next step function\n   */\n  nextStage(){\n    this.actualFunctionInBacklog++;\n  }\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number {\n    return this.actualFunctionInBacklog;\n  }\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number {\n    return Object.keys(this.Players).length;\n  }\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string {\n    return this.Players[key];\n  }\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string {\n    return this.defaultValue;\n  }\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [p: string]: number } {\n    return this.BacklogData;\n  }\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void {\n  }\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [p: number]: string } {\n    return this.Players;\n  }\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value : string, key : string) : void {\n    this.PlayersNote[key] = value;\n  }\n\n  /**\n   * Return to note list\n   */\n  getNotes() : { [key : string]: string }{\n    return this.PlayersNote;\n  }\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key : string) : string{\n    return this.PlayersNote[key];\n  }\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key : string, value : number) : void{\n    this.BacklogData[key] = value;\n  }\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number{\n    return this.BacklogData[key];\n  }\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean {\n    return false;\n  }\n\n  /**\n   * @ignore\n   * @param n\n   */\n  setActualPlayerTurn(n: number): void {\n  }\n\n  /**\n   * @ignore\n   */\n  end(): void {\n  }\n\n  /**\n   * @ignore\n   */\n  lunchStage(): void {\n  }\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean {\n    return false;\n  }\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON(): { [p: string]: any } {\n    const test : { [p: string]: any } = {}\n    return test;\n  }\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void {\n    this.actualFunctionInBacklog = nb;\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameOptionServiceService.html":{"url":"injectables/GameOptionServiceService.html","title":"injectable - GameOptionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameOptionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/gameOptionService/game-option-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for transmitting data from one scene to another in JSON \nThis allows you to send data to save data when creating a scene\nor when resuming a game from the main menu\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(newData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/gameOptionService/game-option-service.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Function for sending data from one component to another\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Data to be passed from one component to another\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:18\n                        \n                    \n\n            \n                \n                    Variable containing the data sent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:23\n                        \n                    \n\n            \n                \n                    Variable used to retrieve sent data\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n/**\n * Service for transmitting data from one scene to another in JSON \n * This allows you to send data to save data when creating a scene\n * or when resuming a game from the main menu\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameOptionServiceService {\n\n  /**\n   * Variable containing the data sent\n   * @private\n   */\n  private data = new BehaviorSubject(null);\n\n  /**\n   * Variable used to retrieve sent data\n   */\n  data$ = this.data.asObservable();\n\n  /**\n   * Function for sending data from one component to another\n   * @param {any} newData Data to be passed from one component to another\n   * @return {void}\n   */\n  setData(newData: any): void {\n    this.data.next(newData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlBalise.html":{"url":"classes/HtmlBalise.html","title":"class - HtmlBalise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlBalise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/singleton/htmlBalise.ts\n        \n\n\n            \n                Description\n            \n            \n                class singleton which contains the html tags to be modified\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearInstance\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:9\n                        \n                    \n\n            \n                \n                    variable containing singleton class instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        clearInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:49\n                        \n                    \n\n\n            \n                \n                        Function to empty the instance to create a new one\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:39\n                        \n                    \n\n\n            \n                \n                        Function to retrieve class instance\n\n\n                        \n                            Returns :         HtmlBalise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HtmlBalise{\n  /**\n   * variable containing singleton class instance\n   * @private\n   */\n  private static instance: HtmlBalise | null = null;\n\n\n  /** @ignore */ stValue : HTMLElement\n  /** @ignore */ task : HTMLElement\n  /** @ignore */ endMessage : HTMLElement\n  /** @ignore */ title : HTMLDivElement\n  /** @ignore */ playerButton : HTMLDivElement\n  /** @ignore */ validateButton : HTMLButtonElement\n  /** @ignore */ finishButton : HTMLElement;\n  /** @ignore */ gameModeMessage : HTMLDivElement;\n  /** @ignore */ inputValue : HTMLInputElement;\n\n  /** @ignore */\n  private constructor() {\n    this.stValue = document.getElementById(\"StandardValue\") as HTMLElement\n    this.task = document.getElementById(\"ActualTask\") as HTMLElement\n    this.endMessage = document.getElementById(\"endMessage\") as HTMLElement\n    this.title = document.getElementById(\"textToShow\") as HTMLDivElement\n    this.playerButton = document.getElementById(\"PlayerButton\") as HTMLDivElement;\n    this.validateButton = document.getElementById(\"validateButton\") as HTMLButtonElement;\n    this.finishButton = document.getElementById(\"finishButton\") as HTMLElement;\n    this.gameModeMessage = document.getElementById(\"gameModeMessage\") as HTMLDivElement;\n    this.inputValue = document.getElementById(\"stage1\") as HTMLInputElement;\n  }\n\n  /**\n   * Function to retrieve class instance\n   * @return {HtmlBalise}\n   */\n  static getInstance(): HtmlBalise {\n    if (!HtmlBalise.instance){\n      HtmlBalise.instance = new HtmlBalise();\n    }\n    return HtmlBalise.instance;\n  }\n\n  /**\n   * Function to empty the instance to create a new one\n   */\n  static clearInstance(): void{\n    HtmlBalise.instance = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlDisplay.html":{"url":"classes/HtmlDisplay.html","title":"class - HtmlDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/facade/HtmlDisplay.ts\n        \n\n\n            \n                Description\n            \n            \n                Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                addHtmlElement\n                            \n                            \n                                addText\n                            \n                            \n                                clearHTML\n                            \n                            \n                                displayHTML\n                            \n                            \n                                showText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/facade/HtmlDisplay.ts:12\n                        \n                    \n\n            \n                \n                    Variable that contains everything that will be added to the DOM in HTML format\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(id: string, classe: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:63\n                        \n                    \n\n\n            \n                \n                        Function for adding a class to an HTML object by passing its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the element to which you want to add a class\n\n                                            \n                                        \n                                        \n                                                classe\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    name of the class to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHtmlElement\n                        \n                    \n                \n            \n            \n                \naddHtmlElement(type: string, id?: string, additionalValue?: literal type, closeBalise: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:40\n                        \n                    \n\n\n            \n                \n                        Function that adds an HTML tag with its various parameters to the content variable.\nExample ://Example of use\nconst balise = HtmlBalise.getInstance()\nlet html = new HtmlDisplay()\nhtml.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\nhtml.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"div\"\n                                            \n\n                                            \n                                                    type of HTML tag to be placed in the DOM\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    id of element to be added to DOM\n\n                                            \n                                        \n                                        \n                                                additionalValue\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    list containing the add valuers of the add element type of [key : string] : string\n\n                                            \n                                        \n                                        \n                                                closeBalise\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    defined if the added tag is a closing tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addText\n                        \n                    \n                \n            \n            \n                \naddText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:74\n                        \n                    \n\n\n            \n                \n                        Function to add a text to the content, not an HTML tag but a text to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text to be added to content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHTML\n                        \n                    \n                \n            \n            \n                \nclearHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:91\n                        \n                    \n\n\n            \n                \n                        Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element to be emptied\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayHTML\n                        \n                    \n                \n            \n            \n                \ndisplayHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:82\n                        \n                    \n\n\n            \n                \n                        Function for adding content to an HTML object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element in which we'll add all the content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showText\n                        \n                    \n                \n            \n            \n                \nshowText(label: HTMLElement, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:20\n                        \n                    \n\n\n            \n                \n                        Function that places a text in an HTML DOM element\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    reference to an HTML element to which a text has been added\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text which will be placed in an HTML component\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {connect} from \"rxjs\";\nimport transformJavaScript from \"@angular-devkit/build-angular/src/tools/esbuild/javascript-transformer-worker\";\n\n/**\n * Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n */\nexport class HtmlDisplay{\n\n  /**\n   * Variable that contains everything that will be added to the DOM in HTML format\n   */\n  public content = \"\";\n\n\n  /**\n   * Function that places a text in an HTML DOM element\n   * @param label {HTMLElement} reference to an HTML element to which a text has been added\n   * @param text {string} text which will be placed in an HTML component\n   */\n  showText(label : HTMLElement, text : string){\n    label.innerText = text;\n  }\n\n  /**\n   * Function that adds an HTML tag with its various parameters to the content variable.\n   *\n   * @example\n   * //Example of use\n   * const balise = HtmlBalise.getInstance()\n   * let html = new HtmlDisplay()\n   * html.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\n   * html.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n   *\n   *\n   * @param type {string} type of HTML tag to be placed in the DOM\n   * @param id {string} id of element to be added to DOM\n   * @param additionalValue {{[string] : string}} list containing the add valuers of the add element type of [key : string] : string\n   * @param closeBalise {boolean} defined if the added tag is a closing tag\n   */\n  addHtmlElement(type : string = \"div\", id? : string, additionalValue? : {[key : string] : string}, closeBalise : boolean = false){\n    if(!closeBalise) {\n      this.content += \" {\n          this.content += key + \"='\" + additionalValue[key] + \"' \"\n        });\n      }\n\n      this.content += \">\"\n    }else{\n      this.content += \"\";\n    }\n  }\n\n  /**\n   * Function for adding a class to an HTML object by passing its ID\n   * @param id {string} id of the element to which you want to add a class\n   * @param classe {string} name of the class to be added\n   */\n  addClass(id: string, classe: string){\n    const element = document.getElementById(id);\n    if(element == null) return\n    console.log(\"aa\")\n    element.classList.add(classe);\n  }\n\n  /**\n   * Function to add a text to the content, not an HTML tag but a text to be displayed.\n   * @param text {string} text to be added to content\n   */\n  addText(text : string){\n    this.content += text;\n  }\n\n  /**\n   * Function for adding content to an HTML object\n   * @param element {HTMLElement} DOM element in which we'll add all the content\n   */\n  displayHTML(element : HTMLElement){\n    element.innerHTML = this.content;\n    this.content = \"\"\n  }\n\n  /**\n   * Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n   * @param element {HTMLElement} DOM element to be emptied\n   */\n  clearHTML(element : HTMLElement){\n    element.innerHTML = \"\";\n    this.content = \"\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationButtonComponent.html":{"url":"components/InformationButtonComponent.html","title":"component - InformationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-button/information-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create an information button to explain the rules and the goal of this website.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-button\n            \n\n\n\n            \n                styleUrls\n                ./information-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/information-button/information-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/information-button/information-button.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\n\n/**\n * Component that create an information button to explain the rules and the goal of this website.\n */\n@Component({\n  selector: 'information-button',\n  templateUrl: './information-button.component.html',\n  styleUrls: ['./information-button.component.scss']\n})\n\nexport class InformationButtonComponent {\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n}\n\n    \n\n    \n        \n  help\n\n\n    \n\n    \n                \n                    ./information-button.component.scss\n                \n                .information_button {\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n\n  &:hover {\n    cursor: pointer;\n    color: #3146d3;\n  }\n}\n\n.icon-display {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  help'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-menu/main-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n\n\n            \n                styleUrls\n                ./main-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualLog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                defaultValue\n                            \n                            \n                                lang\n                            \n                            \n                                mode\n                            \n                            \n                                players\n                            \n                            \n                                popupIsOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changLang\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                openInformation\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main-menu/main-menu.component.ts:19\n                            \n                        \n\n                \n                    \n                            Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changLang\n                        \n                    \n                \n            \n            \n                \nchangLang(lang: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Language change function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    translation language\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:41\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Function to save data from the input JSON file as a variable for use in the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    con contains the JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInformation\n                        \n                    \n                \n            \n            \n                \nopenInformation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Opens or closes popup window when information button is clicked\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Function to send previously recorded data to game-option-service for in-game use\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:73\n                        \n                    \n\n            \n                \n                    First Backlog not yet graded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:57\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:53\n                        \n                    \n\n            \n                \n                    Data sent to the game in JSON format\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:65\n                        \n                    \n\n            \n                \n                    Standard value used\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:36\n                        \n                    \n\n            \n                \n                    Site language\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:61\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:69\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popupIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Defines whether the popup is already displayed or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {TranslateModule, TranslateService} from \"@ngx-translate/core\";\nimport {setUpLocationSync} from \"@angular/router/upgrade\";\nimport {NgModelGroup} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {MatIcon, MatIconModule} from \"@angular/material/icon\";\nimport {AppComponent} from \"../../app.component\";\n\n/**\n * Component that create page for the main menu of the website. We can choose here if we want to start a\n * new game or load a game from a json file.\n */\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit{\n\n  /**\n   * Component that create page for the main menu of the website. We can choose here if we want to start a\n   * new game or load a game from a json file.\n   */\n  constructor(private dataService: GameOptionServiceService, private translateService:TranslateService) {\n  }\n\n  /**\n   * Defines whether the popup is already displayed or not\n   */\n  popupIsOpen = false\n\n  /**\n   * Site language\n   */\n  lang = \"\"\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n      const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n      button.style.display = \"none\";\n      const popup = document.getElementById(\"popup\") as HTMLDivElement;\n      popup.style.display = \"none\";\n\n      this.lang = localStorage.getItem('lang') || 'en';\n  }\n\n  /**\n   * Data sent to the game in JSON format\n   */\n  Data: { [Type: string]: string} = {}\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: { [key : string]: number } = {};\n  /**\n   * Select game mode\n   */\n  mode = \"\"\n  /**\n   * Standard value used\n   */\n  defaultValue = \"\"\n  /**\n   * List of players in the game\n   */\n  players : string[] = []\n  /**\n   * First Backlog not yet graded\n   */\n  actualLog = 0;\n\n  /**\n   * Function to save data from the input JSON file as a variable for use in the game\n   * @param event {event} con contains the JSON file\n   */\n  onFileSelected(event: any = 0){\n    this.players = [];\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n      // Extract names from JSON using keys\n\n      this.mode = jsonData.mode\n      this.defaultValue = jsonData.default\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          for (const itemName in item) {\n            if (item.hasOwnProperty(itemName) && itemName !== 'work') {\n              this.BacklogData[itemName] = item[itemName] as number\n            }\n          }\n        }\n      }\n\n      for(const key in jsonData.Players){\n        if (jsonData.Players.hasOwnProperty(key)) {\n          const item : string = jsonData.Players[key];\n          this.players.push(item);\n        }\n      }\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          if (!item.work) {\n            this.actualLog = parseInt(key) - 1;\n            break;\n          }\n        }\n      }\n\n      console.log(this.mode, this.defaultValue, this.BacklogData, this.players, this.actualLog)\n\n      setTimeout(() => {\n        const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n        button.style.display = \"flex\"\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n\n  /**\n   * Function to send previously recorded data to game-option-service for in-game use\n   */\n  sendData(){\n    Object.keys(this.players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + (playerKey + 1);\n      this.Data[strKey] = this.players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n    this.Data[\"Default\"] = this.defaultValue;\n    this.Data[\"actualLog\"] = (this.actualLog + 1) + \"\";\n\n    Object.keys(this.BacklogData).forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n      this.Data[\"Note\" + index] = this.BacklogData[item] + \"\"\n    });\n\n    console.log(\"data\", this.Data);\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * Opens or closes popup window when information button is clicked\n   */\n  openInformation(){\n    const popup = document.getElementById(\"popup\") as HTMLDivElement;\n    if(this.popupIsOpen) popup.style.display = \"none\";\n    else popup.style.display = \"block\";\n    this.popupIsOpen = !this.popupIsOpen;\n  }\n\n  /**\n   * Language change function\n   * @param lang translation language\n   */\n  changLang(lang:any){\n    const selectedLanguage = lang.target.value;\n\n    localStorage.setItem('lang', selectedLanguage);\n    this.translateService.use(selectedLanguage);\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n    English\n    Français\n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n    \n    {{'JSON_file' | translate}}\n  \n\n\n  {{'GameRules' | translate}}\n  \n    {{'GameRules1' | translate}}\n    {{'GameRules2' | translate}}\n    {{'GameRules3' | translate}}\n    {{'GameRules4' | translate}}\n    {{'GameRules5' | translate}}\n    {{'GameRules6' | translate}}\n  \n\n\n    \n\n    \n                \n                    ./main-menu.component.scss\n                \n                .container_button {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 40%;\n}\n\n.container_info-button {\n  height: 25%;\n  padding: 80px 15px 0 35px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\nstart-button {\n  transform: scale(1.5);\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    font-family: 'Press Start 2P', serif;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n.container_bottom{\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  justify-content: center;\n  height: 20%;\n}\n\n#popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #fff;\n  padding: 20px;\n  border: 1px solid #ccc;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          English    Français                        {{\\'JSON_file\\' | translate}}    {{\\'GameRules\\' | translate}}      {{\\'GameRules1\\' | translate}}    {{\\'GameRules2\\' | translate}}    {{\\'GameRules3\\' | translate}}    {{\\'GameRules4\\' | translate}}    {{\\'GameRules5\\' | translate}}    {{\\'GameRules6\\' | translate}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCardComponent.html":{"url":"components/PlayerCardComponent.html","title":"component - PlayerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-card/player-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a card for the player and their name, to have a better display\nin the .\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-card\n            \n\n\n\n            \n                styleUrls\n                ./player-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                i\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-card/player-card.component.ts:17\n                            \n                        \n                \n                    \n                        Value of the current player.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * Component that create a card for the player and their name, to have a better display\n * in the .\n */\n@Component({\n  selector: 'player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.scss']\n})\n\nexport class PlayerCardComponent {\n  /**\n   * Value of the current player.\n   */\n  @Input() i: number = 0;\n}\n\n    \n\n    \n        \n   {{'player' | translate}} {{i}} \n  \n\n\n    \n\n    \n                \n                    ./player-card.component.scss\n                \n                .card {\n  display: flex;\n  background-image: url(\"../../../assets/images/player-card-background.jpg\");\n  background-size: 50%;\n  flex-direction: column;\n  border-radius: 0.3rem;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem;\n  border: 1px solid #e0e0e0;\n  transition: 0.8s;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  width: 160px;\n\n  &:hover {\n    border: 1px solid #b0b0b0;\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.35);\n  }\n}\n\nh1 {\n  color: #fff;\n  text-shadow:\n    0 0 7px #fff,\n    0 0 10px #fff,\n    0 0 21px #fff,\n    0 0 42px #0fa,\n    0 0 82px #0fa,\n    0 0 92px #0fa,\n    0 0 102px #0fa,\n    0 0 151px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.2em;\n}\n\ninput {\n  background: #001546;\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 0.5em;\n  border: 1px solid white;\n  border-radius: 0.3rem;\n  padding: 7px 0 7px 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{\\'player\\' | translate}} {{i}}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponentComponent.html":{"url":"components/SettingsComponentComponent.html","title":"component - SettingsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings-component/settings-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the page where the user will choose every option for his game.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-component\n            \n\n\n\n            \n                styleUrls\n                ./settings-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                mode\n                            \n                            \n                                playerMax\n                            \n                            \n                                playerNumber\n                            \n                            \n                                Players\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayerName\n                            \n                            \n                                changeMod\n                            \n                            \n                                getSliderValue\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlayerName\n                        \n                    \n                \n            \n            \n                \naddPlayerName(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Changes the name of the player whose name has just been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    input text value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMod\n                        \n                    \n                \n            \n            \n                \nchangeMod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Change game mode\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    value of check box\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSliderValue\n                        \n                    \n                \n            \n            \n                \ngetSliderValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Modifies the number of players by the slider value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    slider value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Changes backlog values based on imported JSON file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Sends data to the game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:26\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:21\n                        \n                    \n\n            \n                \n                    Data that will be passed to the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"strict\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:36\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:31\n                        \n                    \n\n            \n                \n                    Maximum number of players per game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:41\n                        \n                    \n\n            \n                \n                    Current number of players\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of players\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create the page where the user will choose every option for his game.\n */\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings-component.component.html',\n  styleUrls: ['./settings-component.component.scss']\n})\n\nexport class SettingsComponentComponent {\n  /** @ignore */\n  constructor(private dataService: GameOptionServiceService) {\n  }\n\n  /**\n   * Data that will be passed to the game\n   */\n  Data: { [Type: string]: string } = {}\n\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: string[] = [];\n\n  /**\n   * Maximum number of players per game\n   */\n  playerMax: number = 15;\n\n  /**\n   * Select game mode\n   */\n  mode = \"strict\";\n\n  /**\n   * Current number of players\n   */\n  playerNumber: number = 2;\n  /**\n   * List of players\n   */\n  Players: { [key: number]: string } = {}\n  /** @ignore */playersNb: number[] = [1, 2]\n\n  /**\n   * Modifies the number of players by the slider value\n   * @param event slider value\n   */\n  getSliderValue(event: any = 0) {\n    this.playerNumber = event.target.value;\n    this.playersNb = []\n    for (let i = 1; i  0) {\n      const placeholder = event.target.placeholder;\n      const match = placeholder.replace(/\\D/g, \"\");\n      const id = parseInt(match);\n      this.Players[id] = event.target.value.substring(0, 7);\n      console.log(this.Players);\n    }\n  }\n\n  /**\n   * Change game mode\n   * @param event value of check box\n   */\n  changeMod(event: any = 0) {\n    this.mode = event.target.value;\n    console.log(this.mode);\n  }\n\n  /**\n   * Changes backlog values based on imported JSON file\n   * @param event JSON file\n   */\n  onFileSelected(event: any = 0) {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n\n      // Extract names from JSON using keys\n      const namesArray: string[] = [];\n      for (const key in jsonData) {\n        if (jsonData.hasOwnProperty(key) && jsonData[key]?.name) {\n          namesArray.push(jsonData[key].name);\n        }\n      }\n      this.BacklogData = namesArray;\n      setTimeout(() => {\n        console.log(this.BacklogData);\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n  /**\n   * Sends data to the game\n   */\n  sendData(){\n    console.log(\"test\");\n    Object.keys(this.Players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + playerKey;\n      this.Data[strKey] = this.Players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n\n    this.BacklogData.forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n    });\n\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * @ignore\n   * @protected\n   */\n  protected readonly console = console;\n}\n\n    \n\n    \n        \n  \n    \n      \n         {{'NbPlayer' | translate}}\n        \n        {{ playerNumber }}\n      \n\n      \n        \n      \n    \n\n    \n      \n         Game mode\n        \n          \n            \n            Strict\n            \n            \n          \n          \n            \n            Absolute Majority \n            \n            \n          \n          \n            \n            Average\n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n      Chose a json file\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-component.component.scss\n                \n                form {\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.form_top {\n  display: flex;\n  flex-direction: row;\n  height: 82%;\n  width: 100%;\n}\n\n.top_left {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 80%;\n}\n\n.top_right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  width: 20%;\n}\n\n.left_number-players {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20%;\n}\n\n.left_players {\n  display: flex;\n  width: 100%;\n  height: 80%;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.right_style-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & h3 {\n    font-family: 'Press Start 2P', serif;\n    font-size: 1.4em;\n    margin: 0;\n  }\n}\n\n.bottom_input-json {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & input {\n    color: white;\n    font-family: 'Press Start 2P', serif;\n  }\n}\n\n\n.form_bottom {\n  display: flex;\n  width: 100%;\n  height: 25%;\n  margin-top: 15px;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n\nul {\n  list-style-type: none;\n}\n\nli {\n  position: relative;\n  padding: 10px 10px 10px 40px;\n  height: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n\n  &:active {\n    color: #3351ff !important;\n  }\n}\n\n.style-game_label:before {\n  content: \"\";\n  width: 15px;\n  height: 15px;\n  background: #fff;\n  position: absolute;\n  left: 7px;\n  top: calc(50% - 13px);\n  box-sizing: border-box;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"] {\n  opacity: 0;\n  -webkit-appearance: none;\n  display: inline-block;\n  vertical-align: middle;\n  z-index: 100;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 30px;\n  position: absolute;\n  left: 0;\n  top: calc(50% - 15px);\n  cursor: pointer;\n}\n\n.circle {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  left: -3px;\n  top: 2px;\n  border: 5px solid #fff;\n  opacity: 0;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked ~ .circle {\n  position: absolute;\n  opacity: 1;\n  animation-name: explode;\n  animation-duration: 0.350s;\n}\n\n@keyframes explode {\n  0% {\n    opacity: 0;\n    transform: scale(4);\n  }\n  60% {\n    opacity: 1;\n    transform: scale(0.5);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{\\'NbPlayer\\' | translate}}                {{ playerNumber }}                                                 Game mode                                          Strict                                                                    Absolute Majority                                                                     Average                                                                        Chose a json file                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShopComponentComponent.html":{"url":"components/ShopComponentComponent.html","title":"component - ShopComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShopComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shop-component/shop-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                shop-component\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shop-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shop-component.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changSelected\n                            \n                            \n                                selectSkin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changSelected\n                        \n                    \n                \n            \n            \n                \nchangSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shop-component/shop-component.component.ts:43\n                        \n                    \n\n\n            \n                \n                        Changer l'affichage du skin selectioner\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSkin\n                        \n                    \n                \n            \n            \n                \nselectSkin(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shop-component/shop-component.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Selectioner un skin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    click element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {RouterLink} from \"@angular/router\";\n\n@Component({\n  selector: 'shop-component',\n  standalone: true,\n  imports: [\n    TranslateModule,\n    RouterLink\n  ],\n  templateUrl: './shop-component.component.html',\n  styleUrl: './shop-component.component.scss'\n})\nexport class ShopComponentComponent implements OnInit{\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    let elements = document.getElementsByClassName(\"skinbutton\") as HTMLCollectionOf\n    for(let i = 0; i \n    for(let i = 0; i \n    \n\n    \n        \n\n\n\n\n     {{\"home\" | translate}} \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{\"home\" | translate}} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShopComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartButtonComponent.html":{"url":"components/StartButtonComponent.html","title":"component - StartButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/start-button/start-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a configurable button with some specific style, the only change possible\nis the link, the color of the background and the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                start-button\n            \n\n\n\n            \n                styleUrls\n                ./start-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./start-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captionBackground\n                            \n                            \n                                captionColor\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                pushableBackground\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captionBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:21\n                            \n                        \n                \n                    \n                        Variable to change the background color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        captionColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:26\n                            \n                        \n                \n                    \n                        Variable to change the text color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        link\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:36\n                            \n                        \n                \n                    \n                        Variable to change the link of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:31\n                            \n                        \n                \n                    \n                        Variable to change the text on a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pushableBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable to change the color under a button when it's called in another component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:41\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n/**\n * Component that create a configurable button with some specific style, the only change possible\n * is the link, the color of the background and the text.\n */\n@Component({\n  selector: 'start-button',\n  templateUrl: './start-button.component.html',\n  styleUrls: ['./start-button.component.scss']\n})\nexport class StartButtonComponent implements OnInit{\n  /**\n   * Variable to change the color under a button when it's called in another component.\n   */\n  @Input() pushableBackground: string = '';\n\n  /**\n   * Variable to change the background color of a button when it's called in another component.\n   */\n  @Input() captionBackground: string = '';\n\n  /**\n   * Variable to change the text color of a button when it's called in another component.\n   */\n  @Input() captionColor: string = '';\n\n  /**\n   * Variable to change the text on a button when it's called in another component.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Variable to change the link of a button when it's called in another component.\n   */\n  @Input() link: string = '';\n\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n\n  }\n}\n\n    \n\n    \n        \n   {{ name }} \n\n\n    \n\n    \n                \n                    ./start-button.component.scss\n                \n                .pushable_button {\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n}\n\n.caption_button {\n  display: block;\n  padding: 20px 50px;\n  border-radius: 12px;\n  border: 3px solid white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.7rem;\n  text-shadow: 1px 1px 2px #000000;\n  transform: translateY(-6px);\n}\n\n.caption_button:hover {\n  filter: brightness(90%);\n  color: #c7c7c7 !important;\n}\n\n\n.pushable_button:active .caption_button {\n  transform: translateY(-2px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ name }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title/title.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the title of the website and all the style that come with it, on the main menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pp-title\n            \n\n\n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that create the title of the website and all the style that come with it, on the main menu.\n */\n@Component({\n  selector: 'pp-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n}\n\n    \n\n    \n        \n  \n    PLANNING\n    PLANNING\n  \n  POKER\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Mr+Dafoe&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@900&display=swap');\n\nh1 {\n  position: relative;\n  font-family: 'Exo', serif;\n  font-size: 11em;\n  margin: 0;\n  transform: skew(-15deg);\n  letter-spacing: 0.03em;\n\n  span:first-child {\n    display: block;\n    text-shadow: 0 0 0.1em #8ba2d0, 0 0 0.2em black, 0 0 5em #165ff3;\n    -webkit-text-stroke: 0.06em rgba(black, 0.5);\n  }\n\n  span:last-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-image: linear-gradient(#032d50 25%, #00a1ef 35%, white 50%, #20125f 50%, #8313e7 55%, #ff61af 75%);\n    -webkit-text-stroke: 0.01em #94a0b9;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\nh2 {\n  font-family: 'Mr Dafoe', serif;\n  font-size: 5.5em;\n  margin-left: 3em;\n  color: white;\n  text-shadow: 0 0 0.05em #fff, 0 0 0.2em #281775, 0 0 0.3em #20125f;\n  transform: rotate(-7deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PLANNING    PLANNING    POKER'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/AverageDecorator.ts\n            \n            class\n            AverageDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/Game.ts\n            \n            interface\n            Game\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/GameConcret.ts\n            \n            class\n            GameConcret\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/MajabsDecorator.ts\n            \n            class\n            MajabsDecorator\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/ModeDecorator.ts\n            \n            class\n            ModeDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/StrictDecorator.ts\n            \n            class\n            StrictDecorator\n            \n                100 %\n                (38/38)\n            \n        \n        \n            \n                \n                src/app/classes/facade/HtmlDisplay.ts\n            \n            class\n            HtmlDisplay\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/classes/singleton/htmlBalise.ts\n            \n            class\n            HtmlBalise\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/game-component/game-component.component.ts\n            \n            component\n            GameComponentComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/components/information-button/information-button.component.ts\n            \n            component\n            InformationButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/components/player-card/player-card.component.ts\n            \n            component\n            PlayerCardComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/settings-component/settings-component.component.ts\n            \n            component\n            SettingsComponentComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/shop-component/shop-component.component.ts\n            \n            component\n            ShopComponentComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/components/start-button/start-button.component.ts\n            \n            component\n            StartButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/gameOptionService/game-option-service.service.ts\n            \n            injectable\n            GameOptionServiceService\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.7\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^17.0.7\n        \n            @angular/compiler : ^17.0.7\n        \n            @angular/core : ^17.0.7\n        \n            @angular/forms : ^17.0.7\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^17.0.7\n        \n            @angular/platform-browser-dynamic : ^17.0.7\n        \n            @angular/router : ^17.0.7\n        \n            @angular/upgrade : ^17.0.7\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeface-press-start-2p : ^1.1.13\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanningPokerPP\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nStartButtonComponent \n\nStartButtonComponent \n\nStartButtonComponent  -->\n\nAppModule->StartButtonComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
