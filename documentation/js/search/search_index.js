var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.069,1,0.626]],["body/components/AppComponent.html",[0,0.13,1,1.139,2,1.435,3,0.508,4,0.427,5,1.28,6,1.28,7,1.137,8,1.28,9,0.427,10,2.854,11,1.137,12,1.573,13,1.616,14,3.056,15,1.28,16,2.045,17,1.652,18,3.603,19,1.616,20,4.856,21,1.616,22,4.432,23,0.784,24,1.273,25,1.652,26,0.784,27,0.047,28,1.28,29,1.009,30,0.892,31,3.603,32,0.892,33,3.512,34,2.051,35,2.648,36,0.995,37,2.648,38,0.685,39,0.784,40,0.508,41,0.28,42,1.819,43,3.512,44,1.441,45,1.441,46,1.435,47,1.441,48,3.512,49,3.512,50,3.512,51,1.009,52,1.435,53,1.435,54,1.28,55,1.86,56,1.28,57,1.28,58,0.685,59,0.593,60,1.616,61,0.784,62,1.28,63,1.616,64,0.685,65,1.28,66,0.784,67,1.28,68,1.28,69,0.685,70,1.28,71,0.784,72,0.784,73,1.28,74,1.28,75,1.28,76,0.036,77,0.036]],["title/modules/AppModule.html",[78,1.675,79,1.675]],["body/modules/AppModule.html",[1,1.251,3,0.466,4,0.392,9,0.392,17,1.044,27,0.047,38,1.112,39,0.72,40,0.466,41,0.257,51,0.926,58,1.025,61,1.173,64,1.025,66,1.173,69,1.025,71,1.173,72,1.173,76,0.034,77,0.034,78,1.926,79,3.469,80,1.689,81,1.926,82,3.791,83,3.791,84,3.41,85,2.223,86,2.62,87,2.62,88,2.62,89,2.62,90,2.752,91,4.268,92,3.41,93,2.62,94,2.223,95,3.223,96,3.41,97,3.41,98,4.195,99,3.41,100,2.223,101,3.223,102,3.223,103,3.223,104,2.223,105,4.195,106,3.223,107,2.223,108,2.62,109,1.926,110,2.62,111,4.195,112,3.223,113,4.195,114,3.223,115,2.62,116,1.926,117,3.41,118,2.62,119,1.926,120,3.223,121,3.223,122,2.223,123,3.223,124,2.62,125,4.195,126,3.223,127,4.195,128,3.223]],["title/modules/AppRoutingModule.html",[78,1.675,90,1.469]],["body/modules/AppRoutingModule.html",[0,0.127,3,0.579,4,0.488,9,0.488,27,0.047,38,1.066,39,0.895,40,0.579,41,0.32,58,0.938,59,0.677,64,0.938,69,0.938,76,0.039,77,0.039,80,2.101,85,2.764,90,2.52,96,3.258,97,3.908,108,3.258,109,2.395,110,3.258,115,3.258,116,2.395,117,3.908,118,3.258,119,2.395,129,4.008,130,4.008,131,4.808,132,3.078,133,2.764,134,1.855,135,5.341,136,4.008,137,4.808,138,4.008,139,4.008,140,4.008,141,4.008]],["title/interfaces/Game.html",[59,0.474,142,1.675]],["body/interfaces/Game.html",[3,0.349,4,0.294,9,0.294,23,0.54,26,1.249,27,0.047,28,2.105,30,1.176,32,1.443,36,1.043,40,0.349,59,0.582,76,0.028,77,0.028,142,1.444,143,2.416,144,1.964,145,1.116,146,2.801,147,3.56,148,2.801,149,3.56,150,3.02,151,3.56,152,3.56,153,2.801,154,3.02,155,2.377,156,3.56,157,2.801,158,3.56,159,3.56,160,3.56,161,3.56,162,3.56,163,2.801,164,3.56,165,2.801,166,2.801,167,2.801,168,2.801,169,2.377,170,2.801,171,3.56,172,2.801,173,2.474,174,2.416,175,2.194,176,2.194,177,1.84,178,1.84,179,2.416,180,2.801,181,2.77,182,2.624,183,2.416,184,1.666,185,2.416,186,2.655,187,2.416,188,2.416,189,2.416,190,2.801,191,2.416,192,2.416,193,2.801,194,2.416,195,2.416,196,2.801,197,2.416,198,2.416,199,2.416,200,2.416,201,2.877,202,2.416,203,2.416,204,2.801,205,2.416,206,2.416,207,2.801,208,2.416,209,1.266,210,2.801,211,2.416,212,1.666,213,2.801,214,2.416,215,1.266,216,2.801,217,2.416,218,2.801,219,2.416,220,1.266,221,2.801,222,2.416,223,1.964,224,2.416,225,1.964]],["title/components/GameComponentComponent.html",[0,0.069,58,0.547]],["body/components/GameComponentComponent.html",[0,0.083,1,0.27,2,0.653,3,0.175,4,0.147,5,0.735,6,0.441,7,0.392,8,0.441,9,0.147,12,0.392,13,1.521,14,0.835,15,0.441,16,1.569,17,0.653,19,0.735,21,0.735,23,0.578,24,0.579,25,0.838,26,0.857,27,0.048,28,1.569,29,0.579,30,0.657,32,1.25,35,1.547,36,0.654,38,0.84,39,0.27,40,0.175,41,0.097,42,1.853,44,1.485,45,1.485,46,1.351,47,1.485,51,0.348,52,0.653,53,0.653,54,0.441,55,1.1,56,0.441,57,0.441,58,0.589,59,0.791,60,0.735,61,0.27,62,0.441,63,0.735,64,0.236,65,0.441,66,0.27,67,0.735,68,0.441,69,0.236,70,0.441,71,0.27,72,0.27,73,0.441,74,0.441,75,0.441,76,0.016,77,0.016,119,2.97,133,0.835,134,0.933,145,0.653,154,2.081,155,1.39,169,2.081,173,1.198,175,1.062,176,1.062,177,1.462,178,1.351,182,1.991,201,1.204,209,1.357,212,2.876,215,1.056,220,0.634,226,4.04,227,0.835,228,1.204,229,2.588,230,1.785,231,2.104,232,1.638,233,2.104,234,2.292,235,2.588,236,2.588,237,3.018,238,3.018,239,3.018,240,3.018,241,2.453,242,2.015,243,3.018,244,3.018,245,3.018,246,0.984,247,1.211,248,1.397,249,3.836,250,1.211,251,1.39,252,1.211,253,1.211,254,1.211,255,2.015,256,1.211,257,1.211,258,1.211,259,1.211,260,2.015,261,1.211,262,1.211,263,1.211,264,1.211,265,1.211,266,1.547,267,3.618,268,1.211,269,1.211,270,1.211,271,1.997,272,2.698,273,1.785,274,2.588,275,2.015,276,1.638,277,1.785,278,1.638,279,3.045,280,2.015,281,0.984,282,1.785,283,1.211,284,1.211,285,1.204,286,1.211,287,0.984,288,1.211,289,0.835,290,0.634,291,0.835,292,1.211,293,1.211,294,0.984,295,1.211,296,0.984,297,1.211,298,0.835,299,0.835,300,1.211,301,0.984,302,1.211,303,2.01,304,1.211,305,1.039,306,3.618,307,2.588,308,1.638,309,2.015,310,1.211,311,1.211,312,1.211,313,1.211,314,1.211,315,1.211,316,1.211,317,1.211,318,1.211,319,1.211,320,1.211,321,1.785,322,4.017,323,2.003,324,2.495,325,4.017,326,1.211,327,3.351,328,1.756,329,2.588,330,1.211,331,1.638,332,1.211,333,0.984,334,1.211,335,1.39,336,1.211,337,1.211,338,1.211,339,1.211,340,1.211,341,1.211,342,2.015,343,2.015,344,3.018,345,2.015,346,2.015,347,1.211,348,1.211,349,1.211,350,1.211,351,1.211,352,1.211,353,1.211,354,0.984,355,0.984,356,1.211,357,1.211,358,1.211,359,1.211,360,1.211,361,1.211,362,1.211,363,1.211,364,1.211,365,2.015,366,2.015,367,1.204,368,2.015,369,2.453,370,1.211,371,1.211,372,0.723,373,2.015,374,2.876,375,2.967,376,2.698,377,1.803,378,2.311,379,2.292,380,2.01,381,1.204,382,1.211,383,2.698,384,2.292,385,2.877,386,1.211,387,2.015,388,1.39,389,1.204,390,1.211,391,3.018,392,1.211,393,4.017,394,1.211,395,1.211,396,1.211,397,2.104,398,1.39,399,1.803,400,0.984,401,2.015,402,2.015,403,2.015,404,1.766,405,1.756,406,1.991,407,1.211,408,2.311,409,1.675,410,1.93,411,1.211,412,1.896,413,2.162,414,2.044,415,1.581,416,2.015,417,2.081,418,1.211,419,2.162,420,0.984,421,2.453,422,2.015,423,1.39,424,1.39,425,1.638,426,1.39,427,1.638,428,2.588,429,0.835,430,1.638,431,1.813,432,1.785,433,1.211,434,1.211,435,2.015,436,1.357,437,2.495,438,1.39,439,1.756,440,1.785,441,3.018,442,1.638,443,2.015,444,0.984,445,1.211,446,2.015,447,2.015,448,2.104,449,0.984,450,0.984,451,1.638,452,1.211,453,2.015,454,1.211,455,1.211,456,1.211,457,0.933,458,1.211,459,1.357,460,1.056,461,1.211,462,1.211,463,3.018,464,1.785,465,1.211,466,1.211,467,1.211,468,1.211,469,2.453,470,1.211,471,1.211,472,0.984,473,1.211,474,2.588,475,1.211,476,1.211,477,0.984,478,1.211,479,1.638,480,0.984,481,1.211,482,2.015,483,0.723,484,0.723,485,1.39,486,0.984,487,1.638,488,2.015,489,1.204,490,0.634,491,1.211,492,1.211,493,1.211,494,1.211,495,2.588,496,1.211,497,1.211,498,1.211,499,0.984,500,1.211,501,1.211,502,1.357,503,1.211,504,1.211,505,1.211,506,1.211,507,1.211,508,1.211,509,0.984,510,1.638,511,1.211,512,1.211,513,1.211,514,2.015,515,1.211,516,0.723,517,0.984,518,1.211,519,0.984,520,1.211,521,0.984,522,0.984,523,1.211,524,1.211,525,2.081,526,1.211,527,0.835,528,1.211]],["title/classes/GameConcret.html",[41,0.224,285,1.675]],["body/classes/GameConcret.html",[3,0.281,4,0.237,9,0.237,23,0.435,24,0.844,26,1.248,27,0.048,28,2.089,29,1.28,30,1.327,32,1.432,36,0.999,38,0.38,40,0.281,41,0.155,59,0.667,76,0.024,77,0.024,134,0.901,145,0.952,146,2.39,147,3.209,148,2.39,149,3.209,150,2.722,151,3.209,152,3.209,153,2.39,154,2.722,155,2.027,156,3.209,157,2.39,158,3.209,159,3.209,160,3.209,161,3.209,162,3.209,163,2.39,164,3.209,165,2.39,166,2.39,167,2.39,168,2.39,169,2.027,170,2.39,171,3.209,172,2.39,173,2.368,175,2.1,176,2.1,177,1.801,178,1.79,180,2.39,181,2.443,182,2.594,184,2.722,186,2.646,190,2.39,193,2.39,196,2.39,201,2.663,204,2.39,207,2.39,209,1.02,210,2.39,212,1.342,213,2.39,215,2.221,216,2.39,218,2.39,220,2.221,221,2.39,223,2.39,225,3.445,228,1.757,271,1.072,282,2.443,285,1.757,305,0.559,328,2.712,331,2.39,529,1.163,530,1.582,531,3.542,532,3.542,533,3.542,534,1.946,535,1.946,536,1.946,537,1.946,538,1.946,539,1.946,540,1.946,541,1.946,542,1.946,543,1.946,544,1.946,545,1.946,546,1.946,547,1.946,548,1.946,549,1.946,550,1.946,551,1.946,552,1.946,553,1.946,554,1.946,555,1.946,556,1.946,557,1.946,558,1.946,559,1.946,560,1.946,561,1.946,562,1.946,563,1.946,564,1.946,565,1.946,566,1.946,567,1.946,568,1.946,569,2.39,570,1.582,571,2.027,572,2.94,573,2.39,574,3.542,575,1.946,576,1.946,577,2.94,578,1.946,579,2.94,580,2.39]],["title/injectables/GameOptionServiceService.html",[248,1.298,581,1.675]],["body/injectables/GameOptionServiceService.html",[0,0.124,3,0.481,4,0.405,9,0.405,11,1.387,12,1.387,18,2.706,23,0.744,24,1.23,26,0.744,27,0.047,29,1.23,30,1.088,32,1.203,34,2.315,36,0.65,38,0.836,39,0.744,40,0.481,41,0.265,59,0.724,76,0.034,77,0.034,145,1.387,175,1.366,176,1.366,177,1.078,178,1.534,248,1.983,290,2.621,299,3.449,305,1.23,323,3.45,328,1.745,367,2.56,581,2.56,582,3.329,583,4.065,584,2.706,585,3.482,586,4.284,587,4.305,588,5.001,589,4.305,590,2.954,591,3.482,592,2.954,593,3.482,594,4.284,595,4.284,596,4.284,597,4.284,598,3.329,599,2.56,600,4.284,601,4.284,602,3.482,603,4.284,604,3.329,605,2.954,606,4.065,607,4.284,608,3.329,609,3.482,610,2.56,611,3.329,612,2.296,613,3.329,614,1.989,615,3.329]],["title/classes/HtmlBalise.html",[41,0.224,266,1.675]],["body/classes/HtmlBalise.html",[3,0.455,4,0.383,9,0.383,23,0.703,24,1.186,25,1.019,26,0.703,27,0.048,29,0.904,30,0.799,32,1.17,34,1.911,40,0.455,41,0.405,76,0.033,77,0.033,145,1.337,177,1.337,178,1.337,246,2.558,266,3.223,299,3.505,305,1.324,324,3.505,328,2.164,354,2.558,355,3.357,388,2.17,449,2.558,450,2.558,472,2.558,529,1.88,587,3.357,599,2.925,605,2.848,610,2.468,616,2.558,617,5.455,618,5.455,619,4.894,620,4.894,621,3.146,622,4.129,623,3.146,624,3.357,625,1.695,626,3.146,627,3.797,628,3.146,629,4.384,630,5.216,631,3.146,632,3.357,633,3.146,634,3.146,635,3.146,636,3.146,637,3.146,638,3.146,639,3.146,640,3.146,641,3.146,642,3.146,643,3.146,644,3.146,645,3.146,646,3.146,647,3.146,648,3.146,649,3.146,650,3.146,651,3.146,652,4.894]],["title/classes/HtmlDisplay.html",[41,0.224,234,1.675]],["body/classes/HtmlDisplay.html",[0,0.074,3,0.287,4,0.242,7,1.727,9,0.242,11,1.509,14,2.75,23,0.444,24,0.857,26,1.199,27,0.048,28,2.063,29,0.857,30,0.758,32,1.245,34,1.846,35,1.784,36,0.935,38,0.582,40,0.287,41,0.391,52,1.794,53,1.774,76,0.024,77,0.024,134,1.66,145,0.967,173,1.846,175,1.967,176,1.843,177,1.454,178,1.454,186,1.564,201,2.383,209,2.693,233,2.426,234,2.383,282,2.75,301,2.426,305,0.857,324,1.369,328,1.041,369,2.426,380,2.723,388,2.75,406,2.546,527,2.058,529,1.187,591,2.426,599,3.071,605,2.058,612,1.369,614,3.031,624,2.426,629,4.177,653,1.614,654,2.426,655,2.985,656,2.985,657,2.985,658,2.985,659,2.985,660,4.177,661,2.985,662,2.985,663,2.985,664,2.985,665,2.985,666,2.985,667,2.985,668,2.985,669,1.986,670,5.247,671,2.426,672,2.985,673,3.988,674,1.986,675,3.988,676,3.988,677,2.985,678,2.426,679,2.985,680,3.988,681,3.988,682,1.986,683,2.985,684,5.139,685,2.985,686,3.988,687,2.058,688,2.985,689,2.985,690,3.988,691,2.985,692,2.985,693,2.985,694,3.988,695,2.985,696,2.058,697,2.985,698,2.985,699,2.985,700,1.986,701,2.985,702,2.985,703,1.986,704,2.985,705,2.426,706,2.985,707,2.985,708,1.986,709,2.985,710,2.985,711,1.986,712,2.985,713,2.058,714,2.426,715,1.986,716,1.986,717,1.614,718,1.986,719,1.986,720,1.986,721,1.986,722,1.986,723,1.986,724,4.793,725,1.986,726,1.986,727,1.986,728,1.986,729,1.986,730,2.985]],["title/components/InformationButtonComponent.html",[0,0.069,61,0.626]],["body/components/InformationButtonComponent.html",[0,0.13,1,0.787,2,1.438,3,0.509,4,0.429,5,1.284,6,1.284,7,1.141,8,1.284,9,0.429,11,1.141,12,1.141,13,1.284,15,1.284,16,2.046,17,1.438,19,1.619,21,1.619,25,1.141,27,0.047,36,0.867,37,2.654,38,0.687,39,0.787,40,0.509,41,0.281,46,1.141,51,1.012,52,1.438,53,1.438,54,1.284,55,1.862,56,1.284,57,1.284,58,0.687,59,0.595,60,1.619,61,1.14,62,2.046,63,1.619,64,0.687,65,1.284,66,0.787,67,1.284,68,1.284,69,0.687,70,1.284,71,0.787,72,0.787,73,1.284,74,1.284,75,1.284,76,0.036,77,0.036,107,2.429,303,1.846,389,3.051,404,1.996,414,1.631,423,2.429,427,2.863,431,1.446,457,1.631,459,1.846,460,1.846,490,1.846,625,1.823,731,2.863,732,2.429,733,4.441,734,4.441,735,4.441,736,3.953,737,3.61,738,3.61,739,3.523,740,3.523,741,3.523,742,2.863]],["title/components/MainMenuComponent.html",[0,0.069,64,0.547]],["body/components/MainMenuComponent.html",[0,0.101,1,0.403,2,0.899,3,0.261,4,0.22,5,0.658,6,0.658,7,0.585,8,0.658,9,0.603,11,0.899,12,1.578,13,1.494,15,0.658,16,1.776,17,1.23,19,1.012,21,1.012,23,0.915,24,0.797,25,0.585,26,1.088,27,0.048,28,1.776,29,1.295,30,1.212,32,1.181,34,1.285,35,1.659,36,0.66,37,1.659,38,0.542,39,0.403,40,0.261,41,0.144,42,1.139,44,0.741,45,0.741,46,1.46,47,0.741,51,0.518,52,0.899,53,0.899,54,0.658,55,1.384,56,0.658,57,0.658,58,0.352,59,0.893,60,1.012,61,0.403,62,0.658,63,1.012,64,0.741,65,0.658,66,0.403,67,1.012,68,0.658,69,0.352,70,0.658,71,0.403,72,0.403,73,0.658,74,0.658,75,0.658,76,0.022,77,0.022,109,2.852,134,2.384,145,0.899,173,1.757,175,0.741,176,0.741,177,0.899,178,1.095,181,2.332,182,1.757,184,2.332,186,1.455,215,1.772,220,2.148,228,1.659,230,2.332,241,1.467,248,1.285,251,1.245,271,1.74,272,2.269,277,1.245,278,1.467,289,1.245,290,1.772,291,1.245,298,1.245,303,0.946,305,0.971,321,2.826,323,2.852,335,1.245,367,2.269,372,1.659,374,2.332,376,2.586,377,1.079,379,2.021,380,1.772,381,1.659,383,2.021,384,2.021,385,1.659,389,2.586,397,2.256,398,1.914,400,2.256,404,1.388,408,1.245,409,0.835,410,0.835,412,1.455,413,1.079,414,1.285,415,0.946,429,1.245,431,1.139,436,0.946,439,0.946,444,1.467,457,1.285,459,1.455,460,1.455,464,1.245,483,1.659,484,1.079,485,1.245,489,1.079,490,0.946,502,1.455,569,2.256,571,1.245,573,2.749,585,2.256,590,3.552,592,1.914,593,2.256,599,2.269,606,2.256,609,2.256,610,1.659,614,1.079,625,1.139,627,1.914,632,2.256,671,2.256,678,2.256,687,2.618,696,2.618,713,1.245,742,1.467,743,3.879,744,1.467,745,2.776,746,3.382,747,2.776,748,2.256,749,3.086,750,2.256,751,1.805,752,2.749,753,2.776,754,1.805,755,2.776,756,2.776,757,1.805,758,2.256,759,3.086,760,2.776,761,1.805,762,1.805,763,1.805,764,1.805,765,2.256,766,1.805,767,2.776,768,2.776,769,1.467,770,1.467,771,1.467,772,1.467,773,1.467,774,1.467,775,1.467,776,1.467,777,1.467,778,1.467,779,1.467,780,1.467,781,1.467,782,2.256,783,1.805,784,1.805,785,2.776,786,2.776,787,3.331,788,2.776,789,2.776,790,1.805,791,1.805,792,1.805,793,1.805,794,1.805,795,1.805,796,1.805,797,1.805,798,1.805,799,1.805,800,3.382,801,2.256,802,1.805,803,1.467,804,1.467,805,1.467,806,1.467,807,2.256,808,1.467,809,1.467,810,1.467,811,1.467,812,1.805,813,1.805,814,1.805,815,1.467,816,1.805,817,1.805,818,1.805,819,1.805,820,1.467,821,2.256,822,1.805,823,1.805,824,1.245,825,1.914,826,1.805,827,1.467,828,1.467,829,2.256,830,1.659,831,1.467,832,1.467,833,1.245,834,1.467,835,1.467,836,1.467,837,1.467,838,1.467,839,1.245,840,1.245,841,1.467,842,1.805]],["title/components/PlayerCardComponent.html",[0,0.069,66,0.626]],["body/components/PlayerCardComponent.html",[0,0.122,1,0.645,2,1.263,3,0.417,4,0.351,5,1.053,6,1.053,7,0.935,8,1.053,9,0.351,11,0.935,12,0.935,13,1.61,15,1.053,16,1.976,17,1.263,19,1.422,21,1.422,23,0.645,25,0.935,26,0.645,27,0.047,29,0.829,30,1.121,32,0.733,36,0.923,38,0.563,39,0.645,40,0.417,41,0.23,42,1.941,44,1.601,45,1.601,46,1.43,47,1.601,51,0.829,52,1.263,53,1.263,54,1.053,55,1.724,56,1.053,57,1.053,58,0.563,59,0.488,60,1.422,61,0.645,62,1.053,63,1.422,64,0.563,65,1.053,66,1.056,67,2.033,68,1.053,69,0.563,70,1.053,71,0.645,72,0.645,73,1.053,74,1.053,75,1.053,76,0.031,77,0.031,122,2.689,182,1.805,271,2.083,375,1.991,376,2.33,377,1.725,378,1.991,379,1.725,380,1.513,381,1.725,383,1.725,384,1.725,385,1.725,404,1.601,405,2.044,406,1.336,409,1.805,410,2.044,412,2.044,413,1.725,414,2.286,415,2.044,419,2.33,421,4.015,426,3.045,431,1.812,432,1.991,436,2.314,437,1.991,439,2.478,440,3.045,469,4.137,480,3.17,486,3.17,487,2.347,490,1.513,502,2.314,509,2.347,516,1.725,625,1.601,825,1.991,827,2.347,833,1.991,843,3.17,844,2.347,845,3.899,846,4.416,847,3.899,848,3.17,849,2.887,850,3.17,851,2.887,852,2.887,853,2.887,854,2.887,855,2.887,856,2.887,857,2.887,858,2.347,859,2.887,860,2.887,861,3.899,862,2.887,863,2.887,864,2.347,865,2.887,866,2.887,867,2.887,868,2.887,869,2.887,870,2.887,871,2.887,872,2.887]],["title/components/SettingsComponentComponent.html",[0,0.069,69,0.547]],["body/components/SettingsComponentComponent.html",[0,0.102,1,0.32,2,0.749,3,0.207,4,0.174,5,0.522,6,0.522,7,0.464,8,0.522,9,0.539,11,1.187,12,0.464,13,1.758,15,0.522,16,1.659,17,0.749,19,0.843,21,0.843,23,0.818,24,0.664,25,0.464,26,1.092,27,0.048,28,1.616,29,1.337,30,1.295,32,1.204,36,0.865,38,0.451,39,0.32,40,0.207,41,0.114,42,1.504,44,1.194,45,1.194,46,1.081,47,1.194,51,0.411,52,0.749,53,0.749,54,0.522,55,1.217,56,0.522,57,0.522,58,0.279,59,0.846,60,0.843,61,0.32,62,0.522,63,0.843,64,0.279,65,0.522,66,0.32,67,1.06,68,0.522,69,0.651,70,1.565,71,0.32,72,0.32,73,0.522,74,0.522,75,0.522,76,0.019,77,0.019,116,2.881,134,2.154,145,0.749,173,1.07,175,1.37,176,1.37,177,1.187,178,1.187,182,2.231,186,1.211,209,0.75,215,1.524,220,2.563,227,0.987,231,2.364,232,1.879,248,1.07,251,0.987,271,1.888,272,2.342,273,2.005,277,1.594,279,3.209,281,1.163,289,0.987,290,1.524,291,0.987,298,0.987,303,1.211,305,0.411,308,2.714,321,3.056,323,2.464,333,2.978,335,0.987,372,1.381,374,3.209,375,3.139,376,3.094,377,2.648,378,2.527,379,2.464,380,2.323,381,0.855,383,2.564,384,2.342,385,2.881,398,1.594,399,1.381,404,1.608,405,1.211,406,0.662,408,2.302,409,1.346,410,1.07,412,1.524,413,2.189,414,1.814,415,1.524,417,2.005,424,0.987,429,0.987,430,1.879,431,1.194,436,1.211,437,2.302,438,0.987,439,1.524,440,0.987,442,1.879,448,1.879,457,1.545,459,1.524,460,1.524,464,1.594,483,2.464,484,1.738,485,1.594,489,2.189,490,0.75,502,1.211,516,1.381,525,0.987,527,0.987,570,1.163,571,0.987,590,3.209,602,1.879,610,1.381,614,1.738,625,0.949,627,1.594,654,1.879,696,2.527,713,0.987,748,1.879,749,2.714,750,1.879,752,3.352,759,2.714,765,1.879,769,1.163,770,1.163,771,1.163,772,1.163,773,1.163,774,1.163,775,1.163,776,1.879,777,1.163,778,1.163,779,1.163,780,1.163,781,1.163,782,1.879,787,1.163,801,1.163,803,1.163,804,1.163,805,1.163,806,1.163,807,1.879,808,1.163,809,1.163,810,1.163,811,1.163,815,1.163,820,1.163,821,1.879,824,0.987,825,2.527,828,1.879,829,2.364,830,1.738,831,1.163,832,1.163,833,1.594,834,1.163,835,1.163,836,1.163,837,1.163,838,1.163,839,2.702,840,2.302,841,3.352,850,1.879,858,1.163,873,3.919,874,2.311,875,2.908,876,2.908,877,3.664,878,2.908,879,2.311,880,2.311,881,2.311,882,1.431,883,1.431,884,2.908,885,1.431,886,1.431,887,2.311,888,1.431,889,1.594,890,1.879,891,2.311,892,1.431,893,2.311,894,3.338,895,1.431,896,2.311,897,2.311,898,1.431,899,2.311,900,1.431,901,1.431,902,1.431,903,2.311,904,1.431,905,2.311,906,2.311,907,1.431,908,1.431,909,1.431,910,1.431,911,2.311,912,1.431,913,1.431,914,1.431,915,1.431,916,1.431,917,1.431,918,1.431,919,1.163,920,2.311,921,1.431,922,1.431,923,1.431,924,1.431,925,1.431,926,1.431,927,2.311,928,2.311,929,2.311,930,1.431,931,1.431,932,1.431,933,1.431,934,2.311,935,1.431,936,1.431,937,1.431,938,1.431,939,1.431,940,1.431,941,1.431,942,1.431,943,1.431,944,1.431,945,1.431,946,1.431,947,1.163,948,1.431,949,2.311,950,1.431,951,1.431,952,1.431,953,1.431,954,1.431,955,1.431,956,2.311,957,1.431,958,2.311,959,2.311,960,1.431,961,1.431,962,1.431,963,1.431,964,1.431,965,1.431]],["title/components/StartButtonComponent.html",[0,0.069,71,0.626]],["body/components/StartButtonComponent.html",[0,0.135,1,0.531,2,1.103,3,0.343,4,0.289,5,0.866,6,0.866,7,0.769,8,0.866,9,0.289,11,0.769,12,0.769,13,0.866,15,0.866,16,1.9,17,1.103,19,1.241,21,1.241,23,0.531,25,0.769,26,1.069,27,0.047,28,1.9,29,1.321,30,1.168,32,1.252,34,2.506,36,0.962,38,0.464,39,0.531,40,0.343,41,0.189,42,1.397,44,0.975,45,0.975,46,1.663,47,0.975,51,0.682,52,1.103,53,1.103,54,0.866,55,1.584,56,0.866,57,0.866,58,0.464,59,0.401,60,1.241,61,0.531,62,0.866,63,1.241,64,0.464,65,0.866,66,0.531,67,0.866,68,0.866,69,0.464,70,0.866,71,0.971,72,0.531,73,0.866,74,0.866,75,0.866,76,0.027,77,0.027,104,3.478,145,1.103,177,0.769,178,0.769,230,1.638,271,0.866,303,1.245,305,0.682,389,3.236,399,2.034,404,2.107,405,1.245,406,2.282,409,1.1,410,1.1,412,1.784,414,2.012,415,1.784,419,1.419,420,1.931,426,2.348,431,1.784,436,1.245,438,2.348,451,4.235,457,1.576,459,1.245,460,1.245,477,1.931,479,1.931,499,1.931,502,2.509,521,1.931,522,1.931,525,1.638,589,4.235,592,2.997,625,1.397,732,1.638,736,3.234,737,2.767,830,1.419,848,2.767,889,3.674,947,1.931,966,4.099,967,3.404,968,3.404,969,3.404,970,4.93,971,4.346,972,3.979,973,3.979,974,3.979,975,3.404,976,4.6,977,2.375,978,5.21,979,2.375,980,2.375,981,2.375,982,2.375,983,3.404,984,3.979,985,2.375,986,4.346,987,3.404,988,3.404,989,2.375,990,3.404,991,2.375,992,2.375,993,3.404,994,2.375,995,2.375,996,3.404,997,2.375,998,3.404,999,2.375,1000,2.375,1001,2.375,1002,2.375]],["title/components/TitleComponent.html",[0,0.069,72,0.626]],["body/components/TitleComponent.html",[0,0.124,1,0.682,2,1.311,3,0.441,4,0.371,5,1.113,6,1.113,7,0.989,8,1.113,9,0.371,11,0.989,12,1.471,13,1.113,15,1.113,16,1.997,17,1.311,19,1.476,21,1.476,25,1.63,27,0.046,36,0.79,37,2.419,38,0.886,39,0.682,40,0.441,41,0.243,42,1.985,44,1.661,46,0.989,51,0.877,52,1.311,53,1.311,54,1.113,55,1.763,56,1.113,57,1.113,58,0.596,59,0.516,60,1.476,61,0.682,62,1.113,63,1.476,64,0.596,65,1.113,66,0.682,67,1.113,68,1.113,69,0.596,70,1.113,71,0.682,72,1.08,73,1.656,74,1.113,75,1.113,76,0.033,77,0.033,271,2.057,367,2.419,399,2.419,404,1.661,405,2.121,406,2.394,409,1.873,410,1.873,417,2.791,419,2.419,423,2.105,424,3.335,425,3.29,431,1.661,432,2.105,439,1.6,457,1.873,483,2.419,484,1.824,489,1.824,510,2.481,516,2.419,517,3.29,519,2.481,625,1.661,824,2.105,830,1.824,839,2.105,840,2.791,864,2.481,1003,2.481,1004,4.047,1005,4.541,1006,4.047,1007,4.836,1008,4.047,1009,3.052,1010,3.052,1011,3.052,1012,3.052,1013,3.052,1014,3.052,1015,3.052,1016,3.052,1017,3.052,1018,3.052,1019,4.047,1020,3.052,1021,3.052,1022,4.047,1023,3.052,1024,3.052,1025,3.052,1026,3.052,1027,3.052,1028,3.052,1029,3.052,1030,3.052,1031,3.052,1032,3.052,1033,3.052,1034,3.052,1035,3.052,1036,2.481,1037,3.052,1038,3.052,1039,3.052,1040,3.052,1041,3.052,1042,3.052,1043,3.052,1044,3.052,1045,3.052,1046,3.052,1047,3.052,1048,3.052,1049,3.052]],["title/coverage.html",[1050,3.107]],["body/coverage.html",[0,0.137,1,0.812,9,0.442,10,2.956,26,0.812,27,0.047,41,0.438,58,0.71,59,0.615,61,0.812,64,0.71,66,0.812,69,0.71,71,0.812,72,0.812,76,0.036,77,0.036,104,2.508,107,2.508,109,2.173,116,2.173,119,2.173,122,2.508,142,2.173,144,2.956,226,2.956,227,3.124,234,2.173,248,1.684,266,2.173,271,1.799,279,3.889,285,2.173,287,2.956,290,1.906,294,2.956,296,2.956,305,1.045,530,2.956,581,2.173,583,2.956,584,2.956,616,2.956,653,2.956,731,2.956,732,3.124,743,2.956,744,2.956,843,2.956,844,2.956,873,2.956,966,2.956,1003,2.956,1036,2.956,1050,2.956,1051,3.637,1052,3.637,1053,3.637,1054,4.531,1055,3.637,1056,4.531,1057,3.637,1058,3.637,1059,3.637,1060,4.935,1061,4.531,1062,3.637,1063,3.637,1064,3.637,1065,4.531,1066,3.637,1067,3.637,1068,4.531,1069,3.637,1070,3.637,1071,3.637,1072,3.637,1073,3.637]],["title/dependencies.html",[81,2.014,1074,1.616]],["body/dependencies.html",[27,0.047,39,0.927,45,1.703,46,1.344,47,1.703,76,0.04,77,0.04,81,2.479,99,3.99,100,3.385,124,3.373,133,2.861,612,2.861,1075,4.149,1076,5.688,1077,4.149,1078,4.908,1079,4.149,1080,4.149,1081,4.149,1082,4.149,1083,4.149,1084,4.149,1085,4.149,1086,4.149,1087,4.149,1088,4.149,1089,4.149]],["title/index.html",[23,0.523,1090,2.343,1091,2.343]],["body/index.html",[0,0.124,4,0.46,27,0.037,31,3.071,36,0.737,76,0.037,77,0.037,94,2.606,150,3.771,228,2.258,305,1.085,372,2.258,580,3.071,660,3.071,687,3.462,705,3.071,714,3.071,717,4.08,738,4.08,758,3.071,889,2.606,890,3.071,1074,2.606,1092,4.638,1093,5.019,1094,3.071,1095,3.778,1096,3.778,1097,4.638,1098,5.372,1099,5.539,1100,3.778,1101,3.778,1102,3.778,1103,3.778,1104,3.778,1105,3.778,1106,3.778,1107,3.778,1108,3.778,1109,3.778,1110,5.019,1111,3.778,1112,5.234,1113,3.778,1114,3.778,1115,3.778,1116,3.778,1117,4.638,1118,4.638,1119,5.234,1120,4.638,1121,4.638,1122,3.778,1123,3.778,1124,3.778,1125,3.778,1126,4.638,1127,3.778,1128,3.778,1129,3.778,1130,3.778,1131,3.778,1132,3.778,1133,2.606]],["title/modules.html",[80,2.003]],["body/modules.html",[27,0.041,76,0.041,77,0.041,79,2.673,80,2.344,90,2.344,100,3.084,1134,4.472,1135,4.472,1136,5.127,1137,4.472,1138,4.472]],["title/overview.html",[1133,2.636]],["body/overview.html",[1,1.24,2,1.236,27,0.046,51,1.096,58,0.984,61,1.126,64,0.984,66,1.126,69,0.984,71,1.126,72,1.126,76,0.038,77,0.038,78,2.281,79,3.502,80,2,81,2.281,82,3.103,83,3.103,84,3.103,85,2.632,86,3.103,87,3.103,88,3.103,89,3.103,90,2.642,91,4.099,92,3.794,93,3.103,94,2.632,132,2.281,142,2.281,272,2.789,273,2.632,276,3.103,529,2.281,581,2.281,919,3.103,1133,2.632,1139,3.817]],["title/properties.html",[24,0.968,1074,1.616]],["body/properties.html",[24,1.3,27,0.044,76,0.042,77,0.042,1094,3.68,1140,4.527]],["title/routes.html",[132,2.284]],["body/routes.html",[27,0.042,76,0.042,77,0.042,132,2.722]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":271,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1140,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1037,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.03em",{"_index":1017,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.05em",{"_index":1045,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.06em",{"_index":1026,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.14.2",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":1020,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.1px",{"_index":497,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.25em",{"_index":523,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.2em",{"_index":1022,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.2px",{"_index":498,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.35",{"_index":863,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.350s",{"_index":960,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.3em",{"_index":1047,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.3rem",{"_index":480,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.3s",{"_index":487,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5",{"_index":1028,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.5em",{"_index":509,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5px",{"_index":834,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8em",{"_index":832,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8rem",{"_index":853,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.8s",{"_index":855,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0/19",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":521,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["001546",{"_index":872,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["00a1ef",{"_index":1031,"title":{},"body":{"components/TitleComponent.html":{}}}],["0fa",{"_index":421,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0ff",{"_index":515,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0px",{"_index":861,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1",{"_index":272,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["1.1.13",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":871,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1.2px",{"_index":435,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.4em",{"_index":941,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.5em",{"_index":411,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.6em",{"_index":508,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.7rem",{"_index":997,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["1.8em",{"_index":446,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1/1",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":407,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10",{"_index":335,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["100",{"_index":279,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":461,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["102px",{"_index":869,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["10abff",{"_index":526,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10px",{"_index":413,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11",{"_index":456,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1125a4",{"_index":836,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11em",{"_index":1012,"title":{},"body":{"components/TitleComponent.html":{}}}],["12/13",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":422,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["12px",{"_index":993,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["13px",{"_index":950,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15",{"_index":903,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15.0.1",{"_index":1095,"title":{},"body":{"index.html":{}}}],["150px",{"_index":473,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["151px",{"_index":870,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["15deg",{"_index":1014,"title":{},"body":{"components/TitleComponent.html":{}}}],["15px",{"_index":825,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["16.2.12",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":859,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["165ff3",{"_index":1025,"title":{},"body":{"components/TitleComponent.html":{}}}],["17.0.7",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["170",{"_index":496,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1b35d3",{"_index":831,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["1beabd",{"_index":514,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1em",{"_index":428,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1fr",{"_index":396,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1px",{"_index":426,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["2",{"_index":273,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":416,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2/2",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":277,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["200",{"_index":520,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["20125f",{"_index":517,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["20px",{"_index":420,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["210px",{"_index":474,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["21px",{"_index":865,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["25",{"_index":824,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["255",{"_index":495,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["25px",{"_index":442,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["281775",{"_index":1046,"title":{},"body":{"components/TitleComponent.html":{}}}],["2em",{"_index":434,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2p",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["2px",{"_index":438,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["3",{"_index":274,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3.2em",{"_index":501,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3/4",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":418,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["300px",{"_index":454,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30px",{"_index":448,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["3146d3",{"_index":740,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["3351ff",{"_index":946,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["35",{"_index":1032,"title":{},"body":{"components/TitleComponent.html":{}}}],["35/38",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["35em",{"_index":505,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["35px",{"_index":826,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["39/39",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":1044,"title":{},"body":{"components/TitleComponent.html":{}}}],["3px",{"_index":525,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["4",{"_index":1139,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":278,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["40px",{"_index":945,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["42px",{"_index":866,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["4px",{"_index":995,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["5",{"_index":275,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["5.5em",{"_index":1043,"title":{},"body":{"components/TitleComponent.html":{}}}],["50",{"_index":516,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["50px",{"_index":479,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["55",{"_index":1034,"title":{},"body":{"components/TitleComponent.html":{}}}],["5em",{"_index":1024,"title":{},"body":{"components/TitleComponent.html":{}}}],["5px",{"_index":833,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["60",{"_index":963,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["6px",{"_index":499,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["7",{"_index":919,"title":{},"body":{"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["7.5.0",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["730505",{"_index":468,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["75",{"_index":1036,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["797777",{"_index":465,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["7deg",{"_index":1049,"title":{},"body":{"components/TitleComponent.html":{}}}],["7px",{"_index":440,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["8",{"_index":276,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["8/8",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":934,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["800px",{"_index":445,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["80px",{"_index":444,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["82",{"_index":932,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["82px",{"_index":867,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["8313e7",{"_index":1033,"title":{},"body":{"components/TitleComponent.html":{}}}],["8ba2d0",{"_index":1021,"title":{},"body":{"components/TitleComponent.html":{}}}],["8d8d8d",{"_index":528,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["9/9",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":462,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["92",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":868,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["94a0b9",{"_index":1038,"title":{},"body":{"components/TitleComponent.html":{}}}],["95",{"_index":476,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["__input",{"_index":506,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["absolute",{"_index":839,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["active",{"_index":464,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["actual",{"_index":387,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["actual_component",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["actualfunctioninbacklog",{"_index":531,"title":{},"body":{"classes/GameConcret.html":{}}}],["actuallog",{"_index":181,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["actualtask",{"_index":403,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["add",{"_index":660,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["addclass",{"_index":663,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addclass(id",{"_index":672,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["added",{"_index":670,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement",{"_index":664,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement(type",{"_index":679,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["adding",{"_index":675,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue",{"_index":680,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue[key",{"_index":725,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addnote",{"_index":146,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addnote(value",{"_index":172,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addplayername",{"_index":879,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addplayername(event",{"_index":882,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["adds",{"_index":683,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext",{"_index":665,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext(text",{"_index":699,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["afterviewinit",{"_index":229,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["align",{"_index":383,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["allows",{"_index":591,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{}}}],["angular",{"_index":717,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["angular/animations",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"dependencies.html":{}}}],["angular/src/tools/esbuild/javascript",{"_index":719,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["animation",{"_index":958,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["another",{"_index":589,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/StartButtonComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["app.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":953,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["application",{"_index":1104,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":79,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":90,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":382,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["artifacts",{"_index":1113,"title":{},"body":{"index.html":{}}}],["auto",{"_index":482,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["automatically",{"_index":1105,"title":{},"body":{"index.html":{}}}],["available",{"_index":1138,"title":{},"body":{"modules.html":{}}}],["average",{"_index":929,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["averagedecorator",{"_index":294,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["averagedecorator(this.game",{"_index":311,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["b0b0b0",{"_index":860,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["background",{"_index":431,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["background.jpg",{"_index":852,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["backlog",{"_index":759,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata[\"boutton",{"_index":344,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogdata[data[key",{"_index":343,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["balise",{"_index":233,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["based",{"_index":654,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["behaviorsubject",{"_index":611,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["behaviorsubject(null",{"_index":603,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["better",{"_index":845,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["between",{"_index":827,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["black",{"_index":1023,"title":{},"body":{"components/TitleComponent.html":{}}}],["block",{"_index":830,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["boolean",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["bootstrap",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":414,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["bottom_input",{"_index":828,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["box",{"_index":437,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["break",{"_index":802,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["brightness(0.8",{"_index":478,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["brightness(90",{"_index":1000,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["browse",{"_index":1136,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["bsetupdefaultvalue",{"_index":532,"title":{},"body":{"classes/GameConcret.html":{}}}],["build",{"_index":1112,"title":{},"body":{"index.html":{}}}],["button",{"_index":389,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["button's",{"_index":987,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["button.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":737,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.scss",{"_index":736,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts",{"_index":732,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":982,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:21",{"_index":977,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:26",{"_index":979,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:31",{"_index":981,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:36",{"_index":980,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:41",{"_index":985,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:47",{"_index":989,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.style.display",{"_index":768,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["button/information",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["button/start",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button_icon",{"_index":493,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_label",{"_index":492,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["buttonclicked",{"_index":976,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["c7c7c7",{"_index":1001,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["cafe",{"_index":280,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(1em",{"_index":507,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(50",{"_index":949,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["called",{"_index":978,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["came",{"_index":470,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["capabilities",{"_index":1129,"title":{},"body":{"index.html":{}}}],["caption_button",{"_index":996,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["caption_button:hover",{"_index":999,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captionbackground",{"_index":972,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captioncolor",{"_index":973,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["card",{"_index":469,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["card'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["card.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":847,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.scss",{"_index":846,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.ts",{"_index":844,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":849,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card/player",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["center",{"_index":385,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["change",{"_index":889,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["changemod",{"_index":880,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changemod(event",{"_index":887,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changes",{"_index":884,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["check",{"_index":890,"title":{},"body":{"components/SettingsComponentComponent.html":{},"index.html":{}}}],["child",{"_index":1019,"title":{},"body":{"components/TitleComponent.html":{}}}],["children",{"_index":471,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["choice",{"_index":1125,"title":{},"body":{"index.html":{}}}],["choose",{"_index":398,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["choosedefaultvalue",{"_index":147,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["chose",{"_index":821,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["circle",{"_index":956,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["class",{"_index":41,"title":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["classe",{"_index":673,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["classes",{"_index":529,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"overview.html":{}}}],["classes/decorateur/averagedecorator",{"_index":295,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/game",{"_index":284,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/gameconcret",{"_index":286,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/majabsdecorator",{"_index":297,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/strictdecorator",{"_index":288,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/facade/htmldisplay",{"_index":292,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/singleton/htmlbalise",{"_index":293,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clear",{"_index":365,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clearhtml",{"_index":666,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearhtml(element",{"_index":702,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearinstance",{"_index":619,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["cli",{"_index":1093,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":988,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["clip",{"_index":519,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["closebalise",{"_index":681,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["closing",{"_index":698,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["cluster_appmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1108,"title":{},"body":{"index.html":{}}}],["color",{"_index":404,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["column",{"_index":378,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["columns",{"_index":394,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["come",{"_index":1004,"title":{},"body":{"components/TitleComponent.html":{}}}],["command",{"_index":1126,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["component.component",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.html",{"_index":232,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.scss",{"_index":231,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts",{"_index":227,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:102",{"_index":262,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:112",{"_index":898,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:119",{"_index":256,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:129",{"_index":900,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:133",{"_index":252,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:145",{"_index":253,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:157",{"_index":263,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:17",{"_index":250,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:174",{"_index":261,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:178",{"_index":265,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:21",{"_index":901,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:22",{"_index":269,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:24",{"_index":270,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:26",{"_index":281,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:28",{"_index":268,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:30",{"_index":283,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:31",{"_index":904,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:32",{"_index":259,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:35",{"_index":258,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:36",{"_index":902,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:41",{"_index":907,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:45",{"_index":908,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:52",{"_index":892,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:56",{"_index":254,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:64",{"_index":883,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:70",{"_index":257,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:78",{"_index":888,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:84",{"_index":264,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:87",{"_index":895,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component/game",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"coverage.html":{}}}],["component/settings",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["components/game",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/information",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/player",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/start",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title/title.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":753,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["configurable",{"_index":967,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["connect",{"_index":715,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console",{"_index":877,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(\"aa",{"_index":728,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console.log(\"data",{"_index":818,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["console.log(\"test",{"_index":925,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.backlogdata",{"_index":924,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.mode",{"_index":803,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["console.log(this.players",{"_index":570,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["const",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor",{"_index":246,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["constructor(dataservice",{"_index":247,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["constructor(private",{"_index":298,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["cont",{"_index":329,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["contain",{"_index":370,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container",{"_index":373,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container_bottom",{"_index":842,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_button",{"_index":822,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_info",{"_index":823,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["containing",{"_index":605,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["contains",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["content",{"_index":380,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["continuegame",{"_index":148,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["continuegame(defaultvalue",{"_index":180,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["coverage",{"_index":1050,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatanddownloadjson",{"_index":149,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["create",{"_index":625,"title":{},"body":{"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["creating",{"_index":594,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["cross",{"_index":466,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["current",{"_index":850,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["cursor",{"_index":459,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["d000ff",{"_index":441,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dafoe",{"_index":1042,"title":{},"body":{"components/TitleComponent.html":{}}}],["data",{"_index":323,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["data[key",{"_index":327,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dataservice",{"_index":251,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["declarations",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defaultvalue",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["deleting",{"_index":704,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dependencies",{"_index":81,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["design",{"_index":656,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dev",{"_index":1101,"title":{},"body":{"index.html":{}}}],["development",{"_index":1096,"title":{},"body":{"index.html":{}}}],["devkit/build",{"_index":718,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["direction",{"_index":377,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["directive",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directives",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1111,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1116,"title":{},"body":{"index.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["displayed",{"_index":701,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml",{"_index":667,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml(element",{"_index":707,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displays",{"_index":693,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dist",{"_index":1115,"title":{},"body":{"index.html":{}}}],["div",{"_index":369,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["document.getelementbyid(\"actualtask",{"_index":638,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"contniue",{"_index":767,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"endmessage",{"_index":640,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"finishbutton",{"_index":648,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"gamemodemessage",{"_index":650,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"playerbutton",{"_index":644,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"stage1",{"_index":354,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"standardvalue",{"_index":636,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"texttoshow",{"_index":642,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"validatebutton",{"_index":646,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(id",{"_index":726,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["documentation",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["duration",{"_index":858,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["dynamic",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":854,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["e2e",{"_index":1123,"title":{},"body":{"index.html":{}}}],["e3e3e3",{"_index":512,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["e9e9ea",{"_index":835,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["ease",{"_index":488,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["easily",{"_index":659,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["element.classlist.add(classe",{"_index":729,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element.innerhtml",{"_index":730,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["elements",{"_index":661,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["emptied",{"_index":706,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["empty",{"_index":624,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["end",{"_index":150,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["endmessage",{"_index":449,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["enter",{"_index":690,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["entered",{"_index":886,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["error(\"method",{"_index":567,"title":{},"body":{"classes/GameConcret.html":{}}}],["evenly",{"_index":429,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event",{"_index":752,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.files[0",{"_index":770,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.placeholder",{"_index":913,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value",{"_index":911,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value.substring(0",{"_index":918,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["eventemitter",{"_index":984,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["everything",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["example",{"_index":686,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["execute",{"_index":1120,"title":{},"body":{"index.html":{}}}],["exo",{"_index":1011,"title":{},"body":{"components/TitleComponent.html":{}}}],["explain",{"_index":733,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["explode",{"_index":959,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["exports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extract",{"_index":778,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["facade",{"_index":655,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["face",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":282,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["family",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["ff61af",{"_index":1035,"title":{},"body":{"components/TitleComponent.html":{}}}],["fff",{"_index":439,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["ffffff",{"_index":427,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":774,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["filereader",{"_index":772,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["files",{"_index":1107,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1039,"title":{},"body":{"components/TitleComponent.html":{}}}],["filter",{"_index":477,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["finishbutton",{"_index":633,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["first",{"_index":758,"title":{},"body":{"components/MainMenuComponent.html":{},"index.html":{}}}],["flex",{"_index":376,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["focus",{"_index":524,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["font",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["for(const",{"_index":794,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["form",{"_index":930,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_bottom",{"_index":942,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_top",{"_index":931,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["format",{"_index":671,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["full",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":599,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["further",{"_index":1130,"title":{},"body":{"index.html":{}}}],["game",{"_index":59,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["game_label:before",{"_index":948,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["gamecomponentcomponent",{"_index":58,"title":{"components/GameComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameconcret",{"_index":285,"title":{"classes/GameConcret.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"coverage.html":{}}}],["gamemodemessage",{"_index":450,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["gameoptionserviceservice",{"_index":248,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["gap",{"_index":938,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["generate",{"_index":1110,"title":{},"body":{"index.html":{}}}],["generated",{"_index":705,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["getactualstage",{"_index":151,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getactuellog",{"_index":237,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getbacklogdata",{"_index":152,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote",{"_index":153,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote(key",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getdefaultvalue",{"_index":154,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getinstance",{"_index":620,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["getmode",{"_index":238,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote",{"_index":155,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getnote(id",{"_index":255,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote(key",{"_index":193,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getnotes",{"_index":156,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer",{"_index":157,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer(key",{"_index":196,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayernumber",{"_index":158,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayers",{"_index":159,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getslidervalue",{"_index":881,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event",{"_index":891,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getting",{"_index":1090,"title":{"index.html":{}},"body":{}}],["go",{"_index":1132,"title":{},"body":{"index.html":{}}}],["goal",{"_index":735,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["graded",{"_index":760,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gradient(#032d50",{"_index":1030,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(#e3e3e3",{"_index":511,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["gradient(120deg",{"_index":513,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["graph",{"_index":1137,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":393,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["group",{"_index":504,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["h1",{"_index":864,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["h2",{"_index":1040,"title":{},"body":{"components/TitleComponent.html":{}}}],["h3",{"_index":940,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["header",{"_index":392,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["header_sidenav",{"_index":455,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["height",{"_index":374,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["help",{"_index":738,"title":{},"body":{"components/InformationButtonComponent.html":{},"index.html":{}}}],["here",{"_index":397,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["hidden",{"_index":857,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["home",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hover",{"_index":490,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["html",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["html.addhtmlelement(\"input",{"_index":688,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["html.displayhtml(balise.title",{"_index":691,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["htmlbalise",{"_index":266,"title":{"classes/HtmlBalise.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"coverage.html":{}}}],["htmlbalise.getinstance",{"_index":301,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["htmlbalise.instance",{"_index":652,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlbuttonelement",{"_index":632,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmldisplay",{"_index":234,"title":{"classes/HtmlDisplay.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["htmldivelement",{"_index":630,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlelement",{"_index":629,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["htmlinputelement",{"_index":355,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["http://localhost:4200",{"_index":1103,"title":{},"body":{"index.html":{}}}],["icon",{"_index":741,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["id",{"_index":209,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["identifier",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["if(!closebalise",{"_index":723,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(element",{"_index":727,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["ignore",{"_index":627,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["image",{"_index":432,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["implemented",{"_index":568,"title":{},"body":{"classes/GameConcret.html":{}}}],["implements",{"_index":228,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["important",{"_index":947,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["imported",{"_index":897,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information_button",{"_index":739,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["informationbuttoncomponent",{"_index":61,"title":{"components/InformationButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable",{"_index":581,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":582,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["inline",{"_index":829,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input",{"_index":502,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["input[type=\"file",{"_index":838,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio",{"_index":952,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":957,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input_text",{"_index":692,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["inputs",{"_index":848,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["inputvalue",{"_index":634,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instance",{"_index":618,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["interface",{"_index":142,"title":{"interfaces/Game.html":{}},"body":{"interfaces/Game.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":143,"title":{},"body":{"interfaces/Game.html":{}}}],["iscontinue",{"_index":239,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["isdownload",{"_index":160,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["isretry",{"_index":161,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["it's",{"_index":451,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["item",{"_index":787,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["item.hasownproperty(itemname",{"_index":790,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item.work",{"_index":799,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item[itemname",{"_index":793,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["itemname",{"_index":789,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["items",{"_index":384,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["itself",{"_index":503,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["json",{"_index":590,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json.parse(filecontent",{"_index":777,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata",{"_index":776,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata.backlog",{"_index":785,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog.hasownproperty(key",{"_index":786,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog[key",{"_index":788,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.default",{"_index":784,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.hasownproperty(key",{"_index":921,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata.mode",{"_index":783,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players",{"_index":795,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players.hasownproperty(key",{"_index":796,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players[key",{"_index":797,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata[key]?.name",{"_index":922,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["justify",{"_index":379,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["karma",{"_index":1122,"title":{},"body":{"index.html":{}}}],["key",{"_index":173,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["key.startswith(\"default",{"_index":330,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('actuallog",{"_index":348,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('backlog",{"_index":342,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('default",{"_index":349,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('mode",{"_index":326,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('note",{"_index":347,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('player",{"_index":332,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["keyframes",{"_index":961,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["keys",{"_index":781,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label",{"_index":713,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label.innertext",{"_index":722,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["left",{"_index":840,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["left_number",{"_index":936,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["left_players",{"_index":937,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["legend",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["lets",{"_index":658,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["letter",{"_index":1015,"title":{},"body":{"components/TitleComponent.html":{}}}],["li",{"_index":944,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["line",{"_index":447,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["linear",{"_index":510,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":970,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["list",{"_index":696,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["listvalue",{"_index":235,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["literal",{"_index":186,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["load",{"_index":745,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lobby",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local_cafe",{"_index":368,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["lunchstage",{"_index":162,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["mainmenucomponent",{"_index":64,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["majabs",{"_index":312,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majabsdecorator",{"_index":296,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["majabsdecorator(this.game",{"_index":313,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majority",{"_index":928,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["margin",{"_index":417,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["mat",{"_index":453,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["matbuttonmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":914,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["matching",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maticonmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":905,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["menu",{"_index":367,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["menu'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["menu.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["menu.component.html",{"_index":747,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":746,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":744,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:111",{"_index":754,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":762,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":761,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":764,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":763,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:47",{"_index":766,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:51",{"_index":757,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:57",{"_index":751,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/main",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["message",{"_index":986,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["methods",{"_index":145,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["michel",{"_index":338,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["middle",{"_index":955,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["min",{"_index":443,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mode",{"_index":321,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["modedecorator",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["modifies",{"_index":893,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["modifybacklogdata",{"_index":163,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["modifybacklogdata(key",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["module",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1131,"title":{},"body":{"index.html":{}}}],["moyenne",{"_index":310,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mr",{"_index":1041,"title":{},"body":{"components/TitleComponent.html":{}}}],["n",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["names",{"_index":779,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["namesarray",{"_index":920,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray.push(jsondata[key].name",{"_index":923,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["navigate",{"_index":1102,"title":{},"body":{"index.html":{}}}],["nb",{"_index":223,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["need",{"_index":1127,"title":{},"body":{"index.html":{}}}],["new",{"_index":305,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":601,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["nextstage",{"_index":164,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["ng",{"_index":1099,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":240,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ngif",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":241,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["none",{"_index":303,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["noopanimationsmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["null",{"_index":324,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["number",{"_index":182,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["numbers",{"_index":927,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["object",{"_index":676,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["object.keys(data).foreach(key",{"_index":325,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["object.keys(this.backlogdata).foreach((item",{"_index":814,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["object.keys(this.players).foreach(key",{"_index":806,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["object.keys(this.players).length",{"_index":575,"title":{},"body":{"classes/GameConcret.html":{}}}],["offset",{"_index":994,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onbuttonclick",{"_index":971,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["one",{"_index":587,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["onfileselected",{"_index":748,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["onfileselected(event",{"_index":750,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["oninit",{"_index":230,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["opacity",{"_index":841,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["open",{"_index":390,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["opened",{"_index":236,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["option",{"_index":290,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["optional",{"_index":176,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["origin",{"_index":518,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":522,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["output",{"_index":990,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["outputs",{"_index":975,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["overflow",{"_index":856,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["overview",{"_index":1133,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":225,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["package",{"_index":1074,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":412,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["page",{"_index":372,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"index.html":{}}}],["page's",{"_index":662,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["param",{"_index":614,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parameters",{"_index":175,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key",{"_index":801,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key.replace('player",{"_index":334,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["parseint(match",{"_index":916,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["passed",{"_index":602,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{}}}],["passing",{"_index":677,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["path",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrick",{"_index":340,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["pattern",{"_index":657,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["per",{"_index":906,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["placed",{"_index":694,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["placeholder",{"_index":527,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["placeholder.replace(/\\d/g",{"_index":915,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["places",{"_index":712,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["planning",{"_index":1007,"title":{},"body":{"components/TitleComponent.html":{}}}],["planningpokerpp",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["platform",{"_index":1124,"title":{},"body":{"index.html":{}}}],["player",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["playerbutton",{"_index":472,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["playercardcomponent",{"_index":66,"title":{"components/PlayerCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerkey",{"_index":807,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playermax",{"_index":878,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playernumber",{"_index":333,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playerpushbutton",{"_index":165,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerpushbutton(id",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["players",{"_index":220,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["players[1",{"_index":337,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[2",{"_index":339,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[playernumber",{"_index":336,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["playersnb",{"_index":909,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playersnote",{"_index":533,"title":{},"body":{"classes/GameConcret.html":{}}}],["pointer",{"_index":460,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["poker",{"_index":1008,"title":{},"body":{"components/TitleComponent.html":{}}}],["position",{"_index":483,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["possible",{"_index":969,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pp",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["press",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["previously",{"_index":755,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["private",{"_index":299,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["project",{"_index":1092,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"properties.html":{}}}],["protected",{"_index":875,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["providedin",{"_index":613,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pushable_button",{"_index":992,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushable_button:active",{"_index":1002,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushablebackground",{"_index":974,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["quiter",{"_index":345,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["radius",{"_index":415,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["reader",{"_index":771,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.onload",{"_index":773,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.readastext(selectedfile",{"_index":805,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.result",{"_index":775,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["readonly",{"_index":876,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["recorded",{"_index":756,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["red",{"_index":467,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["redirectto",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":714,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["regular.ttf",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":484,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["reload",{"_index":1106,"title":{},"body":{"index.html":{}}}],["repeat(11",{"_index":395,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["resuming",{"_index":595,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["retrieve",{"_index":610,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["return",{"_index":328,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["returns",{"_index":177,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rgb(0",{"_index":494,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgb(255",{"_index":500,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgba(0",{"_index":862,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["rgba(black",{"_index":1027,"title":{},"body":{"components/TitleComponent.html":{}}}],["right",{"_index":463,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["right_style",{"_index":939,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{}}}],["root'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["rotate",{"_index":1048,"title":{},"body":{"components/TitleComponent.html":{}}}],["router",{"_index":249,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["routermodule",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":132,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":408,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["rules",{"_index":734,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["run",{"_index":1098,"title":{},"body":{"index.html":{}}}],["running",{"_index":1117,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":612,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"dependencies.html":{}}}],["résum",{"_index":366,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["save",{"_index":593,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["scaffolding",{"_index":1109,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":964,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(0.85",{"_index":491,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(0.9",{"_index":837,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["scale(1",{"_index":965,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1.2",{"_index":458,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(1.5",{"_index":742,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["scale(4",{"_index":962,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scene",{"_index":588,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["select",{"_index":765,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectbutton",{"_index":242,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectbutton(id",{"_index":260,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectedfile",{"_index":769,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["send",{"_index":592,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["senddata",{"_index":749,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["sending",{"_index":600,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["sends",{"_index":899,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["sent",{"_index":606,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["serif",{"_index":409,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":1100,"title":{},"body":{"index.html":{}}}],["server",{"_index":1097,"title":{},"body":{"index.html":{}}}],["service",{"_index":585,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["service.service",{"_index":291,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["service.service.ts",{"_index":584,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:18",{"_index":604,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:23",{"_index":608,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:30",{"_index":598,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["services/gameoptionservice/game",{"_index":289,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["setactualplayerturn",{"_index":166,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setactualplayerturn(n",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklog",{"_index":243,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setbacklogdata",{"_index":167,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklogdata(backlogdata",{"_index":213,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklognote",{"_index":244,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setdata",{"_index":596,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdata(newdata",{"_index":597,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdefaultvalue",{"_index":168,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setdefaultvalue(value",{"_index":216,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setplayers",{"_index":169,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setplayers(players",{"_index":218,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage",{"_index":170,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage(nb",{"_index":221,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["settimeout",{"_index":804,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["settings",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["settingscomponentcomponent",{"_index":69,"title":{"components/SettingsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setupdefaultvalue",{"_index":171,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["shadow",{"_index":419,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["showtext",{"_index":668,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["showtext(label",{"_index":710,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["sidenav",{"_index":391,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["singleton",{"_index":622,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["size",{"_index":410,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["sizing",{"_index":951,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["skew",{"_index":1013,"title":{},"body":{"components/TitleComponent.html":{}}}],["slider",{"_index":894,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["solid",{"_index":436,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["space",{"_index":381,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["spacing",{"_index":1016,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:first",{"_index":1018,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:last",{"_index":1029,"title":{},"body":{"components/TitleComponent.html":{}}}],["specific",{"_index":968,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["src",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/decorateur/averagedecorator.ts",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/game.ts",{"_index":144,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/game.ts:11",{"_index":224,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:13",{"_index":217,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:15",{"_index":206,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:17",{"_index":222,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:19",{"_index":203,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:21",{"_index":188,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:23",{"_index":198,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:25",{"_index":197,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:27",{"_index":192,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:29",{"_index":189,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:3",{"_index":219,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:31",{"_index":208,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:33",{"_index":199,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:35",{"_index":174,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:37",{"_index":195,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:39",{"_index":194,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:41",{"_index":205,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:43",{"_index":202,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:45",{"_index":200,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:47",{"_index":185,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:49",{"_index":211,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:5",{"_index":214,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:51",{"_index":187,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:53",{"_index":191,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:7",{"_index":179,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:9",{"_index":183,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/gameconcret.ts",{"_index":530,"title":{},"body":{"classes/GameConcret.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:10",{"_index":535,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:100",{"_index":556,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:103",{"_index":554,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:107",{"_index":543,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:112",{"_index":564,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:12",{"_index":536,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:14",{"_index":537,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:16",{"_index":534,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:18",{"_index":563,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:23",{"_index":561,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:27",{"_index":541,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:30",{"_index":565,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:34",{"_index":562,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:39",{"_index":558,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:4",{"_index":542,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:43",{"_index":545,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:47",{"_index":552,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:51",{"_index":551,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:55",{"_index":548,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:59",{"_index":546,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:63",{"_index":559,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:66",{"_index":553,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:70",{"_index":540,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:74",{"_index":550,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:78",{"_index":549,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:8",{"_index":538,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:82",{"_index":557,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:86",{"_index":547,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:9",{"_index":539,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:90",{"_index":555,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:94",{"_index":560,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:97",{"_index":544,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/majabsdecorator.ts",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/modedecorator.ts",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/strictdecorator.ts",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts",{"_index":653,"title":{},"body":{"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts:12",{"_index":669,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:20",{"_index":711,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:40",{"_index":682,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:63",{"_index":674,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:74",{"_index":700,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:82",{"_index":708,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:91",{"_index":703,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/singleton/htmlbalise.ts",{"_index":616,"title":{},"body":{"classes/HtmlBalise.html":{},"coverage.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:36",{"_index":626,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:46",{"_index":623,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:6",{"_index":621,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/components/game",{"_index":226,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":731,"title":{},"body":{"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":743,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/player",{"_index":843,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["src/app/components/settings",{"_index":873,"title":{},"body":{"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/start",{"_index":966,"title":{},"body":{"components/StartButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/title/title.component.ts",{"_index":1003,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/services/gameoptionservice/game",{"_index":583,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["stage1",{"_index":689,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["standard",{"_index":400,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["standardvalue",{"_index":402,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["start",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["startbuttoncomponent",{"_index":71,"title":{"components/StartButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1091,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":617,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["stored",{"_index":1114,"title":{},"body":{"index.html":{}}}],["strict",{"_index":308,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["strictdecorator",{"_index":287,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["strictdecorator(this.game",{"_index":309,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["strkey",{"_index":808,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["stroke",{"_index":425,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["stvalue",{"_index":628,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["style",{"_index":399,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["support",{"_index":1134,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1135,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":684,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["takes",{"_index":371,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["task",{"_index":388,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["teh",{"_index":386,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["test",{"_index":580,"title":{},"body":{"classes/GameConcret.html":{},"index.html":{}}}],["testing",{"_index":1128,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1119,"title":{},"body":{"index.html":{}}}],["text",{"_index":406,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["texttoshow",{"_index":401,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["things",{"_index":452,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.actualfunctioninbacklog",{"_index":574,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.actuallog",{"_index":800,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata",{"_index":571,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.backlogdata.foreach((item",{"_index":926,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.backlogdata[item",{"_index":817,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[itemname",{"_index":792,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[key",{"_index":579,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.balise",{"_index":300,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.balise.playerbutton.style.display",{"_index":302,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.bsetupdefaultvalue",{"_index":572,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.buttonclicked.emit",{"_index":991,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["this.content",{"_index":724,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["this.data",{"_index":819,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data.asobservable",{"_index":607,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data.next(newdata",{"_index":615,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data[\"actuallog",{"_index":813,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"backlog",{"_index":815,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"default",{"_index":812,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"mode",{"_index":811,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"note",{"_index":816,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[strkey",{"_index":809,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.dataservice.data$.subscribe(data",{"_index":322,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.dataservice.setdata(this.data",{"_index":820,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.defaultvalue",{"_index":573,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.endmessage",{"_index":639,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.finishbutton",{"_index":647,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.game",{"_index":306,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.choosedefaultvalue",{"_index":320,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.continuegame(this.getdefaultvalue",{"_index":317,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getactualstage",{"_index":364,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.creatanddownloadjson",{"_index":359,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isdownload",{"_index":358,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isretry",{"_index":361,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.lunchstage",{"_index":363,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.playerpushbutton(id",{"_index":351,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setactualplayerturn(1",{"_index":362,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setbacklogdata(backlogdata",{"_index":346,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setdefaultvalue(valueelement.value",{"_index":357,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setplayers(players",{"_index":341,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setupdefaultvalue",{"_index":352,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.gamemodemessage",{"_index":649,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.getactuellog",{"_index":318,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getmode",{"_index":307,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getnote(parseint(key.match(/\\d+/)?.[0",{"_index":350,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.htmldisplay",{"_index":304,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.inputvalue",{"_index":651,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.iscontinue",{"_index":315,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.mode",{"_index":782,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playerbutton",{"_index":643,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.playernumber",{"_index":910,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players",{"_index":569,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.players.push(item",{"_index":798,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.players[id",{"_index":917,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players[key",{"_index":576,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[playerkey",{"_index":810,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playersnb",{"_index":912,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnote",{"_index":578,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.playersnote[key",{"_index":577,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":360,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklog",{"_index":319,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklognote",{"_index":316,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setplayers",{"_index":314,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.stvalue",{"_index":635,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.task",{"_index":637,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.title",{"_index":641,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.validatebutton",{"_index":645,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["throw",{"_index":566,"title":{},"body":{"classes/GameConcret.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["title.component.html",{"_index":1006,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":1005,"title":{},"body":{"components/TitleComponent.html":{}}}],["titlecomponent",{"_index":72,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":489,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["top_left",{"_index":933,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["top_right",{"_index":935,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["transform",{"_index":457,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["transformer",{"_index":720,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transformjavascript",{"_index":716,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transition",{"_index":486,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["translatey",{"_index":998,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["transmitting",{"_index":586,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["transparent",{"_index":423,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["true",{"_index":331,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["tslib",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["typeface",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":943,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["undefined",{"_index":267,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["under",{"_index":983,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["unit",{"_index":1118,"title":{},"body":{"index.html":{}}}],["url(\"../../../assets/images/card.jpg",{"_index":475,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/hypnotic.jpg",{"_index":433,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/player",{"_index":851,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["url('../../../assets/images/hand.png",{"_index":481,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url('../assets/fonts/pressstart2p",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=exo:wght@900&display=swap",{"_index":1010,"title":{},"body":{"components/TitleComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=mr+dafoe&display=swap",{"_index":1009,"title":{},"body":{"components/TitleComponent.html":{}}}],["use",{"_index":687,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["used",{"_index":609,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["user",{"_index":874,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["using",{"_index":780,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["validatebutton",{"_index":631,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["validestage",{"_index":245,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["valueelement",{"_index":353,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valueelement.value",{"_index":356,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valuers",{"_index":697,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["values",{"_index":896,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["var",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["variable",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["various",{"_index":685,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["version",{"_index":1094,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":954,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["via",{"_index":1121,"title":{},"body":{"index.html":{}}}],["void",{"_index":178,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["want",{"_index":678,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["we'll",{"_index":709,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["webkit",{"_index":424,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["website",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["white",{"_index":405,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["whose",{"_index":885,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["width",{"_index":375,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["work",{"_index":791,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["worker",{"_index":721,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["wrap",{"_index":430,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["yes",{"_index":695,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["z",{"_index":485,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["zone.js",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component that display everything.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'planningPokerPP'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Variable that contains the name of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main component that display everything.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  /**\n   * Variable that contains the name of the website.\n   */\n  title = 'planningPokerPP';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @font-face {\n  font-family: 'Press Start 2P';\n  src: url('../assets/fonts/PressStart2P-Regular.ttf');\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponentComponent\n                        \n                        \n                            InformationButtonComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            PlayerCardComponent\n                        \n                        \n                            SettingsComponentComponent\n                        \n                        \n                            StartButtonComponent\n                        \n                        \n                            TitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {StartButtonComponent} from './components/start-button/start-button.component';\nimport {InformationButtonComponent} from './components/information-button/information-button.component';\n\nimport {MainMenuComponent} from './components/main-menu/main-menu.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SettingsComponentComponent} from './components/settings-component/settings-component.component';\nimport { GameComponentComponent } from './components/game-component/game-component.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { PlayerCardComponent } from './components/player-card/player-card.component';\nimport {NgIf} from \"@angular/common\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartButtonComponent,\n    InformationButtonComponent,\n    MainMenuComponent,\n    SettingsComponentComponent,\n    GameComponentComponent,\n    TitleComponent,\n    PlayerCardComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        MatIconModule,\n        NoopAnimationsModule,\n        NgIf,\n        MatSidenavModule,\n        MatButtonModule\n    ],\n  providers:\n    [],\n  bootstrap:\n    [AppComponent]\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponentComponent} from \"./components/settings-component/settings-component.component\";\nimport {MainMenuComponent} from \"./components/main-menu/main-menu.component\";\nimport {GameComponentComponent} from \"./components/game-component/game-component.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: MainMenuComponent},\n  {path: 'lobby', component: SettingsComponentComponent},\n  {path: 'game', component: GameComponentComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/Game.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addNote\n                                    \n                                \n                                \n                                    \n                                        chooseDefaultValue\n                                    \n                                \n                                \n                                    \n                                        continueGame\n                                    \n                                \n                                \n                                    \n                                        creatAndDownloadJSON\n                                    \n                                \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        getActualStage\n                                    \n                                \n                                \n                                    \n                                        getBacklogData\n                                    \n                                \n                                \n                                    \n                                        getBacklogDataNote\n                                    \n                                \n                                \n                                    \n                                        getDefaultValue\n                                    \n                                \n                                \n                                    \n                                        getNote\n                                    \n                                \n                                \n                                    \n                                        getNotes\n                                    \n                                \n                                \n                                    \n                                        getPlayer\n                                    \n                                \n                                \n                                    \n                                        getPlayerNumber\n                                    \n                                \n                                \n                                    \n                                        getPlayers\n                                    \n                                \n                                \n                                    \n                                        isDownload\n                                    \n                                \n                                \n                                    \n                                        isRetry\n                                    \n                                \n                                \n                                    \n                                        lunchStage\n                                    \n                                \n                                \n                                    \n                                        modifyBacklogData\n                                    \n                                \n                                \n                                    \n                                        nextStage\n                                    \n                                \n                                \n                                    \n                                        playerPushButton\n                                    \n                                \n                                \n                                    \n                                        setActualPlayerTurn\n                                    \n                                \n                                \n                                    \n                                        setBacklogData\n                                    \n                                \n                                \n                                    \n                                        setDefaultValue\n                                    \n                                \n                                \n                                    \n                                        setPlayers\n                                    \n                                \n                                \n                                    \n                                        setStage\n                                    \n                                \n                                \n                                    \n                                        setupDefaultValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Game {\n\n  setPlayers(players: { [key: number]: string }): void;\n\n  setBacklogData(BacklogData: { [key: string]: number }): void;\n\n  chooseDefaultValue(): void;\n\n  continueGame(defaultValue: string, actualLog: number): void;\n\n  setupDefaultValue(): boolean;\n\n  setDefaultValue(value: string): void;\n\n  nextStage(): void;\n\n  setStage(nb: number): void;\n\n  lunchStage(): void;\n\n  getActualStage(): number;\n\n  getPlayerNumber(): number;\n\n  getPlayer(key: number): string;\n\n  getDefaultValue(): string;\n\n  getBacklogData(): { [key: string]: number };\n\n  playerPushButton(id: string): void;\n\n  getPlayers(): { [key: number]: string };\n\n  addNote(value: string, key: string): void\n\n  getNotes(): { [key: string]: string };\n\n  getNote(key: string): string;\n\n  modifyBacklogData(key: string, value: number): void;\n\n  isRetry(): boolean;\n\n  isDownload(): boolean;\n\n  creatAndDownloadJSON() : { [p: string]: any };\n\n  setActualPlayerTurn(n : number): void;\n\n  end() : void;\n\n  getBacklogDataNote(key : string) : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponentComponent.html":{"url":"components/GameComponentComponent.html","title":"component - GameComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-component/game-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                game-component\n            \n\n\n\n            \n                styleUrls\n                ./game-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balise\n                            \n                            \n                                game\n                            \n                            \n                                htmlDisplay\n                            \n                            \n                                listValue\n                            \n                            \n                                opened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActuelLog\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getMode\n                            \n                            \n                                getNote\n                            \n                            \n                                isContinue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectButton\n                            \n                            \n                                setBacklog\n                            \n                            \n                                setBacklogNote\n                            \n                            \n                                setPlayers\n                            \n                            \n                                valideStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-component/game-component.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActuelLog\n                        \n                    \n                \n            \n            \n                \ngetActuelLog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMode\n                        \n                    \n                \n            \n            \n                \ngetMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContinue\n                        \n                    \n                \n            \n            \n                \nisContinue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectButton\n                        \n                    \n                \n            \n            \n                \nselectButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklog\n                        \n                    \n                \n            \n            \n                \nsetBacklog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogNote\n                        \n                    \n                \n            \n            \n                \nsetBacklogNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:157\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valideStage\n                        \n                    \n                \n            \n            \n                \nvalideStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Game} from \"../../classes/decorateur/Game\";\nimport {GameConcret} from \"../../classes/decorateur/GameConcret\";\nimport {StrictDecorator} from \"../../classes/decorateur/StrictDecorator\";\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {HtmlDisplay} from \"../../classes/facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../../classes/singleton/htmlBalise\";\nimport {Router} from \"@angular/router\";\nimport {AverageDecorator} from \"../../classes/decorateur/AverageDecorator\";\nimport {MajabsDecorator} from \"../../classes/decorateur/MajabsDecorator\";\n\n@Component({\n  selector: 'game-component',\n  templateUrl: './game-component.component.html',\n  styleUrls: ['./game-component.component.scss']\n})\nexport class GameComponentComponent implements AfterViewInit, OnInit {\n\n  constructor(private dataService: GameOptionServiceService, private router: Router) {\n  }\n\n  game: Game | undefined;\n\n  htmlDisplay: HtmlDisplay | undefined;\n\n  listValue = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n\n  balise: HtmlBalise | undefined;\n\n  opened = false;\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit(): void {\n    this.balise = HtmlBalise.getInstance();\n    this.balise.playerButton.style.display = 'none';\n    this.htmlDisplay = new HtmlDisplay();\n    this.game = new GameConcret();\n    if (this.getMode() == \"strict\") this.game = new StrictDecorator(this.game);\n    else if (this.getMode() == \"moyenne\") this.game = new AverageDecorator(this.game);\n    else if (this.getMode() == \"majabs\") this.game = new MajabsDecorator(this.game);\n    else this.game = new StrictDecorator(this.game)\n    this.setPlayers()\n\n    if (this.isContinue()) {\n      this.setBacklogNote()\n      this.game.continueGame(this.getDefaultValue(), this.getActuelLog());\n\n    } else {\n      this.setBacklog()\n      this.game.chooseDefaultValue();\n    }\n  }\n\n  getMode(): string {\n    let mode = \"strict\"\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Mode')) {\n            mode = data[key];\n          }\n        });\n      }\n    });\n    return mode\n  }\n\n  isContinue(): boolean {\n    let cont = false;\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith(\"Default\")) {\n            cont = true;\n          }\n        })\n      }\n    })\n    return cont;\n  }\n\n  setPlayers() {\n    let players: { [key: number]: string } = {}\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Player')) {\n            const playerNumber = parseInt(key.replace('Player', ''), 10);\n            players[playerNumber] = data[key];\n          }\n        });\n      } else {\n        players[1] = \"Michel\";\n        players[2] = \"Patrick\";\n      }\n    });\n    this.game?.setPlayers(players)\n  }\n\n  setBacklog() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = 1;\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  getNote(id: number): number {\n    let n = 0\n\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Note' + id)) {\n          n = data[key];\n        }\n      })\n    })\n\n    return n\n  }\n\n  getActuelLog(): number {\n    let n = 0;\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('actualLog')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  getDefaultValue(): string {\n    let n = \"\";\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Default')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  setBacklogNote() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = this.getNote(parseInt(key.match(/\\d+/)?.[0] || ''));\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  selectButton(id: string) {\n    this.game?.playerPushButton(id)\n  }\n\n  valideStage() {\n    if (this.game?.setupDefaultValue()) {\n      const valueElement = document.getElementById(\"stage1\") as HTMLInputElement;\n      if (valueElement.value != \"\") {\n        this.game?.setDefaultValue(valueElement.value)\n      }\n    } else {\n\n      if (this.game?.isDownload()) {\n        this.game?.creatAndDownloadJSON();\n        this.router.navigateByUrl('/').then(r => true);\n      } else {\n        if (this.game?.isRetry()) {\n          this.game?.setActualPlayerTurn(1);\n          this.game?.lunchStage();\n        } else {\n          if (this.game != null) {\n            if (this.game.getActualStage() \n    \n\n    \n        \n  \n    \n      clear\n    \n    \n       Résumé \n\n    \n  \n  \n    \n\n      \n        \n        \n\n        \n           menu\n        \n      \n\n      \n\n      \n\n      \n\n      \n        \n      \n\n\n      \n        \n          local_cafe\n           {{ i }}\n        \n      \n\n      \n      \n\n\n      \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./game-component.component.scss\n                \n                /* This is a div that contain everything and takes all the page. */\n.container {\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n\n/* The div that contains the title, teh actual task and the button to open the sidenav. */\n.header {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n}\n\n\n/* Here we choose the style for the display of the actual task, the title and the standard value. */\n#textToShow, #StandardValue, #ActualTask {\n  color: white;\n  text-align: center;\n}\n\n#textToShow {\n  grid-column: 1/2;\n  grid-row: 1;\n  text-align: center;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.5em;\n  padding: 10px 0;\n  border-radius: 2.5em;\n  margin: 0 20% 0 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-shadow: 0 0 20px #0fa, 0 0 120px #0fa;\n  color: transparent;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#StandardValue {\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n#ActualTask {\n  grid-column: 3 / 10;\n  grid-row: 1;\n  text-align: center;\n  background-image: url(\"../../../assets/images/hypnotic.jpg\");\n  background-size: 100%;\n  border-radius: 2em;\n  padding: 10px 0;\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  font-family: 'Press Start 2P', serif;\n  min-height: 80px;\n  min-width: 800px;\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  justify-content: center;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#endMessage, #gameModeMessage{\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  text-align: center;\n}\n\n\n/* It's here that we style all things about the sidenav. */\nmat-sidenav-container {\n  height: 100%;\n  background: none;\n}\n\nmat-sidenav {\n  width: 300px;\n  padding: 10px;\n}\n\n.header_sidenav {\n  grid-column: 11;\n  grid-row: 1;\n  transform: scale(1.2);\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: white;\n  padding: 0 10px 100px 0;\n  width: 90%;\n  text-align: right;\n\n  &:active {\n    color: #797777;\n  }\n}\n\n.cross {\n  background: none;\n  color: red;\n  border: none;\n  cursor: pointer;\n\n  &:active {\n    color: #730505;\n  }\n}\n\n\n/* It's the div that contains every card the player can choose. With all the style that came with his children. */\n#PlayerButton {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-button {\n  width: 150px;\n  height: 210px;\n  background-image: url(\"../../../assets/images/card.jpg\");\n  background-size: 95%;\n  filter: brightness(0.8);\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  margin-right: -50px;\n  border-radius: 0.3rem;\n  cursor: url('../../../assets/images/hand.png'), auto;\n  position: relative;\n  z-index: 1;\n  transition: margin-right 0.3s ease, top 0.3s ease;\n\n  &:hover {\n    margin-right: 0;\n    top: -50px;\n  }\n\n  &:active {\n    transform: scale(0.85);\n  }\n}\n\n.card-button_label {\n  width: auto;\n  height: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-shadow: 0 0 7px #0fa, 0 0 120px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 2.5em;\n}\n\n.card-button_icon {\n  height: 210px;\n  text-shadow: rgb(0, 255, 170) 0.1px 0.2px 6px;\n  color: rgb(255, 255, 255);\n  font-size: 3.2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n/* Here is the style of the div that contains the input and the input itself. */\n.input-group {\n  width: 35em;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n\n  &__input {\n    height: calc(1em + 1.6em + 0.5em);\n    width: 100%;\n\n    background-image: linear-gradient(#e3e3e3, #e3e3e3),\n    linear-gradient(120deg, #1beabd 0%, #0ff 50%, #20125f 100%);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n    background-size: 200% 100%;\n    color: #000000;\n\n    line-height: 1;\n    outline: none;\n    padding: 0 1em;\n    font-family: 'Press Start 2P', serif;\n\n    border: 0.25em solid transparent;\n    border-radius: 1.8em;\n\n    &:focus {\n      box-shadow: 0 0 0 0 #fff,\n      3px -3px 30px #1beabd,\n      -3px 3px 30px #10abff;\n    }\n  }\n}\n\n::placeholder {\n  color: #8d8d8d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear               Résumé                                                      menu                                                                            local_cafe           {{ i }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConcret.html":{"url":"classes/GameConcret.html","title":"class - GameConcret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConcret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/GameConcret.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualFunctionInBacklog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                bSetupDefaultValue\n                            \n                            \n                                defaultValue\n                            \n                            \n                                Players\n                            \n                            \n                                PlayersNote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                chooseDefaultValue\n                            \n                            \n                                continueGame\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                end\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                lunchStage\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                setActualPlayerTurn\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setStage\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualFunctionInBacklog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bSetupDefaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersNote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\n\nexport class GameConcret implements Game{\n  continueGame(defaultValue: string, actualLog: number): void {\n      throw new Error(\"Method not implemented.\");\n  }\n\n  Players: { [key: number]: string} = {};\n  PlayersNote: { [key : string]: string } = {};\n  BacklogData: { [key : string]: number } = {};\n\n  bSetupDefaultValue = true;\n\n  defaultValue = \"\";\n\n  actualFunctionInBacklog : number = 0;\n\n  setPlayers(players: { [p: number]: string }): void {\n    this.Players = players\n    console.log(this.Players);\n  }\n\n  setBacklogData(BacklogData: { [key : string]: number }){\n    this.BacklogData = BacklogData\n  }\n\n  chooseDefaultValue(): void {\n  }\n\n  setupDefaultValue(): boolean {\n    return this.bSetupDefaultValue;\n  }\n\n  setDefaultValue(value: string): void {\n    this.defaultValue = value\n    this.bSetupDefaultValue = false;\n  }\n\n  nextStage(){\n    this.actualFunctionInBacklog++;\n  }\n\n  getActualStage(): number {\n    return this.actualFunctionInBacklog;\n  }\n\n  getPlayerNumber(): number {\n    return Object.keys(this.Players).length;\n  }\n\n  getPlayer(key: number): string {\n    return this.Players[key];\n  }\n\n  getDefaultValue(): string {\n    return this.defaultValue;\n  }\n\n  getBacklogData(): { [p: string]: number } {\n    return this.BacklogData;\n  }\n\n  playerPushButton(id: string): void {\n  }\n\n  getPlayers(): { [p: number]: string } {\n    return this.Players;\n  }\n\n  addNote(value : string, key : string) : void {\n    this.PlayersNote[key] = value;\n  }\n\n  getNotes() : { [key : string]: string }{\n    return this.PlayersNote;\n  }\n\n  getNote(key : string) : string{\n    return this.PlayersNote[key];\n  }\n\n  modifyBacklogData(key : string, value : number) : void{\n    this.BacklogData[key] = value;\n  }\n\n  getBacklogDataNote(key : string) : number{\n    return this.BacklogData[key];\n  }\n\n  isRetry(): boolean {\n    return false;\n  }\n\n  setActualPlayerTurn(n: number): void {\n  }\n\n  end(): void {\n  }\n\n  lunchStage(): void {\n  }\n\n  isDownload(): boolean {\n    return false;\n  }\n\n  creatAndDownloadJSON(): { [p: string]: any } {\n    const test : { [p: string]: any } = {}\n    return test;\n  }\n\n  setStage(nb: number): void {\n    this.actualFunctionInBacklog = nb;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameOptionServiceService.html":{"url":"injectables/GameOptionServiceService.html","title":"injectable - GameOptionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameOptionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/gameOptionService/game-option-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for transmitting data from one scene to another in JSON \nThis allows you to send data to save data when creating a scene\nor when resuming a game from the main menu\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(newData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/gameOptionService/game-option-service.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Function for sending data from one component to another\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Data to be passed from one component to another\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:18\n                        \n                    \n\n            \n                \n                    Variable containing the data sent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:23\n                        \n                    \n\n            \n                \n                    Variable used to retrieve sent data\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n/**\n * Service for transmitting data from one scene to another in JSON \n * This allows you to send data to save data when creating a scene\n * or when resuming a game from the main menu\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameOptionServiceService {\n\n  /**\n   * Variable containing the data sent\n   * @private\n   */\n  private data = new BehaviorSubject(null);\n\n  /**\n   * Variable used to retrieve sent data\n   */\n  data$ = this.data.asObservable();\n\n  /**\n   * Function for sending data from one component to another\n   * @param {any} newData Data to be passed from one component to another\n   * @return {void}\n   */\n  setData(newData: any): void {\n    this.data.next(newData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlBalise.html":{"url":"classes/HtmlBalise.html","title":"class - HtmlBalise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlBalise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/singleton/htmlBalise.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearInstance\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:6\n                        \n                    \n\n            \n                \n                    variable containing singleton class instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        clearInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:46\n                        \n                    \n\n\n            \n                \n                        Function to empty the instance to create a new one\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:36\n                        \n                    \n\n\n            \n                \n                        Function to retrieve class instance\n\n\n                        \n                            Returns :         HtmlBalise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HtmlBalise{\n  /**\n   * variable containing singleton class instance\n   * @private\n   */\n  private static instance: HtmlBalise | null = null;\n\n\n  /** @ignore */ stValue : HTMLElement\n  /** @ignore */ task : HTMLElement\n  /** @ignore */ endMessage : HTMLElement\n  /** @ignore */ title : HTMLDivElement\n  /** @ignore */ playerButton : HTMLDivElement\n  /** @ignore */ validateButton : HTMLButtonElement\n  /** @ignore */ finishButton : HTMLElement;\n  /** @ignore */ gameModeMessage : HTMLDivElement;\n  /** @ignore */ inputValue : HTMLInputElement;\n\n  /** @ignore */\n  private constructor() {\n    this.stValue = document.getElementById(\"StandardValue\") as HTMLElement\n    this.task = document.getElementById(\"ActualTask\") as HTMLElement\n    this.endMessage = document.getElementById(\"endMessage\") as HTMLElement\n    this.title = document.getElementById(\"textToShow\") as HTMLDivElement\n    this.playerButton = document.getElementById(\"PlayerButton\") as HTMLDivElement;\n    this.validateButton = document.getElementById(\"validateButton\") as HTMLButtonElement;\n    this.finishButton = document.getElementById(\"finishButton\") as HTMLElement;\n    this.gameModeMessage = document.getElementById(\"gameModeMessage\") as HTMLDivElement;\n    this.inputValue = document.getElementById(\"stage1\") as HTMLInputElement;\n  }\n\n  /**\n   * Function to retrieve class instance\n   * @return {HtmlBalise}\n   */\n  static getInstance(): HtmlBalise {\n    if (!HtmlBalise.instance){\n      HtmlBalise.instance = new HtmlBalise();\n    }\n    return HtmlBalise.instance;\n  }\n\n  /**\n   * Function to empty the instance to create a new one\n   */\n  static clearInstance(): void{\n    HtmlBalise.instance = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlDisplay.html":{"url":"classes/HtmlDisplay.html","title":"class - HtmlDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/facade/HtmlDisplay.ts\n        \n\n\n            \n                Description\n            \n            \n                Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                addHtmlElement\n                            \n                            \n                                addText\n                            \n                            \n                                clearHTML\n                            \n                            \n                                displayHTML\n                            \n                            \n                                showText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/facade/HtmlDisplay.ts:12\n                        \n                    \n\n            \n                \n                    Variable that contains everything that will be added to the DOM in HTML format\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(id: string, classe: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:63\n                        \n                    \n\n\n            \n                \n                        Function for adding a class to an HTML object by passing its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the element to which you want to add a class\n\n                                            \n                                        \n                                        \n                                                classe\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    name of the class to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHtmlElement\n                        \n                    \n                \n            \n            \n                \naddHtmlElement(type: string, id?: string, additionalValue?: literal type, closeBalise: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:40\n                        \n                    \n\n\n            \n                \n                        Function that adds an HTML tag with its various parameters to the content variable.\nExample ://Example of use\nconst balise = HtmlBalise.getInstance()\nlet html = new HtmlDisplay()\nhtml.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\nhtml.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"div\"\n                                            \n\n                                            \n                                                    type of HTML tag to be placed in the DOM\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    id of element to be added to DOM\n\n                                            \n                                        \n                                        \n                                                additionalValue\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    list containing the add valuers of the add element type of [key : string] : string\n\n                                            \n                                        \n                                        \n                                                closeBalise\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    defined if the added tag is a closing tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addText\n                        \n                    \n                \n            \n            \n                \naddText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:74\n                        \n                    \n\n\n            \n                \n                        Function to add a text to the content, not an HTML tag but a text to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text to be added to content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHTML\n                        \n                    \n                \n            \n            \n                \nclearHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:91\n                        \n                    \n\n\n            \n                \n                        Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element to be emptied\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayHTML\n                        \n                    \n                \n            \n            \n                \ndisplayHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:82\n                        \n                    \n\n\n            \n                \n                        Function for adding content to an HTML object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element in which we'll add all the content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showText\n                        \n                    \n                \n            \n            \n                \nshowText(label: HTMLElement, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:20\n                        \n                    \n\n\n            \n                \n                        Function that places a text in an HTML DOM element\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    reference to an HTML element to which a text has been added\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text which will be placed in an HTML component\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {connect} from \"rxjs\";\nimport transformJavaScript from \"@angular-devkit/build-angular/src/tools/esbuild/javascript-transformer-worker\";\n\n/**\n * Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n */\nexport class HtmlDisplay{\n\n  /**\n   * Variable that contains everything that will be added to the DOM in HTML format\n   */\n  content = \"\";\n\n\n  /**\n   * Function that places a text in an HTML DOM element\n   * @param label {HTMLElement} reference to an HTML element to which a text has been added\n   * @param text {string} text which will be placed in an HTML component\n   */\n  showText(label : HTMLElement, text : string){\n    label.innerText = text;\n  }\n\n  /**\n   * Function that adds an HTML tag with its various parameters to the content variable.\n   *\n   * @example\n   * //Example of use\n   * const balise = HtmlBalise.getInstance()\n   * let html = new HtmlDisplay()\n   * html.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\n   * html.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n   *\n   *\n   * @param type {string} type of HTML tag to be placed in the DOM\n   * @param id {string} id of element to be added to DOM\n   * @param additionalValue {{[string] : string}} list containing the add valuers of the add element type of [key : string] : string\n   * @param closeBalise {boolean} defined if the added tag is a closing tag\n   */\n  addHtmlElement(type : string = \"div\", id? : string, additionalValue? : {[key : string] : string}, closeBalise : boolean = false){\n    if(!closeBalise) {\n      this.content += \" {\n          this.content += key + \"='\" + additionalValue[key] + \"' \"\n        });\n      }\n\n      this.content += \">\"\n    }else{\n      this.content += \"\";\n    }\n  }\n\n  /**\n   * Function for adding a class to an HTML object by passing its ID\n   * @param id {string} id of the element to which you want to add a class\n   * @param classe {string} name of the class to be added\n   */\n  addClass(id: string, classe: string){\n    const element = document.getElementById(id);\n    if(element == null) return\n    console.log(\"aa\")\n    element.classList.add(classe);\n  }\n\n  /**\n   * Function to add a text to the content, not an HTML tag but a text to be displayed.\n   * @param text {string} text to be added to content\n   */\n  addText(text : string){\n    this.content += text;\n  }\n\n  /**\n   * Function for adding content to an HTML object\n   * @param element {HTMLElement} DOM element in which we'll add all the content\n   */\n  displayHTML(element : HTMLElement){\n    element.innerHTML = this.content;\n    this.content = \"\"\n  }\n\n  /**\n   * Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n   * @param element {HTMLElement} DOM element to be emptied\n   */\n  clearHTML(element : HTMLElement){\n    element.innerHTML = \"\";\n    this.content = \"\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationButtonComponent.html":{"url":"components/InformationButtonComponent.html","title":"component - InformationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-button/information-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create an information button to explain the rules and the goal of this website.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-button\n            \n\n\n\n            \n                styleUrls\n                ./information-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Component that create an information button to explain the rules and the goal of this website.\n */\n@Component({\n  selector: 'information-button',\n  templateUrl: './information-button.component.html',\n  styleUrls: ['./information-button.component.scss']\n})\n\nexport class InformationButtonComponent {\n\n}\n\n    \n\n    \n        \n  help\n\n\n    \n\n    \n                \n                    ./information-button.component.scss\n                \n                .information_button {\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n\n  &:hover {\n    cursor: pointer;\n    color: #3146d3;\n  }\n}\n\n.icon-display {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  help'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-menu/main-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n\n\n            \n                styleUrls\n                ./main-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualLog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                defaultValue\n                            \n                            \n                                mode\n                            \n                            \n                                players\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:57\n                        \n                    \n\n\n            \n                \n                        Function to save data from the input JSON file as a variable for use in the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    con contains the JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Function to send previously recorded data to game-option-service for in-game use\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:51\n                        \n                    \n\n            \n                \n                    First Backlog not yet graded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:35\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Data sent to the game in JSON format\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:43\n                        \n                    \n\n            \n                \n                    Standard value used\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:39\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:47\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create page for the main menu of the website. We can choose here if we want to start a\n * new game or load a game from a json file.\n */\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit{\n\n  /**\n   * @ignore\n   */\n  constructor(private dataService: GameOptionServiceService) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n      const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n      button.style.display = \"none\"\n  }\n\n  /**\n   * Data sent to the game in JSON format\n   */\n  Data: { [Type: string]: string} = {}\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: { [key : string]: number } = {};\n  /**\n   * Select game mode\n   */\n  mode = \"\"\n  /**\n   * Standard value used\n   */\n  defaultValue = \"\"\n  /**\n   * List of players in the game\n   */\n  players : string[] = []\n  /**\n   * First Backlog not yet graded\n   */\n  actualLog = 0;\n\n  /**\n   * Function to save data from the input JSON file as a variable for use in the game\n   * @param event {event} con contains the JSON file\n   */\n  onFileSelected(event: any = 0){\n    this.players = [];\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n      // Extract names from JSON using keys\n\n      this.mode = jsonData.mode\n      this.defaultValue = jsonData.default\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          for (const itemName in item) {\n            if (item.hasOwnProperty(itemName) && itemName !== 'work') {\n              this.BacklogData[itemName] = item[itemName] as number\n            }\n          }\n        }\n      }\n\n      for(const key in jsonData.Players){\n        if (jsonData.Players.hasOwnProperty(key)) {\n          const item : string = jsonData.Players[key];\n          this.players.push(item);\n        }\n      }\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          if (!item.work) {\n            this.actualLog = parseInt(key) - 1;\n            break;\n          }\n        }\n      }\n\n      console.log(this.mode, this.defaultValue, this.BacklogData, this.players, this.actualLog)\n\n      setTimeout(() => {\n        const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n        button.style.display = \"flex\"\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n\n  /**\n   * Function to send previously recorded data to game-option-service for in-game use\n   */\n  sendData(){\n    Object.keys(this.players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + (playerKey + 1);\n      this.Data[strKey] = this.players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n    this.Data[\"Default\"] = this.defaultValue;\n    this.Data[\"actualLog\"] = (this.actualLog + 1) + \"\";\n\n    Object.keys(this.BacklogData).forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n      this.Data[\"Note\" + index] = this.BacklogData[item] + \"\"\n    });\n\n    console.log(\"data\", this.Data);\n    this.dataService.setData(this.Data);\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n  \n  \n  \n\n\n  \n    \n    Chose a json file\n  \n\n\n    \n\n    \n                \n                    ./main-menu.component.scss\n                \n                .container_button {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 40%;\n}\n\n.container_info-button {\n  height: 25%;\n  padding: 80px 15px 0 35px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\nstart-button {\n  transform: scale(1.5);\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    font-family: 'Press Start 2P', serif;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n.container_bottom{\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  justify-content: center;\n  height: 20%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      Chose a json file  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCardComponent.html":{"url":"components/PlayerCardComponent.html","title":"component - PlayerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-card/player-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a card for the player and their name, to have a better display\nin the .\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-card\n            \n\n\n\n            \n                styleUrls\n                ./player-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                i\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-card/player-card.component.ts:17\n                            \n                        \n                \n                    \n                        Value of the current player.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * Component that create a card for the player and their name, to have a better display\n * in the .\n */\n@Component({\n  selector: 'player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.scss']\n})\n\nexport class PlayerCardComponent {\n  /**\n   * Value of the current player.\n   */\n  @Input() i: number = 0;\n}\n\n    \n\n    \n        \n   Player {{i}} \n  \n\n\n    \n\n    \n                \n                    ./player-card.component.scss\n                \n                .card {\n  display: flex;\n  background-image: url(\"../../../assets/images/player-card-background.jpg\");\n  background-size: 50%;\n  flex-direction: column;\n  border-radius: 0.3rem;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem;\n  border: 1px solid #e0e0e0;\n  transition: 0.8s;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  width: 160px;\n\n  &:hover {\n    border: 1px solid #b0b0b0;\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.35);\n  }\n}\n\nh1 {\n  color: #fff;\n  text-shadow:\n    0 0 7px #fff,\n    0 0 10px #fff,\n    0 0 21px #fff,\n    0 0 42px #0fa,\n    0 0 82px #0fa,\n    0 0 92px #0fa,\n    0 0 102px #0fa,\n    0 0 151px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.2em;\n}\n\ninput {\n  background: #001546;\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 0.5em;\n  border: 1px solid white;\n  border-radius: 0.3rem;\n  padding: 7px 0 7px 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Player {{i}}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponentComponent.html":{"url":"components/SettingsComponentComponent.html","title":"component - SettingsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings-component/settings-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the page where the user will choose every option for his game.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-component\n            \n\n\n\n            \n                styleUrls\n                ./settings-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BacklogData\n                            \n                            \n                                    Protected\n                                    Readonly\n                                console\n                            \n                            \n                                Data\n                            \n                            \n                                mode\n                            \n                            \n                                playerMax\n                            \n                            \n                                playerNumber\n                            \n                            \n                                Players\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayerName\n                            \n                            \n                                changeMod\n                            \n                            \n                                getSliderValue\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlayerName\n                        \n                    \n                \n            \n            \n                \naddPlayerName(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Changes the name of the player whose name has just been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    input text value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMod\n                        \n                    \n                \n            \n            \n                \nchangeMod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Change game mode\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    value of check box\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSliderValue\n                        \n                    \n                \n            \n            \n                \ngetSliderValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Modifies the number of players by the slider value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    slider value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Changes backlog values based on imported JSON file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Sends data to the game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:26\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : console\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:21\n                        \n                    \n\n            \n                \n                    Data that will be passed to the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"strict\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:36\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:31\n                        \n                    \n\n            \n                \n                    Maximum number of players per game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:41\n                        \n                    \n\n            \n                \n                    Current number of players\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of players\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create the page where the user will choose every option for his game.\n */\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings-component.component.html',\n  styleUrls: ['./settings-component.component.scss']\n})\n\nexport class SettingsComponentComponent {\n  /** @ignore */\n  constructor(private dataService: GameOptionServiceService) {\n  }\n\n  /**\n   * Data that will be passed to the game\n   */\n  Data: { [Type: string]: string } = {}\n\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: string[] = [];\n\n  /**\n   * Maximum number of players per game\n   */\n  playerMax: number = 15;\n\n  /**\n   * Select game mode\n   */\n  mode = \"strict\";\n\n  /**\n   * Current number of players\n   */\n  playerNumber: number = 2;\n  /**\n   * List of players\n   */\n  Players: { [key: number]: string } = {}\n  /** @ignore */playersNb: number[] = [1, 2]\n\n  /**\n   * Modifies the number of players by the slider value\n   * @param event slider value\n   */\n  getSliderValue(event: any = 0) {\n    this.playerNumber = event.target.value;\n    this.playersNb = []\n    for (let i = 1; i  0) {\n      const placeholder = event.target.placeholder;\n      const match = placeholder.replace(/\\D/g, \"\");\n      const id = parseInt(match);\n      this.Players[id] = event.target.value.substring(0, 7);\n      console.log(this.Players);\n    }\n  }\n\n  /**\n   * Change game mode\n   * @param event value of check box\n   */\n  changeMod(event: any = 0) {\n    this.mode = event.target.value;\n    console.log(this.mode);\n  }\n\n  /**\n   * Changes backlog values based on imported JSON file\n   * @param event JSON file\n   */\n  onFileSelected(event: any = 0) {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n\n      // Extract names from JSON using keys\n      const namesArray: string[] = [];\n      for (const key in jsonData) {\n        if (jsonData.hasOwnProperty(key) && jsonData[key]?.name) {\n          namesArray.push(jsonData[key].name);\n        }\n      }\n      this.BacklogData = namesArray;\n      setTimeout(() => {\n        console.log(this.BacklogData);\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n  /**\n   * Sends data to the game\n   */\n  sendData(){\n    console.log(\"test\");\n    Object.keys(this.Players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + playerKey;\n      this.Data[strKey] = this.Players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n\n    this.BacklogData.forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n    });\n\n    this.dataService.setData(this.Data);\n  }\n\n  protected readonly console = console;\n}\n\n    \n\n    \n        \n  \n    \n      \n         Numbers of Players \n        \n        {{ playerNumber }}\n      \n\n      \n        \n      \n    \n\n    \n      \n         Game mode\n        \n          \n            \n            Strict\n            \n            \n          \n          \n            \n            Absolute Majority \n            \n            \n          \n          \n            \n            Average\n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n      Chose a json file\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-component.component.scss\n                \n                form {\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.form_top {\n  display: flex;\n  flex-direction: row;\n  height: 82%;\n  width: 100%;\n}\n\n.top_left {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 80%;\n}\n\n.top_right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  width: 20%;\n}\n\n.left_number-players {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20%;\n}\n\n.left_players {\n  display: flex;\n  width: 100%;\n  height: 80%;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.right_style-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & h3 {\n    font-family: 'Press Start 2P', serif;\n    font-size: 1.4em;\n    margin: 0;\n  }\n}\n\n.bottom_input-json {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & input {\n    color: white;\n    font-family: 'Press Start 2P', serif;\n  }\n}\n\n\n.form_bottom {\n  display: flex;\n  width: 100%;\n  height: 25%;\n  margin-top: 15px;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n\nul {\n  list-style-type: none;\n}\n\nli {\n  position: relative;\n  padding: 10px 10px 10px 40px;\n  height: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n\n  &:active {\n    color: #3351ff !important;\n  }\n}\n\n.style-game_label:before {\n  content: \"\";\n  width: 15px;\n  height: 15px;\n  background: #fff;\n  position: absolute;\n  left: 7px;\n  top: calc(50% - 13px);\n  box-sizing: border-box;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"] {\n  opacity: 0;\n  -webkit-appearance: none;\n  display: inline-block;\n  vertical-align: middle;\n  z-index: 100;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 30px;\n  position: absolute;\n  left: 0;\n  top: calc(50% - 15px);\n  cursor: pointer;\n}\n\n.circle {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  left: -3px;\n  top: 2px;\n  border: 5px solid #fff;\n  opacity: 0;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked ~ .circle {\n  position: absolute;\n  opacity: 1;\n  animation-name: explode;\n  animation-duration: 0.350s;\n}\n\n@keyframes explode {\n  0% {\n    opacity: 0;\n    transform: scale(4);\n  }\n  60% {\n    opacity: 1;\n    transform: scale(0.5);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Numbers of Players                 {{ playerNumber }}                                                 Game mode                                          Strict                                                                    Absolute Majority                                                                     Average                                                                        Chose a json file                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartButtonComponent.html":{"url":"components/StartButtonComponent.html","title":"component - StartButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/start-button/start-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a configurable button with some specific style, the only change possible\nis the link, the color of the background and the text.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                start-button\n            \n\n\n\n            \n                styleUrls\n                ./start-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./start-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captionBackground\n                            \n                            \n                                captionColor\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                pushableBackground\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captionBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:21\n                            \n                        \n                \n                    \n                        Variable to change the background color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        captionColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:26\n                            \n                        \n                \n                    \n                        Variable to change the text color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        link\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:36\n                            \n                        \n                \n                    \n                        Variable to change the link of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:31\n                            \n                        \n                \n                    \n                        Variable to change the text on a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pushableBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable to change the color under a button when it's called in another component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:41\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n/**\n * Component that create a configurable button with some specific style, the only change possible\n * is the link, the color of the background and the text.\n */\n@Component({\n  selector: 'start-button',\n  templateUrl: './start-button.component.html',\n  styleUrls: ['./start-button.component.scss']\n})\nexport class StartButtonComponent{\n  /**\n   * Variable to change the color under a button when it's called in another component.\n   */\n  @Input() pushableBackground: string = '';\n\n  /**\n   * Variable to change the background color of a button when it's called in another component.\n   */\n  @Input() captionBackground: string = '';\n\n  /**\n   * Variable to change the text color of a button when it's called in another component.\n   */\n  @Input() captionColor: string = '';\n\n  /**\n   * Variable to change the text on a button when it's called in another component.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Variable to change the link of a button when it's called in another component.\n   */\n  @Input() link: string = '';\n\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n}\n\n    \n\n    \n        \n   {{ name }} \n\n\n    \n\n    \n                \n                    ./start-button.component.scss\n                \n                .pushable_button {\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n}\n\n.caption_button {\n  display: block;\n  padding: 20px 50px;\n  border-radius: 12px;\n  border: 3px solid white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.7rem;\n  text-shadow: 1px 1px 2px #000000;\n  transform: translateY(-6px);\n}\n\n.caption_button:hover {\n  filter: brightness(90%);\n  color: #c7c7c7 !important;\n}\n\n\n.pushable_button:active .caption_button {\n  transform: translateY(-2px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ name }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title/title.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the title of the website and all the style that come with it, on the main menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pp-title\n            \n\n\n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that create the title of the website and all the style that come with it, on the main menu.\n */\n@Component({\n  selector: 'pp-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n}\n\n    \n\n    \n        \n  \n    PLANNING\n    PLANNING\n  \n  POKER\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Mr+Dafoe&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@900&display=swap');\n\nh1 {\n  position: relative;\n  font-family: 'Exo', serif;\n  font-size: 11em;\n  margin: 0;\n  transform: skew(-15deg);\n  letter-spacing: 0.03em;\n\n  span:first-child {\n    display: block;\n    text-shadow: 0 0 0.1em #8ba2d0, 0 0 0.2em black, 0 0 5em #165ff3;\n    -webkit-text-stroke: 0.06em rgba(black, 0.5);\n  }\n\n  span:last-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-image: linear-gradient(#032d50 25%, #00a1ef 35%, white 50%, #20125f 50%, #8313e7 55%, #ff61af 75%);\n    -webkit-text-stroke: 0.01em #94a0b9;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\nh2 {\n  font-family: 'Mr Dafoe', serif;\n  font-size: 5.5em;\n  margin-left: 3em;\n  color: white;\n  text-shadow: 0 0 0.05em #fff, 0 0 0.2em #281775, 0 0 0.3em #20125f;\n  transform: rotate(-7deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PLANNING    PLANNING    POKER'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/AverageDecorator.ts\n            \n            class\n            AverageDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/Game.ts\n            \n            interface\n            Game\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/GameConcret.ts\n            \n            class\n            GameConcret\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/MajabsDecorator.ts\n            \n            class\n            MajabsDecorator\n            \n                92 %\n                (35/38)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/ModeDecorator.ts\n            \n            class\n            ModeDecorator\n            \n                100 %\n                (39/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/StrictDecorator.ts\n            \n            class\n            StrictDecorator\n            \n                92 %\n                (35/38)\n            \n        \n        \n            \n                \n                src/app/classes/facade/HtmlDisplay.ts\n            \n            class\n            HtmlDisplay\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/classes/singleton/htmlBalise.ts\n            \n            class\n            HtmlBalise\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/components/game-component/game-component.component.ts\n            \n            component\n            GameComponentComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/components/information-button/information-button.component.ts\n            \n            component\n            InformationButtonComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/player-card/player-card.component.ts\n            \n            component\n            PlayerCardComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/settings-component/settings-component.component.ts\n            \n            component\n            SettingsComponentComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/components/start-button/start-button.component.ts\n            \n            component\n            StartButtonComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/gameOptionService/game-option-service.service.ts\n            \n            injectable\n            GameOptionServiceService\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.7\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^17.0.7\n        \n            @angular/compiler : ^17.0.7\n        \n            @angular/core : ^17.0.7\n        \n            @angular/forms : ^17.0.7\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^17.0.7\n        \n            @angular/platform-browser-dynamic : ^17.0.7\n        \n            @angular/router : ^17.0.7\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeface-press-start-2p : ^1.1.13\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanningPokerPP\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
