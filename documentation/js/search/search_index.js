var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.255,1,0.71]],["body/components/AppComponent.html",[0,0.474,1,1.28,2,1.54,3,0.445,4,0.376,5,1.346,6,1.346,7,1.346,8,1.346,9,0.376,10,2.872,11,1.502,12,1.892,13,1.717,14,4.479,15,1.346,16,2.205,17,1.787,18,3.666,19,1.717,20,4.933,21,1.717,22,4.479,23,0.769,24,1.236,25,1.787,26,0.769,27,0.043,28,1.207,29,0.969,30,0.865,31,3.666,32,0.865,33,3.509,34,3.666,35,4.479,36,0.883,37,2.73,38,0.596,39,0.865,40,0.445,41,0.131,42,2.145,43,3.509,44,1.68,45,1.68,46,1.54,47,1.68,48,3.509,49,3.509,50,3.509,51,1.082,52,1.381,53,1.54,54,1.346,55,1.993,56,1.346,57,1.346,58,0.769,59,0.596,60,1.717,61,0.865,62,1.346,63,1.717,64,0.769,65,1.346,66,0.865,67,1.346,68,1.346,69,0.769,70,1.346,71,0.865,72,0.865,73,1.346,74,1.346,75,1.346,76,0.032,77,0.032]],["title/modules/AppModule.html",[78,1.757,79,1.757]],["body/modules/AppModule.html",[1,1.415,3,0.405,4,0.342,9,0.342,17,1.099,27,0.043,38,0.994,39,0.787,40,0.405,41,0.12,51,0.986,58,1.173,61,1.319,64,1.173,66,1.319,69,1.173,71,1.319,72,1.319,76,0.03,77,0.03,78,1.948,79,3.636,80,1.72,81,1.948,82,3.861,83,3.861,84,3.45,85,2.234,86,2.616,87,2.616,88,2.616,89,2.616,90,2.881,91,4.382,92,3.45,93,2.616,94,2.234,95,3.196,96,3.45,97,3.45,98,4.216,99,3.45,100,2.234,101,3.196,102,3.196,103,3.196,104,2.234,105,4.216,106,3.196,107,2.234,108,2.616,109,1.948,110,2.616,111,4.216,112,3.196,113,4.216,114,3.196,115,2.616,116,1.948,117,3.45,118,2.616,119,1.948,120,3.196,121,3.196,122,2.234,123,3.196,124,2.616,125,4.216,126,3.196,127,4.216,128,3.196]],["title/modules/AppRoutingModule.html",[78,1.757,90,1.551]],["body/modules/AppRoutingModule.html",[0,0.465,3,0.515,4,0.435,9,0.435,27,0.043,38,0.952,39,1,40,0.515,41,0.152,58,1.074,59,0.69,64,1.074,69,1.074,76,0.035,77,0.035,80,2.185,85,2.838,90,2.639,96,3.323,97,4.014,108,3.323,109,2.475,110,3.323,115,3.323,116,2.475,117,4.014,118,3.323,119,2.475,129,4.061,130,4.061,131,4.904,132,3.211,133,2.838,134,1.738,135,5.472,136,4.061,137,4.904,138,4.061,139,4.061,140,4.061,141,4.061]],["title/interfaces/Game.html",[59,0.49,142,1.757]],["body/interfaces/Game.html",[3,0.313,4,0.264,9,0.264,23,0.541,26,1.251,27,0.043,28,2.038,30,1.172,32,1.435,36,0.914,40,0.313,59,0.6,76,0.025,77,0.025,142,1.505,143,2.469,144,2.021,145,1.089,146,2.152,147,2.74,148,2.74,149,2.42,150,2.74,151,2.74,152,2.152,153,2.74,154,2.152,155,2.74,156,2.152,157,2.74,158,2.74,159,2.74,160,2.74,161,2.74,162,2.152,163,2.74,164,2.152,165,2.152,166,2.152,167,2.152,168,1.9,169,2.74,170,2.152,171,2.353,172,2.469,173,2.063,174,2.063,175,1.796,176,1.786,177,2.469,178,2.469,179,2.494,180,2.469,181,2.469,182,2.454,183,2.469,184,2.152,185,2.469,186,2.469,187,2.152,188,2.469,189,2.469,190,2.152,191,2.469,192,2.469,193,2.469,194,2.469,195,2.663,196,2.469,197,2.469,198,2.152,199,2.469,200,2.469,201,2.152,202,2.469,203,1.057,204,2.152,205,2.469,206,1.505,207,2.152,208,2.469,209,1.182,210,2.152,211,2.469,212,2.152,213,2.469,214,1.182,215,2.469,216,1.726]],["title/components/GameComponentComponent.html",[0,0.255,58,0.631]],["body/components/GameComponentComponent.html",[0,0.335,1,0.367,2,0.826,3,0.189,4,0.16,5,0.921,6,0.572,7,0.572,8,0.572,9,0.16,12,0.572,13,1.556,15,0.572,16,1.805,17,0.826,19,0.921,21,0.921,23,0.526,24,0.663,25,0.513,26,0.889,27,0.044,28,1.468,29,0.663,30,0.592,32,1.227,36,0.588,38,0.754,39,0.367,40,0.189,41,0.056,42,2.195,44,1.657,45,1.657,46,1.396,47,1.657,51,0.46,52,0.741,53,0.826,54,0.572,55,1.327,56,0.572,57,0.572,58,0.758,59,0.858,60,0.921,61,0.367,62,0.572,63,0.921,64,0.326,65,0.572,66,0.367,67,0.572,68,0.572,69,0.326,70,0.572,71,0.367,72,0.367,73,0.572,74,0.572,75,0.572,76,0.017,77,0.017,119,3.079,133,1.042,134,1.028,145,0.741,168,1.863,171,1.028,173,0.921,174,0.921,175,1.316,176,1.369,182,1.028,203,0.638,209,0.714,214,0.714,217,4.135,218,1.042,219,1.464,220,3.018,221,3.018,222,2.47,223,1.966,224,2.109,225,2.043,226,3.018,227,3.018,228,3.462,229,3.462,230,3.462,231,2.403,232,3.462,233,3.462,234,0.909,235,1.22,236,1.863,237,4.268,238,1.491,239,1.966,240,1.491,241,1.491,242,1.491,243,2.403,244,1.491,245,1.491,246,1.491,247,1.491,248,1.445,249,3.321,250,1.22,251,1.491,252,1.491,253,1.559,254,2.467,255,1.679,256,3.018,257,1.966,258,1.966,259,2.47,260,2.403,261,2.836,262,1.966,263,1.491,264,1.293,265,1.491,266,1.491,267,1.464,268,1.491,269,0.909,270,1.491,271,1.22,272,0.909,273,1.22,274,1.491,275,1.491,276,1.22,277,1.042,278,1.491,279,1.042,280,1.491,281,2.184,282,1.491,283,1.19,284,2.833,285,1.491,286,1.966,287,2.403,288,1.491,289,1.491,290,1.491,291,2.47,292,3.018,293,1.84,294,2.419,295,3.018,296,1.491,297,1.966,298,0.802,299,1.491,300,1.22,301,1.491,302,1.966,303,1.491,304,1.491,305,1.491,306,1.491,307,1.491,308,1.491,309,1.491,310,1.491,311,2.403,312,1.491,313,1.491,314,1.491,315,1.491,316,1.491,317,1.22,318,1.22,319,1.491,320,1.491,321,1.491,322,1.491,323,1.491,324,1.042,325,1.491,326,1.491,327,1.491,328,1.491,329,2.403,330,1.679,331,2.403,332,2.403,333,2.982,334,2.297,335,1.679,336,2.419,337,2.473,338,2.184,339,0.909,340,1.491,341,2.794,342,2.473,343,3.036,344,1.491,345,2.836,346,4.44,347,1.491,348,1.491,349,1.491,350,2.403,351,2.403,352,2.403,353,2.126,354,2.043,355,1.491,356,2.833,357,2.39,358,1.863,359,2.297,360,1.491,361,1.863,362,2.836,363,2.297,364,1.84,365,2.403,366,2.419,367,1.491,368,2.314,369,1.22,370,2.833,371,2.403,372,1.042,373,1.679,374,1.966,375,1.679,376,1.966,377,1.491,378,2.043,379,1.679,380,1.491,381,1.491,382,2.403,383,1.464,384,1.679,385,1.679,386,2.11,387,2.109,388,3.462,389,1.966,390,1.966,391,1.22,392,1.491,393,1.491,394,1.491,395,1.22,396,1.22,397,2.47,398,0.909,399,1.491,400,3.018,401,1.491,402,1.491,403,1.22,404,1.491,405,2.833,406,1.966,407,1.22,408,1.84,409,1.491,410,2.403,411,1.042,412,1.042,413,1.22,414,1.22,415,1.966,416,2.403,417,1.679,418,0.909,419,2.47,420,0.714,421,1.491,422,1.491,423,1.491,424,1.491,425,3.018,426,1.491,427,1.491,428,1.491,429,1.22,430,1.491,431,1.491,432,2.403,433,2.403,434,1.491,435,1.491,436,1.491,437,1.491,438,1.464,439,1.491,440,1.491,441,1.491,442,1.491,443,1.491,444,1.491]],["title/classes/GameConcret.html",[41,0.108,267,1.757]],["body/classes/GameConcret.html",[3,0.249,4,0.21,9,0.21,23,0.43,24,0.823,26,1.252,27,0.044,28,2.02,29,1.257,30,1.322,32,1.423,36,0.865,38,0.334,40,0.249,41,0.074,59,0.684,76,0.021,77,0.021,134,0.84,145,0.919,146,1.817,147,2.453,148,2.453,149,2.166,150,2.453,151,2.453,152,1.817,153,2.453,154,1.817,155,2.453,156,1.817,157,2.453,158,2.453,159,2.453,160,2.453,161,2.453,162,1.817,163,2.453,164,1.817,165,1.817,166,1.817,167,1.817,168,1.605,169,2.453,170,1.817,171,2.246,173,1.953,174,1.953,175,1.751,176,1.723,179,2.479,182,2.422,184,1.817,187,1.817,190,1.817,195,2.452,198,1.817,201,1.817,203,0.84,204,1.817,206,1.197,207,1.817,209,2.072,210,1.817,212,1.817,214,2.072,216,3.024,219,1.817,253,0.823,264,1.94,267,1.817,298,2.858,324,2.084,445,0.94,446,1.607,447,3.604,448,3.604,449,3.604,450,3.604,451,1.964,452,1.964,453,1.964,454,1.964,455,1.964,456,1.964,457,1.964,458,1.964,459,1.964,460,1.964,461,1.964,462,1.964,463,1.964,464,1.964,465,1.964,466,1.964,467,1.964,468,1.964,469,1.964,470,1.964,471,1.964,472,1.964,473,1.964,474,1.964,475,1.964,476,1.964,477,1.964,478,1.964,479,1.964,480,1.964,481,2.981,482,1.607,483,2.44,484,2.981,485,2.981,486,2.981,487,1.964,488,1.964,489,2.981,490,1.964,491,2.981,492,2.44]],["title/injectables/GameOptionServiceService.html",[236,1.551,493,1.757]],["body/injectables/GameOptionServiceService.html",[3,0.502,4,0.424,9,0.424,18,3.24,23,0.867,24,1.333,26,0.867,27,0.043,29,1.333,30,1.19,32,1.284,36,0.673,38,0.82,39,0.975,40,0.502,41,0.148,76,0.035,77,0.035,145,1.489,173,1.518,174,1.518,175,1.22,176,1.22,236,2.599,272,3.307,277,3.641,283,1.661,293,3.449,493,2.943,494,3.958,495,4.44,496,3.24,497,4.829,498,4.829,499,3.958,500,3.958,501,4.829,502,3.958,503,4.829,504,3.958,505,3.958,506,2.766,507,3.958,508,3.958]],["title/classes/HtmlBalise.html",[41,0.108,248,1.38]],["body/classes/HtmlBalise.html",[3,0.398,4,0.336,9,0.336,23,0.688,24,1.15,25,1.609,26,1.236,27,0.044,29,0.867,30,0.774,32,1.419,40,0.398,41,0.118,76,0.03,77,0.03,145,1.285,175,1.285,176,1.285,234,2.851,248,2.603,277,3.623,283,1.081,294,3.623,298,1.691,317,2.572,318,3.828,396,3.828,445,1.504,509,2.572,510,4.677,511,4.677,512,4.677,513,4.677,514,5.587,515,4.677,516,4.677,517,4.677,518,4.677,519,4.982,520,4.982,521,4.168,522,4.687,523,3.142,524,3.142,525,5.587,526,3.142,527,3.142,528,3.142,529,3.142,530,3.142,531,3.142,532,4.677,533,3.142,534,3.142,535,3.142,536,3.142,537,3.142,538,3.142,539,3.142,540,3.142,541,3.142,542,3.142,543,3.142,544,3.142,545,3.142,546,3.142,547,3.142,548,3.142,549,3.142,550,3.142,551,3.142,552,3.142,553,4.982]],["title/classes/HtmlDisplay.html",[41,0.108,225,1.38]],["body/classes/HtmlDisplay.html",[3,0.369,4,0.312,9,0.312,23,0.638,24,1.094,26,1.219,27,0.044,28,2.02,29,1.094,30,0.976,32,1.314,36,0.886,38,0.673,40,0.369,41,0.109,53,1.548,76,0.028,77,0.028,134,1.247,145,1.222,171,1.695,173,1.999,174,1.999,175,1.607,176,1.607,179,1.897,195,2.423,203,2.068,225,1.897,253,0.804,264,2.132,294,2.036,298,1.568,338,2.423,357,2.805,445,1.395,506,2.036,522,4.266,554,2.384,555,3.962,556,3.962,557,3.962,558,3.962,559,3.962,560,3.962,561,2.913,562,3.962,563,4.502,564,2.913,565,3.962,566,4.502,567,4.502,568,2.913,569,3.962,570,3.962,571,2.913,572,3.962,573,2.913,574,3.962,575,2.913,576,3.962,577,2.913,578,2.384,579,2.913,580,2.913,581,2.384,582,2.913,583,2.913,584,2.913,585,2.913,586,2.913,587,2.913,588,5.427,589,2.913,590,2.913,591,2.913,592,2.913,593,2.913,594,2.913,595,3.962]],["title/components/InformationButtonComponent.html",[0,0.255,61,0.71]],["body/components/InformationButtonComponent.html",[0,0.475,1,0.868,2,1.544,3,0.446,4,0.377,5,1.35,6,1.35,7,1.35,8,1.35,9,0.377,11,1.507,12,1.35,13,1.35,15,1.35,16,2.206,17,1.544,19,1.721,21,1.721,25,1.211,27,0.043,36,0.763,37,2.736,38,0.598,39,0.868,40,0.446,41,0.132,46,1.211,51,1.086,52,1.384,53,1.544,54,1.35,55,1.995,56,1.35,57,1.35,58,0.771,59,0.598,60,1.721,61,1.282,62,2.206,63,1.721,64,0.771,65,1.35,66,0.868,67,1.35,68,1.35,69,0.771,70,1.35,71,0.868,72,0.868,73,1.35,74,1.35,75,1.35,76,0.032,77,0.032,107,2.461,281,1.895,353,2.366,363,1.895,372,2.461,376,2.882,378,1.686,398,3.172,408,2.146,418,2.146,420,1.686,438,2.146,596,2.882,597,2.461,598,2.149,599,4.489,600,4.489,601,4.489,602,4.044,603,3.674,604,3.674,605,3.521,606,3.521,607,3.521,608,2.882]],["title/components/MainMenuComponent.html",[0,0.255,64,0.631]],["body/components/MainMenuComponent.html",[0,0.466,1,0.816,2,1.483,3,0.42,4,0.354,5,1.269,6,1.269,7,1.269,8,1.269,9,0.514,11,1.417,12,2.183,13,1.654,15,1.269,16,2.183,17,1.748,19,1.654,21,1.654,25,1.138,27,0.043,36,0.733,37,2.629,38,0.562,39,0.816,40,0.42,41,0.124,46,1.813,51,1.021,52,1.33,53,1.483,54,1.269,55,1.949,56,1.269,57,1.269,58,0.725,59,0.896,60,1.654,61,0.816,62,1.269,63,1.654,64,1.113,65,1.269,66,0.816,67,1.269,68,1.269,69,0.725,70,1.269,71,0.816,72,0.816,73,1.269,74,1.269,75,1.269,76,0.031,77,0.031,109,2.018,253,0.914,283,1.483,330,3.553,333,3.014,334,2.582,337,2.629,338,2.321,339,2.629,341,2.629,342,2.629,343,2.018,361,1.781,391,2.709,398,2.629,420,1.585,598,2.065,608,2.709,609,2.709,610,2.709,611,3.014,612,3.014,613,4.313,614,4.313,615,4.313,616,3.53,617,4.798,618,4.313,619,2.018,620,3.31,621,2.709,622,2.709,623,3.31,624,2.313,625,2.313,626,3.31,627,2.709]],["title/classes/ModeDecorator.html",[41,0.108,628,1.757]],["body/classes/ModeDecorator.html",[3,0.192,4,0.162,9,0.162,23,0.766,24,0.673,26,1.207,27,0.044,28,1.977,29,0.965,30,1.302,32,1.402,36,0.862,38,0.519,40,0.192,41,0.057,52,0.942,59,0.862,76,0.017,77,0.017,134,1.973,145,0.751,146,1.485,147,2.132,148,2.132,149,1.882,150,1.862,151,1.862,152,1.485,153,1.862,154,1.485,155,2.132,156,1.485,157,1.862,158,2.132,159,2.132,160,2.132,161,2.132,162,1.485,163,1.862,164,1.485,165,1.485,166,1.485,167,1.485,168,1.312,169,2.132,170,1.485,171,2.198,173,1.945,174,1.945,175,1.725,176,1.683,179,2.14,182,2.243,184,1.485,187,1.485,190,0.925,195,2.201,198,1.485,201,0.925,203,1.043,204,1.485,206,1.485,207,1.485,209,0.726,210,1.485,212,1.485,214,1.462,216,2.134,219,1.485,224,3.004,225,1.674,234,0.925,248,0.726,249,3.958,253,0.965,254,1.644,262,1.242,264,2.313,279,3.004,281,1.644,283,0.522,284,1.242,293,0.925,297,1.242,298,2.651,324,3.004,334,0.817,405,1.242,445,0.726,612,1.06,628,1.485,629,1.242,630,2.5,631,2.5,632,2.858,633,2.5,634,1.995,635,2.862,636,1.995,637,2.862,638,1.995,639,2.437,640,2.437,641,1.517,642,1.517,643,1.517,644,1.517,645,1.517,646,1.517,647,1.242,648,1.517,649,1.995,650,1.517,651,1.517,652,1.517,653,1.517,654,1.517,655,1.517,656,1.517,657,1.517,658,1.517,659,1.517,660,1.517,661,1.517,662,1.517,663,1.517,664,1.517,665,1.517,666,1.517,667,1.517,668,1.242,669,1.517,670,1.517,671,1.995,672,1.517,673,1.242,674,1.517,675,1.517,676,1.517,677,1.517,678,1.517,679,1.517,680,1.242,681,1.517,682,1.517,683,1.517,684,1.517,685,1.517,686,2.437,687,1.517,688,2.437,689,2.132,690,1.517,691,3.054,692,1.517,693,1.517,694,3.497,695,3.497,696,1.517,697,3.054,698,2.437,699,2.437,700,2.437,701,2.437,702,3.054,703,1.517,704,3.497,705,2.437,706,1.517,707,2.437,708,1.517,709,1.517,710,1.517,711,1.517,712,1.517,713,1.517,714,2.437,715,2.437,716,3.497,717,1.242,718,3.497,719,2.437,720,3.054,721,1.517,722,2.437,723,1.517,724,2.437,725,1.517,726,1.517,727,1.517,728,1.517,729,1.517,730,1.517,731,1.517,732,1.517,733,2.437,734,1.517,735,1.517,736,1.517,737,1.517,738,1.517,739,1.517,740,2.437,741,2.437,742,1.517,743,1.517,744,2.437,745,1.517,746,1.517,747,1.517,748,1.517,749,1.517,750,1.517,751,1.517,752,1.517,753,1.517,754,1.517,755,1.517,756,1.517,757,1.517,758,1.517,759,2.437,760,1.517,761,1.517,762,1.517,763,2.437,764,1.517,765,1.517,766,1.517,767,2.437,768,1.517,769,1.517,770,1.517]],["title/components/PlayerCardComponent.html",[0,0.255,66,0.71]],["body/components/PlayerCardComponent.html",[0,0.442,1,0.699,2,1.338,3,0.36,4,0.304,5,1.088,6,1.088,7,1.088,8,1.088,9,0.304,11,1.214,12,1.088,13,1.703,15,1.088,16,2.122,17,1.338,19,1.492,21,1.492,23,0.621,25,0.976,26,0.621,27,0.043,29,0.783,30,1.094,32,0.699,36,0.812,38,0.482,39,0.699,40,0.36,41,0.106,42,2.288,44,1.863,45,1.863,46,1.527,47,1.863,51,0.875,52,1.2,53,1.338,54,1.088,55,1.832,56,1.088,57,1.088,58,0.621,59,0.482,60,1.492,61,0.699,62,1.088,63,1.492,64,0.621,65,1.088,66,1.177,67,2.189,68,1.088,69,0.621,70,1.088,71,0.699,72,0.699,73,1.088,74,1.088,75,1.088,76,0.028,77,0.028,122,2.719,182,1.665,253,1.617,334,2.094,335,1.982,336,1.982,337,1.729,338,1.527,339,1.729,341,1.729,342,1.729,343,1.729,345,1.982,353,1.863,354,2.094,357,1.527,358,2.094,359,2.39,361,2.094,362,1.982,363,2.694,364,2.371,368,2.371,370,4.097,375,3.103,378,2.126,379,1.982,383,2.706,384,1.982,386,2.912,387,3.103,397,4.232,407,3.184,414,3.184,415,2.322,418,1.729,598,1.863,619,2.706,625,1.982,627,2.322,771,3.184,772,2.322,773,3.89,774,4.44,775,3.89,776,3.184,777,2.837,778,3.89,779,2.837,780,2.837,781,1.982,782,2.837,783,2.837,784,2.837,785,2.837,786,2.837,787,2.322,788,2.837,789,2.837,790,3.89,791,2.837,792,2.837,793,2.322,794,2.837,795,2.837,796,2.837,797,2.837,798,2.837,799,2.837,800,2.837,801,2.837,802,2.837,803,2.322]],["title/components/SettingsComponentComponent.html",[0,0.255,69,0.631]],["body/components/SettingsComponentComponent.html",[0,0.375,1,0.362,2,0.818,3,0.187,4,0.157,5,0.564,6,0.564,7,0.564,8,0.564,9,0.32,11,0.63,12,0.564,13,1.904,15,0.564,16,1.797,17,0.818,19,0.912,21,0.912,23,0.826,24,0.656,25,0.506,26,1.129,27,0.044,28,1.569,29,1.348,30,1.203,32,1.241,36,0.751,38,0.404,39,0.362,40,0.187,41,0.055,42,1.806,44,1.432,45,1.432,46,1.181,47,1.432,51,0.454,52,0.733,53,0.818,54,0.564,55,1.317,56,0.564,57,0.564,58,0.322,59,0.685,60,0.912,61,0.362,62,0.564,63,0.912,64,0.322,65,0.564,66,0.362,67,0.912,68,0.564,69,0.752,70,1.694,71,0.362,72,0.362,73,0.564,74,0.564,75,0.564,76,0.017,77,0.017,116,3.108,134,2.051,145,0.733,171,1.017,173,1.446,174,1.446,175,1.163,176,1.163,179,1.138,182,1.891,203,0.63,209,1.432,214,1.931,218,1.028,222,2.448,223,1.946,234,0.897,235,1.204,236,1.849,239,1.946,250,1.204,253,1.472,254,2.284,255,2.401,259,1.946,261,3.349,271,1.204,272,1.823,273,1.204,276,1.204,281,1.279,283,0.506,286,2.812,291,3.086,293,1.823,300,3.086,302,1.204,333,3.349,334,2.871,335,3.189,336,2.635,337,2.587,338,2.456,339,0.897,341,2.693,342,2.459,343,3.026,345,3.275,353,1.931,354,1.279,356,2.812,358,1.61,359,1.279,361,1.61,362,2.635,363,2.171,364,1.823,366,2.091,373,1.028,378,1.432,383,1.449,384,1.661,385,1.028,386,1.823,387,1.028,389,1.946,395,1.946,408,1.823,411,2.966,412,2.091,413,1.946,417,2.635,418,0.897,419,1.946,420,1.645,438,1.823,482,1.204,483,1.204,578,1.204,598,1.138,611,1.661,612,1.661,616,3.086,619,0.897,621,1.204,624,1.028,625,2.635,632,2.091,689,1.823,781,1.661,787,1.204,803,1.946,804,4.173,805,2.377,806,2.992,807,3.771,808,2.992,809,2.992,810,2.377,811,2.377,812,2.377,813,2.377,814,3.435,815,1.471,816,1.471,817,1.471,818,3.435,819,2.377,820,1.471,821,2.377,822,1.471,823,2.377,824,1.471,825,1.471,826,1.471,827,1.471,828,1.471,829,1.471,830,2.377,831,1.471,832,1.471,833,1.471,834,1.471,835,2.992,836,1.471,837,1.471,838,1.471,839,1.471,840,1.471,841,1.471,842,1.471,843,2.377,844,1.471,845,1.471,846,1.471,847,1.471,848,1.471,849,1.471,850,1.471,851,1.471,852,2.377,853,1.471,854,1.471,855,1.471,856,1.471,857,1.471,858,2.377,859,1.471,860,1.471,861,1.471,862,1.471,863,1.471,864,1.471,865,1.471,866,1.471,867,2.377,868,1.471,869,1.471,870,1.471,871,1.471,872,1.471,873,1.471,874,1.471,875,1.471,876,1.471,877,2.377,878,3.301,879,2.377,880,2.377,881,2.377,882,1.471,883,1.471,884,1.471,885,1.471,886,2.377,887,1.471,888,1.471,889,1.471,890,2.377,891,1.471,892,1.471,893,1.471,894,1.471,895,2.377,896,1.471,897,1.471,898,1.471,899,1.661,900,1.471,901,1.471,902,1.471,903,1.204,904,1.471,905,2.812,906,2.377,907,1.471,908,1.471,909,1.471,910,4.245,911,1.471,912,2.992,913,1.471,914,1.471,915,2.377,916,1.204,917,1.471,918,2.377,919,2.377,920,1.471,921,1.471,922,1.471,923,1.471,924,1.471,925,1.471,926,1.471,927,1.471,928,1.471,929,1.471,930,1.471,931,1.471,932,1.471]],["title/components/StartButtonComponent.html",[0,0.255,71,0.71]],["body/components/StartButtonComponent.html",[0,0.491,1,0.567,2,1.154,3,0.292,4,0.246,5,0.883,6,0.883,7,0.883,8,0.883,9,0.246,11,0.985,12,0.883,13,0.883,15,0.883,16,2.031,17,1.154,19,1.287,21,1.287,23,0.504,25,0.792,26,1.058,27,0.044,28,1.821,29,1.277,30,1.14,32,1.229,34,4.521,36,0.847,38,0.391,39,0.567,40,0.292,41,0.086,42,1.607,44,1.102,45,1.102,46,1.792,47,1.102,51,0.71,52,1.035,53,1.154,54,0.883,55,1.669,56,0.883,57,0.883,58,0.504,59,0.391,60,1.287,61,0.567,62,0.883,63,1.287,64,0.504,65,0.883,66,0.567,67,0.883,68,0.883,69,0.504,70,0.883,71,1.072,72,0.567,73,0.883,74,0.883,75,0.883,76,0.024,77,0.024,104,3.572,145,1.035,175,0.71,176,0.71,253,0.635,281,1.239,283,0.792,353,2.495,354,1.239,357,2.684,358,1.239,359,1.239,361,1.806,363,2.342,364,2.046,368,1.403,369,1.884,375,2.346,378,2.084,383,1.403,385,2.346,398,3.367,403,1.884,406,1.884,408,1.403,420,1.607,429,1.884,438,1.403,597,1.609,598,1.607,602,3.242,603,2.747,619,2.944,689,1.403,776,2.747,899,2.346,903,1.884,916,1.884,933,4.183,934,3.356,935,3.356,936,4.441,937,3.356,938,4.987,939,4.352,940,3.961,941,3.961,942,3.961,943,3.356,944,4.627,945,2.302,946,5.295,947,5.295,948,5.295,949,2.302,950,2.302,951,2.302,952,2.302,953,3.356,954,3.961,955,2.302,956,4.352,957,4.352,958,3.356,959,3.356,960,2.302,961,3.356,962,2.302,963,2.302,964,3.356,965,2.302,966,2.302,967,2.302,968,3.356,969,2.302,970,2.302,971,3.356,972,2.302,973,2.302,974,2.302,975,2.302]],["title/classes/StrictDecorator.html",[41,0.108,269,1.757]],["body/classes/StrictDecorator.html",[3,0.27,4,0.228,9,0.228,23,0.467,24,0.875,26,1.256,27,0.043,28,1.966,29,1.045,30,1.199,32,1.444,36,0.917,38,0.539,40,0.27,41,0.08,52,0.978,59,0.643,76,0.023,77,0.023,134,0.912,145,0.978,146,1.933,147,2.308,148,2.308,149,2.038,150,2.308,151,2.308,152,1.933,153,2.308,154,1.933,155,2.308,156,1.933,157,2.308,158,2.308,159,2.308,160,2.308,161,2.308,162,1.933,163,2.308,164,1.933,165,1.933,166,1.933,167,1.933,168,1.707,169,2.308,170,1.299,171,2.082,173,2.07,174,2.07,175,1.791,176,1.706,179,2.394,182,2.225,184,1.299,187,1.299,190,1.299,195,2.038,198,1.299,201,1.299,203,0.912,204,1.299,206,1.299,207,1.299,209,1.021,210,1.299,212,1.299,214,1.021,224,1.49,225,1.021,248,1.021,253,0.588,254,1.147,264,1.707,269,1.933,279,1.49,390,1.745,445,1.021,628,3.593,630,2.595,631,2.595,632,2.931,633,2.595,634,2.595,635,3.432,636,2.595,637,3.099,638,2.595,647,1.745,649,2.595,668,1.745,671,1.745,673,1.745,680,1.745,717,1.745,976,1.745,977,3.171,978,5.861,979,2.132,980,2.132,981,2.132,982,2.132,983,2.132,984,2.132,985,2.132,986,2.132,987,2.132,988,2.132,989,2.132,990,2.132,991,2.132,992,2.132,993,2.132,994,2.132,995,2.132,996,2.132,997,2.132,998,2.132,999,2.132,1000,2.132,1001,2.132,1002,2.132,1003,2.132,1004,2.132,1005,2.132,1006,2.132,1007,2.132,1008,2.132,1009,2.132,1010,2.132,1011,2.132,1012,2.132,1013,2.132,1014,2.132,1015,3.787,1016,3.171,1017,2.132,1018,2.132,1019,3.171,1020,2.132]],["title/components/TitleComponent.html",[0,0.255,72,0.71]],["body/components/TitleComponent.html",[0,0.451,1,0.742,2,1.394,3,0.382,4,0.322,5,1.155,6,1.155,7,1.155,8,1.155,9,0.322,11,1.289,12,1.756,13,1.155,15,1.155,16,2.147,17,1.394,19,1.554,21,1.554,25,1.758,27,0.043,36,0.689,37,2.47,38,0.778,39,0.742,40,0.382,41,0.113,42,2.345,44,1.94,46,1.036,51,0.929,52,1.25,53,1.394,54,1.155,55,1.878,56,1.155,57,1.155,58,0.66,59,0.512,60,1.554,61,0.742,62,1.155,63,1.554,64,0.66,65,1.155,66,0.742,67,1.155,68,1.155,69,0.66,70,1.155,71,0.742,72,1.207,73,1.756,74,1.155,75,1.155,76,0.029,77,0.029,253,1.596,330,2.832,353,1.94,354,2.181,357,2.833,358,2.181,359,2.181,366,2.832,368,2.47,372,2.105,373,3.423,374,3.317,378,1.94,379,2.105,386,1.836,411,2.832,412,2.105,417,2.105,420,1.94,598,1.94,622,2.465,624,2.105,689,1.836,781,2.832,793,2.465,878,2.465,899,2.832,905,3.317,1021,2.465,1022,4.052,1023,4.579,1024,4.052,1025,4.898,1026,4.052,1027,3.012,1028,3.012,1029,3.012,1030,3.012,1031,3.012,1032,3.012,1033,3.012,1034,3.012,1035,3.012,1036,3.012,1037,4.052,1038,3.012,1039,3.012,1040,4.052,1041,3.012,1042,3.012,1043,3.012,1044,3.012,1045,3.012,1046,3.012,1047,3.012,1048,3.012,1049,3.012,1050,3.012,1051,3.012,1052,4.052,1053,3.012,1054,3.012,1055,3.012,1056,3.012,1057,3.012,1058,3.012,1059,3.012,1060,3.012,1061,3.012,1062,3.012,1063,3.012,1064,3.012,1065,3.012,1066,3.012,1067,3.012,1068,3.012,1069,3.012]],["title/coverage.html",[1070,3.219]],["body/coverage.html",[0,0.505,1,0.918,9,0.399,10,3.05,26,0.816,27,0.043,41,0.205,58,0.816,59,0.633,61,0.918,64,0.816,66,0.918,69,0.816,71,0.918,72,0.918,76,0.033,77,0.033,104,2.605,107,2.605,109,2.272,116,2.272,119,2.272,122,2.605,142,2.272,144,3.05,217,3.05,218,3.251,225,1.785,236,2.006,248,1.785,253,1.578,261,3.896,267,2.272,269,2.272,272,2.272,283,1.282,446,3.05,493,2.272,495,3.05,496,3.05,509,3.05,554,3.05,596,3.05,597,3.251,609,3.05,610,3.05,628,2.272,629,3.05,771,3.05,772,3.05,804,3.05,933,3.05,976,3.05,1021,3.05,1070,3.05,1071,3.727,1072,3.727,1073,3.727,1074,4.653,1075,3.727,1076,3.727,1077,3.727,1078,3.727,1079,3.727,1080,4.653,1081,5.072,1082,3.727,1083,3.727,1084,3.727,1085,3.727,1086,3.727,1087,3.727]],["title/dependencies.html",[81,2.113,1088,1.683]],["body/dependencies.html",[27,0.043,39,1.04,45,2.021,46,1.451,47,2.021,76,0.036,77,0.036,81,2.572,99,4.107,100,3.507,124,3.454,133,2.949,506,2.949,1089,4.22,1090,5.914,1091,4.22,1092,4.22,1093,4.22,1094,4.22,1095,4.22,1096,4.22,1097,4.22,1098,4.22,1099,4.22,1100,4.22,1101,4.22,1102,4.22]],["title/index.html",[23,0.527,1103,2.408,1104,2.408]],["body/index.html",[0,0.452,4,0.407,27,0.034,31,3.113,36,0.646,76,0.034,77,0.034,94,2.658,149,3.016,219,2.318,283,1.308,492,3.113,581,4.19,604,4.19,611,2.658,936,3.113,1088,2.658,1105,4.712,1106,3.803,1107,5.119,1108,3.113,1109,3.803,1110,3.803,1111,4.712,1112,5.499,1113,5.68,1114,3.803,1115,3.803,1116,3.803,1117,3.803,1118,3.803,1119,3.803,1120,3.803,1121,3.803,1122,3.803,1123,3.803,1124,5.119,1125,5.119,1126,3.803,1127,5.35,1128,3.803,1129,3.803,1130,3.803,1131,3.803,1132,4.712,1133,4.712,1134,5.35,1135,4.712,1136,4.712,1137,3.803,1138,3.803,1139,3.803,1140,3.803,1141,4.712,1142,3.803,1143,3.803,1144,3.803,1145,3.803,1146,3.803,1147,3.803,1148,3.803,1149,3.803,1150,3.803,1151,2.658,1152,3.803]],["title/modules.html",[80,2.117]],["body/modules.html",[27,0.038,76,0.038,77,0.038,79,2.798,80,2.47,90,2.47,100,3.208,1153,4.59,1154,4.59,1155,5.271,1156,4.59,1157,4.59]],["title/overview.html",[1151,2.749]],["body/overview.html",[1,1.403,2,1.323,27,0.042,51,1.186,58,1.127,61,1.268,64,1.127,66,1.268,69,1.127,71,1.268,72,1.268,76,0.034,77,0.034,78,2.344,79,3.675,80,2.07,81,2.344,82,3.148,83,3.148,84,3.148,85,2.688,86,3.148,87,3.148,88,3.148,89,3.148,90,2.769,91,4.211,92,3.883,93,3.148,94,2.688,132,2.344,142,2.344,254,2.553,255,2.688,257,3.148,258,3.148,445,1.842,493,2.344,1151,2.688,1158,3.846]],["title/properties.html",[24,0.957,1088,1.683]],["body/properties.html",[24,1.284,27,0.04,76,0.038,77,0.038,1108,3.808,1159,4.653]],["title/routes.html",[132,2.398]],["body/routes.html",[27,0.038,76,0.038,77,0.038,132,2.855]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":253,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1159,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1056,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.03em",{"_index":1035,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.05em",{"_index":1065,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.06em",{"_index":1044,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.13.3",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":1038,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.1px",{"_index":427,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.2em",{"_index":1040,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.2px",{"_index":428,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.35",{"_index":792,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.350s",{"_index":920,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.3em",{"_index":1067,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.3rem",{"_index":407,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.3s",{"_index":415,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5",{"_index":1046,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.5em",{"_index":802,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.5px",{"_index":928,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.8em",{"_index":927,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.8rem",{"_index":782,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.8s",{"_index":784,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0/14",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1076,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1085,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":970,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["001546",{"_index":801,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["00a1ef",{"_index":1050,"title":{},"body":{"components/TitleComponent.html":{}}}],["0fa",{"_index":370,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0px",{"_index":790,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1",{"_index":254,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{},"overview.html":{}}}],["1).tostring().padstart(2",{"_index":767,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["1.1.13",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":800,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1.2px",{"_index":382,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.4em",{"_index":894,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.5em",{"_index":360,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.7rem",{"_index":969,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["1.8em",{"_index":393,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1/1",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["1/15",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":355,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10",{"_index":302,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["100",{"_index":261,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1017,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["100px",{"_index":439,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["102px",{"_index":798,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["10px",{"_index":362,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11",{"_index":436,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1125a4",{"_index":930,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["11em",{"_index":1030,"title":{},"body":{"components/TitleComponent.html":{}}}],["120px",{"_index":371,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["12px",{"_index":964,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["13px",{"_index":907,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15",{"_index":830,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15.0.1",{"_index":1109,"title":{},"body":{"index.html":{}}}],["150px",{"_index":399,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["151px",{"_index":799,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["15deg",{"_index":1032,"title":{},"body":{"components/TitleComponent.html":{}}}],["15px",{"_index":625,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["16.2.12",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":788,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["165ff3",{"_index":1043,"title":{},"body":{"components/TitleComponent.html":{}}}],["170",{"_index":426,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1b35d3",{"_index":926,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1em",{"_index":377,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1fr",{"_index":349,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1px",{"_index":375,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["2",{"_index":255,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":365,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2/2",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":259,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["20125f",{"_index":1052,"title":{},"body":{"components/TitleComponent.html":{}}}],["20px",{"_index":369,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["210px",{"_index":400,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["21px",{"_index":794,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["25",{"_index":624,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["255",{"_index":425,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["25px",{"_index":389,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["281775",{"_index":1066,"title":{},"body":{"components/TitleComponent.html":{}}}],["2em",{"_index":381,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2p",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["2px",{"_index":385,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["3",{"_index":256,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3.2em",{"_index":431,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30",{"_index":367,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["300px",{"_index":434,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30px",{"_index":395,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["3146d3",{"_index":606,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["3351ff",{"_index":902,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["35",{"_index":1051,"title":{},"body":{"components/TitleComponent.html":{}}}],["35px",{"_index":626,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["3em",{"_index":1064,"title":{},"body":{"components/TitleComponent.html":{}}}],["3px",{"_index":916,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["4",{"_index":1158,"title":{},"body":{"overview.html":{}}}],["40",{"_index":260,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["40px",{"_index":901,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["42px",{"_index":795,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["4px",{"_index":967,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["5",{"_index":257,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["5.5em",{"_index":1063,"title":{},"body":{"components/TitleComponent.html":{}}}],["50",{"_index":781,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["50px",{"_index":406,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["55",{"_index":622,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["5em",{"_index":1042,"title":{},"body":{"components/TitleComponent.html":{}}}],["5px",{"_index":803,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["6",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":923,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["6px",{"_index":429,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["7.5.0",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["730505",{"_index":444,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["75",{"_index":1055,"title":{},"body":{"components/TitleComponent.html":{}}}],["797777",{"_index":441,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["7deg",{"_index":1069,"title":{},"body":{"components/TitleComponent.html":{}}}],["7px",{"_index":387,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["8",{"_index":258,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["8/8",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":886,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["800px",{"_index":392,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["80px",{"_index":391,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["82",{"_index":884,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["82px",{"_index":796,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["8313e7",{"_index":1053,"title":{},"body":{"components/TitleComponent.html":{}}}],["8ba2d0",{"_index":1039,"title":{},"body":{"components/TitleComponent.html":{}}}],["90",{"_index":440,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["92px",{"_index":797,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["94a0b9",{"_index":1057,"title":{},"body":{"components/TitleComponent.html":{}}}],["95",{"_index":402,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["absolute",{"_index":878,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["abstract",{"_index":681,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["active",{"_index":419,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["actual_component",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["actualfunctioninbacklog",{"_index":447,"title":{},"body":{"classes/GameConcret.html":{}}}],["actualplayerturn",{"_index":630,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["actualstage",{"_index":701,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["actualtask",{"_index":352,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["add",{"_index":1144,"title":{},"body":{"index.html":{}}}],["addclass",{"_index":555,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addclass(id",{"_index":562,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement",{"_index":556,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement(type",{"_index":565,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue",{"_index":566,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue[key",{"_index":590,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addnote",{"_index":146,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["addnote(value",{"_index":170,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["addplayername",{"_index":810,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addplayername(event",{"_index":816,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addtext",{"_index":557,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext(text",{"_index":570,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["afterviewinit",{"_index":220,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["agree",{"_index":748,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["align",{"_index":341,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["angular",{"_index":581,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["angular/animations",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"dependencies.html":{}}}],["angular/src/tools/esbuild/javascript",{"_index":583,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["animation",{"_index":918,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["another",{"_index":948,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["app.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":911,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["application",{"_index":1118,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":79,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":90,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":340,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["artifacts",{"_index":1128,"title":{},"body":{"index.html":{}}}],["auto",{"_index":410,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["automatically",{"_index":1119,"title":{},"body":{"index.html":{}}}],["available",{"_index":1157,"title":{},"body":{"modules.html":{}}}],["average",{"_index":880,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["b0b0b0",{"_index":789,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["background",{"_index":378,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["background.jpg",{"_index":780,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["backlog",{"_index":761,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["backlogdata",{"_index":209,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["backlogdata[\"boutton",{"_index":311,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogdata[data[key",{"_index":310,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["balise",{"_index":224,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["balise.finishbutton.style.display",{"_index":755,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.inputvalue.style.display",{"_index":688,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.playerbutton.style.display",{"_index":707,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.validatebutton.name",{"_index":745,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.validatebutton.style.display",{"_index":744,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["behaviorsubject",{"_index":505,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["behaviorsubject(null",{"_index":501,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["better",{"_index":773,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["between",{"_index":627,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["black",{"_index":1041,"title":{},"body":{"components/TitleComponent.html":{}}}],["block",{"_index":689,"title":{},"body":{"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["boolean",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["bootstrap",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":363,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["bottom_input",{"_index":895,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["box",{"_index":384,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["brightness(0.8",{"_index":404,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["brightness(90",{"_index":973,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["browse",{"_index":1155,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["bsetupdefaultvalue",{"_index":448,"title":{},"body":{"classes/GameConcret.html":{}}}],["build",{"_index":1127,"title":{},"body":{"index.html":{}}}],["button",{"_index":398,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["button's",{"_index":958,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["button.component",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":603,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.scss",{"_index":602,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts",{"_index":597,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:17",{"_index":952,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:22",{"_index":945,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:27",{"_index":949,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:32",{"_index":951,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:37",{"_index":950,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:42",{"_index":955,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:48",{"_index":960,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button/information",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["button/start",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button_icon",{"_index":423,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_label",{"_index":422,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["buttonclicked",{"_index":944,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["c7c7c7",{"_index":974,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["cafe",{"_index":262,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["calc(50",{"_index":906,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["called",{"_index":947,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["capabilities",{"_index":1146,"title":{},"body":{"index.html":{}}}],["caption_button",{"_index":968,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["caption_button:hover",{"_index":972,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captionbackground",{"_index":940,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captioncolor",{"_index":941,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["card",{"_index":397,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["card'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["card.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":775,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.scss",{"_index":774,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.ts",{"_index":772,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":777,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card/player",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["center",{"_index":343,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["change",{"_index":936,"title":{},"body":{"components/StartButtonComponent.html":{},"index.html":{}}}],["changemod",{"_index":811,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changemod(event",{"_index":819,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["check",{"_index":1150,"title":{},"body":{"index.html":{}}}],["child",{"_index":1037,"title":{},"body":{"components/TitleComponent.html":{}}}],["choice",{"_index":1140,"title":{},"body":{"index.html":{}}}],["choose",{"_index":612,"title":{},"body":{"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{}}}],["choosedefaultvalue",{"_index":147,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["chose",{"_index":881,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["circle",{"_index":915,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["class",{"_index":41,"title":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["classe",{"_index":563,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["classes",{"_index":445,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"overview.html":{}}}],["classes/decorateur/game",{"_index":266,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/gameconcret",{"_index":268,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/strictdecorator",{"_index":270,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/facade/htmldisplay",{"_index":274,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/singleton/htmlbalise",{"_index":275,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clear",{"_index":329,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clearhtml",{"_index":558,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearhtml(element",{"_index":572,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearinstance",{"_index":519,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["cli",{"_index":1107,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":959,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["clip",{"_index":1058,"title":{},"body":{"components/TitleComponent.html":{}}}],["closebalise",{"_index":567,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["cluster_appmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1122,"title":{},"body":{"index.html":{}}}],["coffeeselected",{"_index":634,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["coffeeselected(playername",{"_index":647,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["color",{"_index":353,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["column",{"_index":336,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["columns",{"_index":347,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["come",{"_index":1022,"title":{},"body":{"components/TitleComponent.html":{}}}],["command",{"_index":1141,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["component.component",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.html",{"_index":223,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.scss",{"_index":222,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts",{"_index":218,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:102",{"_index":247,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:13",{"_index":815,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:15",{"_index":238,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:17",{"_index":828,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:19",{"_index":826,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:20",{"_index":251,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:21",{"_index":831,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:22",{"_index":252,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:23",{"_index":829,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:24",{"_index":263,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:25",{"_index":832,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:26",{"_index":250,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:27",{"_index":833,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:28",{"_index":265,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:29",{"_index":822,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:30",{"_index":242,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:32",{"_index":241,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:37",{"_index":817,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:47",{"_index":820,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:49",{"_index":240,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:52",{"_index":824,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:63",{"_index":246,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:75",{"_index":825,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:81",{"_index":245,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:92",{"_index":827,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:98",{"_index":244,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component/game",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"coverage.html":{}}}],["component/settings",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["components/game",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/information",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/player",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/start",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title/title.component",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["configurable",{"_index":934,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["connect",{"_index":579,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console",{"_index":807,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(\"aa",{"_index":593,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console.log(\"test",{"_index":865,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(actualstage",{"_index":703,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["console.log(this.backlogdata",{"_index":863,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.getbacklogdata",{"_index":685,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["console.log(this.html.content",{"_index":690,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["console.log(this.mode",{"_index":844,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.players",{"_index":482,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["const",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["constructor",{"_index":234,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor(dataservice",{"_index":235,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor(game",{"_index":639,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["constructor(private",{"_index":276,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["container",{"_index":332,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container_button",{"_index":620,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_info",{"_index":623,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["contains",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":338,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["coverage",{"_index":1070,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatanddownloadjson",{"_index":148,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["create",{"_index":598,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["cross",{"_index":442,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["current",{"_index":778,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["cursor",{"_index":408,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["d000ff",{"_index":388,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dafoe",{"_index":1062,"title":{},"body":{"components/TitleComponent.html":{}}}],["data",{"_index":293,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{}}}],["data[key",{"_index":297,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["dataservice",{"_index":239,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["declarations",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["defaultvalue",{"_index":449,"title":{},"body":{"classes/GameConcret.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["dependencies",{"_index":81,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["dev",{"_index":1115,"title":{},"body":{"index.html":{}}}],["development",{"_index":1110,"title":{},"body":{"index.html":{}}}],["devkit/build",{"_index":582,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["direction",{"_index":335,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["directive",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directives",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1126,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1131,"title":{},"body":{"index.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["displayhtml",{"_index":559,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml(element",{"_index":574,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dist",{"_index":1130,"title":{},"body":{"index.html":{}}}],["div",{"_index":569,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["document.getelementbyid(\"actualtask",{"_index":539,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"endmessage",{"_index":541,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"finishbutton",{"_index":549,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"gamemodemessage",{"_index":551,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"playerbutton",{"_index":545,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"stage1",{"_index":317,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"standarvalue",{"_index":537,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"texttoshow",{"_index":543,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"validatebutton",{"_index":547,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(id",{"_index":591,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["documentation",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["don't",{"_index":747,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["downloadjson",{"_index":631,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["duration",{"_index":787,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["dynamic",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":783,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["e2e",{"_index":1138,"title":{},"body":{"index.html":{}}}],["e9e9ea",{"_index":929,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["each",{"_index":749,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["ease",{"_index":416,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["element",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["element.classlist.add(classe",{"_index":594,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element.innerhtml",{"_index":595,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["end",{"_index":149,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"index.html":{}}}],["endmessage",{"_index":510,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["entry",{"_index":763,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["entry['work",{"_index":765,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["entry[key",{"_index":764,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["evenly",{"_index":621,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event",{"_index":818,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.files[0",{"_index":846,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.placeholder",{"_index":838,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value",{"_index":835,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["eventemitter",{"_index":954,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["everything",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["evryboddysamemind",{"_index":713,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["execute",{"_index":1135,"title":{},"body":{"index.html":{}}}],["exo",{"_index":1029,"title":{},"body":{"components/TitleComponent.html":{}}}],["explain",{"_index":599,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["explode",{"_index":919,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["exports",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":977,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["extract",{"_index":854,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["facade/htmldisplay",{"_index":679,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["face",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":264,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["family",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["ff61af",{"_index":1054,"title":{},"body":{"components/TitleComponent.html":{}}}],["fff",{"_index":386,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["ffffff",{"_index":376,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":850,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["filereader",{"_index":848,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["files",{"_index":1121,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1059,"title":{},"body":{"components/TitleComponent.html":{}}}],["filter",{"_index":403,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["finishbutton",{"_index":511,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["first",{"_index":1143,"title":{},"body":{"index.html":{}}}],["flex",{"_index":334,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["font",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["form",{"_index":882,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_bottom",{"_index":896,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_top",{"_index":883,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["full",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":739,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["further",{"_index":1147,"title":{},"body":{"index.html":{}}}],["game",{"_index":59,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["game_label:before",{"_index":904,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["gamecomponentcomponent",{"_index":58,"title":{"components/GameComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameconcret",{"_index":267,"title":{"classes/GameConcret.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"coverage.html":{}}}],["gamemodemessage",{"_index":512,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["gameoptionserviceservice",{"_index":236,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["gap",{"_index":891,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["generate",{"_index":1124,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1106,"title":{},"body":{"index.html":{}}}],["getactualstage",{"_index":150,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getbacklogdata",{"_index":151,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getbacklogdatanote",{"_index":152,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getbacklogdatanote(key",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getdefaultvalue",{"_index":153,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getinstance",{"_index":520,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["getmode",{"_index":228,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote",{"_index":154,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getnote(key",{"_index":187,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getnotes",{"_index":155,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayer",{"_index":156,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayer(key",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayernumber",{"_index":157,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayers",{"_index":158,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getslidervalue",{"_index":812,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event",{"_index":821,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getting",{"_index":1103,"title":{"index.html":{}},"body":{}}],["go",{"_index":1149,"title":{},"body":{"index.html":{}}}],["goal",{"_index":601,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["gradient(#032d50",{"_index":1049,"title":{},"body":{"components/TitleComponent.html":{}}}],["graph",{"_index":1156,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":346,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["h1",{"_index":793,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["h2",{"_index":1060,"title":{},"body":{"components/TitleComponent.html":{}}}],["h3",{"_index":893,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["header",{"_index":344,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["header_sidenav",{"_index":435,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["height",{"_index":333,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["help",{"_index":604,"title":{},"body":{"components/InformationButtonComponent.html":{},"index.html":{}}}],["here",{"_index":613,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["hidden",{"_index":786,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["home",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hover",{"_index":418,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["html",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["htmlbalise",{"_index":248,"title":{"classes/HtmlBalise.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["htmlbalise.getinstance",{"_index":279,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["htmlbalise.instance",{"_index":553,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlbuttonelement",{"_index":532,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmldisplay",{"_index":225,"title":{"classes/HtmlDisplay.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["htmldivelement",{"_index":525,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlelement",{"_index":522,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["htmlinputelement",{"_index":318,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["http://localhost:4200",{"_index":1117,"title":{},"body":{"index.html":{}}}],["icon",{"_index":607,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["id",{"_index":203,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["identifier",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["if(!closebalise",{"_index":587,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(element",{"_index":592,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(parseint(this.getnote(key",{"_index":1019,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["image",{"_index":379,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["implements",{"_index":219,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["important",{"_index":903,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["information",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information_button",{"_index":605,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["informationbuttoncomponent",{"_index":61,"title":{"components/InformationButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inherited",{"_index":978,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["injectable",{"_index":493,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":494,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["inline",{"_index":912,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input",{"_index":619,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["input[type=\"file",{"_index":932,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio",{"_index":909,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":917,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["inputs",{"_index":776,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["inputvalue",{"_index":513,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instance",{"_index":515,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["interface",{"_index":142,"title":{"interfaces/Game.html":{}},"body":{"interfaces/Game.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":143,"title":{},"body":{"interfaces/Game.html":{}}}],["isdownload",{"_index":159,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["isretry",{"_index":160,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["it's",{"_index":946,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["item",{"_index":875,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["items",{"_index":342,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json",{"_index":616,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json.parse(filecontent",{"_index":853,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata",{"_index":852,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata.hasownproperty(key",{"_index":859,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata[key]?.name",{"_index":860,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsonoutput",{"_index":759,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["jsonoutput['backlog'][(index",{"_index":766,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["jsonoutput['players'][(index",{"_index":769,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["justify",{"_index":337,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["karma",{"_index":1137,"title":{},"body":{"index.html":{}}}],["key",{"_index":171,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["key.startswith('backlog",{"_index":309,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('mode",{"_index":296,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('player",{"_index":299,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["keyframes",{"_index":921,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["keys",{"_index":857,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["label",{"_index":578,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["label.innertext",{"_index":586,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["left",{"_index":905,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["left_number",{"_index":888,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["left_players",{"_index":889,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["legend",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["letter",{"_index":1033,"title":{},"body":{"components/TitleComponent.html":{}}}],["li",{"_index":900,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["line",{"_index":394,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["linear",{"_index":1048,"title":{},"body":{"components/TitleComponent.html":{}}}],["link",{"_index":938,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["list",{"_index":898,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["listvalue",{"_index":226,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["literal",{"_index":179,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["load",{"_index":615,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lobby",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local_cafe",{"_index":331,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["lunchstage",{"_index":161,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["mainmenucomponent",{"_index":64,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["majority",{"_index":879,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["margin",{"_index":366,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["mat",{"_index":432,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["matbuttonmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":839,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["matching",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maticonmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1015,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["maxplayer",{"_index":1016,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["menu",{"_index":330,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["menu'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["menu.component",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["menu.component.html",{"_index":618,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":617,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":610,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu/main",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["message",{"_index":957,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["methods",{"_index":145,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["michel",{"_index":305,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["middle",{"_index":914,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["min",{"_index":390,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["minplayer",{"_index":1018,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["mode",{"_index":291,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["modedecorator",{"_index":628,"title":{"classes/ModeDecorator.html":{}},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["modedecorator:10",{"_index":979,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:12",{"_index":983,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:13",{"_index":980,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:148",{"_index":1005,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:164",{"_index":988,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:181",{"_index":1003,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:186",{"_index":990,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:190",{"_index":997,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:194",{"_index":996,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:198",{"_index":993,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:20",{"_index":1011,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:202",{"_index":991,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:206",{"_index":1004,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:218",{"_index":998,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:222",{"_index":986,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:226",{"_index":995,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:230",{"_index":994,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:234",{"_index":1007,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:24",{"_index":1009,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:263",{"_index":1002,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:267",{"_index":1000,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:271",{"_index":1008,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:275",{"_index":989,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:28",{"_index":987,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:299",{"_index":992,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:303",{"_index":999,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:37",{"_index":1012,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:41",{"_index":1010,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:44",{"_index":984,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:49",{"_index":1001,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:6",{"_index":985,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:7",{"_index":981,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:8",{"_index":982,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:93",{"_index":1006,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modifybacklogdata",{"_index":162,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["modifybacklogdata(key",{"_index":198,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["module",{"_index":78,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1148,"title":{},"body":{"index.html":{}}}],["mr",{"_index":1061,"title":{},"body":{"components/TitleComponent.html":{}}}],["n",{"_index":206,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["namecoffe",{"_index":715,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["namequestion",{"_index":714,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["names",{"_index":855,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray",{"_index":858,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray.push(jsondata[key].name",{"_index":861,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["navigate",{"_index":1116,"title":{},"body":{"index.html":{}}}],["need",{"_index":1142,"title":{},"body":{"index.html":{}}}],["new",{"_index":283,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":500,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["next",{"_index":738,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["nextstage",{"_index":163,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["ng",{"_index":1113,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":229,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ngif",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":230,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["none",{"_index":281,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["noopanimationsmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["notation",{"_index":711,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["note",{"_index":673,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["notes",{"_index":712,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notes.includes",{"_index":722,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notes.includes(\"cafe",{"_index":724,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notes.push(this.getnote(key",{"_index":721,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notsamemind",{"_index":635,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["null",{"_index":294,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["number",{"_index":182,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["numbers",{"_index":877,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["object.keys(additionalvalue).foreach(key",{"_index":589,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["object.keys(data).foreach((key",{"_index":762,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["object.keys(data).foreach(key",{"_index":295,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["object.keys(players).foreach((key",{"_index":768,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["object.keys(this.getbacklogdata()).foreach(key",{"_index":741,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["object.keys(this.getnotes()).foreach(key",{"_index":717,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["object.keys(this.players).foreach(key",{"_index":866,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["object.keys(this.players).length",{"_index":487,"title":{},"body":{"classes/GameConcret.html":{}}}],["offset",{"_index":966,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onbuttonclick",{"_index":939,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onfileselected",{"_index":813,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["onfileselected(event",{"_index":823,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["oninit",{"_index":221,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["opacity",{"_index":910,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["opened",{"_index":227,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["opinion",{"_index":736,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["option",{"_index":272,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["optional",{"_index":174,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["out",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":965,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["output",{"_index":961,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["outputs",{"_index":943,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["overflow",{"_index":785,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["override",{"_index":1013,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["overview",{"_index":1151,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":216,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{}}}],["package",{"_index":1088,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":361,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["page",{"_index":611,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"index.html":{}}}],["parameters",{"_index":173,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["parseint(key",{"_index":868,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["parseint(key.replace('player",{"_index":301,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["parseint(match",{"_index":841,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["parseint(note",{"_index":743,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["parseint(this.getnote(key",{"_index":1020,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["pass",{"_index":737,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["path",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrick",{"_index":307,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["placeholder",{"_index":837,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["placeholder.replace(/\\d/g",{"_index":840,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["planning",{"_index":1025,"title":{},"body":{"components/TitleComponent.html":{}}}],["planningpokerpp",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["platform",{"_index":1139,"title":{},"body":{"index.html":{}}}],["player",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["playerbutton",{"_index":396,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["playercardcomponent",{"_index":66,"title":{"components/PlayerCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerkey",{"_index":867,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playermax",{"_index":808,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playername",{"_index":649,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["playernumber",{"_index":300,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playerpushbutton",{"_index":164,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["playerpushbutton(id",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["players",{"_index":214,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["players[1",{"_index":304,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[2",{"_index":306,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[parseint(key",{"_index":770,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["players[playernumber",{"_index":303,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["playersnb",{"_index":809,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playersnote",{"_index":450,"title":{},"body":{"classes/GameConcret.html":{}}}],["pointer",{"_index":438,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["poker",{"_index":1026,"title":{},"body":{"components/TitleComponent.html":{}}}],["position",{"_index":411,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["possible",{"_index":937,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pp",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["press",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["private",{"_index":277,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["project",{"_index":1105,"title":{},"body":{"index.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{},"properties.html":{}}}],["protected",{"_index":632,"title":{},"body":{"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["providedin",{"_index":507,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pushable_button",{"_index":963,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushable_button:active",{"_index":975,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushablebackground",{"_index":942,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["questionselected",{"_index":636,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["questionselected(playername",{"_index":668,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["quiter",{"_index":312,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["radius",{"_index":364,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["reader",{"_index":847,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reader.onload",{"_index":849,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reader.readastext(selectedfile",{"_index":864,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reader.result",{"_index":851,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["readonly",{"_index":806,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reavel",{"_index":710,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["reavelnote",{"_index":637,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["red",{"_index":443,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["redirectto",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1152,"title":{},"body":{"index.html":{}}}],["regular.ttf",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":412,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["reload",{"_index":1120,"title":{},"body":{"index.html":{}}}],["repeat(11",{"_index":348,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["reset",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["retry",{"_index":633,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["return",{"_index":298,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{}}}],["returns",{"_index":175,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["rgb(0",{"_index":424,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgb(255",{"_index":430,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgba(0",{"_index":791,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["rgba(black",{"_index":1045,"title":{},"body":{"components/TitleComponent.html":{}}}],["right",{"_index":405,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["right_style",{"_index":892,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{}}}],["root'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["rotate",{"_index":1068,"title":{},"body":{"components/TitleComponent.html":{}}}],["router",{"_index":237,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["routermodule",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":132,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":356,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["rules",{"_index":600,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["run",{"_index":1112,"title":{},"body":{"index.html":{}}}],["running",{"_index":1132,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":506,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"dependencies.html":{}}}],["same",{"_index":735,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["samemind",{"_index":638,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["samemind(note",{"_index":671,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["scaffolding",{"_index":1123,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":924,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(0.85",{"_index":421,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(0.9",{"_index":931,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1",{"_index":925,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1.5",{"_index":608,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["scale(4",{"_index":922,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["selectbutton",{"_index":231,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectbutton(id",{"_index":243,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectedfile",{"_index":845,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["send",{"_index":956,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["senddata",{"_index":814,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["serif",{"_index":358,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":1114,"title":{},"body":{"index.html":{}}}],["server",{"_index":1111,"title":{},"body":{"index.html":{}}}],["service.service",{"_index":273,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["service.service.ts",{"_index":496,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":499,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:8",{"_index":502,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:9",{"_index":504,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["services/gameoptionservice/game",{"_index":271,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["setactualplayerturn",{"_index":165,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setactualplayerturn(n",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setbacklog",{"_index":232,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setbacklogdata",{"_index":166,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setbacklogdata(backlogdata",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setdata",{"_index":497,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdata(newdata",{"_index":498,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdefaultvalue",{"_index":167,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setdefaultvalue(value",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setplayers",{"_index":168,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setplayers(players",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["settimeout",{"_index":862,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["settings",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["settingscomponentcomponent",{"_index":69,"title":{"components/SettingsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setupdefaultvalue",{"_index":169,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["shadow",{"_index":368,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["showtext",{"_index":560,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["showtext(label",{"_index":576,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["sidenav",{"_index":433,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["singleton/htmlbalise",{"_index":680,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["size",{"_index":359,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["sizing",{"_index":908,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["skew",{"_index":1031,"title":{},"body":{"components/TitleComponent.html":{}}}],["solid",{"_index":383,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["space",{"_index":339,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["spacing",{"_index":1034,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:first",{"_index":1036,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:last",{"_index":1047,"title":{},"body":{"components/TitleComponent.html":{}}}],["specific",{"_index":935,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["src",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:16",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/decorateur/game.ts",{"_index":144,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/game.ts:11",{"_index":211,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:13",{"_index":200,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:15",{"_index":197,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:17",{"_index":181,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:19",{"_index":192,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:21",{"_index":191,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:23",{"_index":186,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:25",{"_index":183,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:27",{"_index":202,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:29",{"_index":193,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:3",{"_index":213,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:31",{"_index":172,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:33",{"_index":189,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:35",{"_index":188,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:37",{"_index":199,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:39",{"_index":196,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:41",{"_index":194,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:43",{"_index":178,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:45",{"_index":205,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:47",{"_index":180,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:49",{"_index":185,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:5",{"_index":208,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:7",{"_index":177,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:9",{"_index":215,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/gameconcret.ts",{"_index":446,"title":{},"body":{"classes/GameConcret.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:100",{"_index":470,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:104",{"_index":459,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:11",{"_index":454,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:13",{"_index":451,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:15",{"_index":479,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:20",{"_index":477,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:24",{"_index":458,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:27",{"_index":480,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:31",{"_index":478,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:36",{"_index":474,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:40",{"_index":461,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:44",{"_index":468,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:48",{"_index":467,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:5",{"_index":455,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:52",{"_index":464,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:56",{"_index":462,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:6",{"_index":456,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:60",{"_index":475,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:63",{"_index":469,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:67",{"_index":457,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:7",{"_index":452,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:71",{"_index":466,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:75",{"_index":465,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:79",{"_index":473,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:83",{"_index":463,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:87",{"_index":471,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:9",{"_index":453,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:91",{"_index":476,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:94",{"_index":460,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:97",{"_index":472,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/modedecorator.ts",{"_index":629,"title":{},"body":{"classes/ModeDecorator.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:10",{"_index":641,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:12",{"_index":644,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:13",{"_index":640,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:148",{"_index":669,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:164",{"_index":648,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:181",{"_index":665,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:186",{"_index":652,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:190",{"_index":659,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:194",{"_index":658,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:198",{"_index":655,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:20",{"_index":677,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:202",{"_index":653,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:206",{"_index":667,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:218",{"_index":660,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:222",{"_index":645,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:226",{"_index":657,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:230",{"_index":656,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:234",{"_index":672,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:24",{"_index":675,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:256",{"_index":666,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:263",{"_index":664,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:267",{"_index":662,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:271",{"_index":674,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:275",{"_index":651,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:28",{"_index":646,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:299",{"_index":654,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:303",{"_index":661,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:307",{"_index":650,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:37",{"_index":678,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:41",{"_index":676,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:49",{"_index":663,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:7",{"_index":642,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:8",{"_index":643,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:93",{"_index":670,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/strictdecorator.ts",{"_index":976,"title":{},"body":{"classes/StrictDecorator.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts",{"_index":554,"title":{},"body":{"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts:12",{"_index":568,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:30",{"_index":564,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:37",{"_index":571,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:41",{"_index":575,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:46",{"_index":573,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:6",{"_index":561,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:8",{"_index":577,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/singleton/htmlbalise.ts",{"_index":509,"title":{},"body":{"classes/HtmlBalise.html":{},"coverage.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:10",{"_index":524,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:11",{"_index":526,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:12",{"_index":521,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:2",{"_index":527,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:26",{"_index":535,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:33",{"_index":534,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:4",{"_index":529,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:5",{"_index":530,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:6",{"_index":523,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:7",{"_index":531,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:8",{"_index":528,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:9",{"_index":533,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/components/game",{"_index":217,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":596,"title":{},"body":{"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":609,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/player",{"_index":771,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["src/app/components/settings",{"_index":804,"title":{},"body":{"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/start",{"_index":933,"title":{},"body":{"components/StartButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/title/title.component.ts",{"_index":1021,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/services/gameoptionservice/game",{"_index":495,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["standard",{"_index":687,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["standarvalue",{"_index":351,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["start",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["startbuttoncomponent",{"_index":71,"title":{"components/StartButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1104,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":514,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["stored",{"_index":1129,"title":{},"body":{"index.html":{}}}],["strict",{"_index":286,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["strictdecorator",{"_index":269,"title":{"classes/StrictDecorator.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["strictdecorator(this.game",{"_index":287,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["strkey",{"_index":869,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["stroke",{"_index":374,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["stvalue",{"_index":516,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["style",{"_index":899,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["summary",{"_index":753,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["super.notsamemind",{"_index":1014,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["support",{"_index":1153,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1154,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1087,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1086,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":517,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["test",{"_index":492,"title":{},"body":{"classes/GameConcret.html":{},"index.html":{}}}],["testing",{"_index":1145,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1134,"title":{},"body":{"index.html":{}}}],["text",{"_index":357,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["texttoshow",{"_index":350,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["that's",{"_index":750,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.actualfunctioninbacklog",{"_index":486,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.actualplayerturn",{"_index":704,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.addnote(id",{"_index":726,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.backlogdata",{"_index":483,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["this.backlogdata.foreach((item",{"_index":873,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.backlogdata[key",{"_index":491,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.balise",{"_index":278,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.balise.playerbutton.style.display",{"_index":280,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.bsetupdefaultvalue",{"_index":484,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.buttonclicked.emit",{"_index":962,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["this.coffeeselected(namecoffe",{"_index":725,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.content",{"_index":588,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["this.data.asobservable",{"_index":503,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data.next(newdata",{"_index":508,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data[\"backlog",{"_index":874,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.data[\"mode",{"_index":872,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.data[strkey",{"_index":870,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.dataservice.data$.subscribe(data",{"_index":292,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.dataservice.setdata(this.data",{"_index":876,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.defaultvalue",{"_index":485,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.downloadjson",{"_index":698,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.endmessage",{"_index":540,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.finishbutton",{"_index":548,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.game",{"_index":284,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["this.game.addnote(value",{"_index":730,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.choosedefaultvalue",{"_index":290,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getactualstage",{"_index":328,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getbacklogdatanote(key",{"_index":756,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.getnote(key",{"_index":732,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.getnotes",{"_index":731,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.getplayers",{"_index":729,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.modifybacklogdata(key",{"_index":751,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setbacklogdata(backlogdata",{"_index":684,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setdefaultvalue(value",{"_index":693,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setplayers(players",{"_index":683,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setupdefaultvalue",{"_index":692,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game?.creatanddownloadjson",{"_index":322,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isdownload",{"_index":321,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isretry",{"_index":325,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.lunchstage",{"_index":327,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.playerpushbutton(id",{"_index":314,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setactualplayerturn(1",{"_index":326,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setbacklogdata(backlogdata",{"_index":313,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setdefaultvalue(valueelement.value",{"_index":320,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setplayers(players",{"_index":308,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setupdefaultvalue",{"_index":315,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.gamemodemessage",{"_index":550,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.getactualstage",{"_index":702,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getbacklogdata",{"_index":757,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getbacklogdatanote(key",{"_index":754,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getdefaultvalue",{"_index":760,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getmode",{"_index":285,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getnote(key",{"_index":720,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getplayer(value",{"_index":727,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getplayers",{"_index":758,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html",{"_index":682,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"div",{"_index":705,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"label",{"_index":733,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"li",{"_index":718,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"ul",{"_index":716,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(\"define",{"_index":706,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(\"everyone",{"_index":734,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(\"you",{"_index":746,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(key",{"_index":719,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.endmessage",{"_index":695,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.gamemodemessage",{"_index":700,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.stvalue",{"_index":694,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.task",{"_index":699,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.title",{"_index":709,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.displayhtml(balise.endmessage",{"_index":740,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.displayhtml(balise.stvalue",{"_index":691,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.displayhtml(balise.task",{"_index":708,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.showtext(balise.task",{"_index":686,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.showtext(balise.title",{"_index":752,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.htmldisplay",{"_index":282,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.inputvalue",{"_index":552,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.lunchstage",{"_index":728,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.mode",{"_index":843,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.modifybacklogdata(key",{"_index":742,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.nextstage",{"_index":696,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.playerbutton",{"_index":544,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.playernumber",{"_index":834,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players",{"_index":481,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[id",{"_index":842,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players[key",{"_index":488,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[playerkey",{"_index":871,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnb",{"_index":836,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnote",{"_index":490,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.playersnote[key",{"_index":489,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.questionselected(namequestion",{"_index":723,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.retry",{"_index":697,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":323,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklog",{"_index":289,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setplayers",{"_index":288,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.stvalue",{"_index":536,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.task",{"_index":538,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.title",{"_index":542,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.validatebutton",{"_index":546,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["title.component.html",{"_index":1024,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":1023,"title":{},"body":{"components/TitleComponent.html":{}}}],["titlecomponent",{"_index":72,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":417,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["top_left",{"_index":885,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["top_right",{"_index":887,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["transform",{"_index":420,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["transform:scale(1.2",{"_index":437,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["transformer",{"_index":584,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transformjavascript",{"_index":580,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transition",{"_index":414,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["translatey",{"_index":971,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["transparent",{"_index":372,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["true",{"_index":324,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{}}}],["tslib",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["typeface",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":897,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["undefined",{"_index":249,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["under",{"_index":953,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["unit",{"_index":1133,"title":{},"body":{"index.html":{}}}],["url(\"../../../assets/images/card.jpg",{"_index":401,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/hypnotic.jpg",{"_index":380,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/player",{"_index":779,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["url('../../../assets/images/hand.png",{"_index":409,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url('../assets/fonts/pressstart2p",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=exo:wght@900&display=swap",{"_index":1028,"title":{},"body":{"components/TitleComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=mr+dafoe&display=swap",{"_index":1027,"title":{},"body":{"components/TitleComponent.html":{}}}],["use",{"_index":1125,"title":{},"body":{"index.html":{}}}],["user",{"_index":805,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["using",{"_index":856,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["validatebutton",{"_index":518,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["validestage",{"_index":233,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["valueelement",{"_index":316,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valueelement.value",{"_index":319,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["var",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["variable",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/StartButtonComponent.html":{}}}],["version",{"_index":1108,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":913,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["via",{"_index":1136,"title":{},"body":{"index.html":{}}}],["void",{"_index":176,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["want",{"_index":614,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["webkit",{"_index":373,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["website",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["white",{"_index":354,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["width",{"_index":345,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["worker",{"_index":585,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["wrap",{"_index":890,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["z",{"_index":413,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["zone.js",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component that display everything.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'planningPokerPP'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n            \n                \n                    Variable that contains the name of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Main component that display everything.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n  /**\n   * Variable that contains the name of the website.\n   */\n  title = 'planningPokerPP';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @font-face {\n  font-family: 'Press Start 2P';\n  src: url('../assets/fonts/PressStart2P-Regular.ttf');\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponentComponent\n                        \n                        \n                            InformationButtonComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            PlayerCardComponent\n                        \n                        \n                            SettingsComponentComponent\n                        \n                        \n                            StartButtonComponent\n                        \n                        \n                            TitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {StartButtonComponent} from './components/start-button/start-button.component';\nimport {InformationButtonComponent} from './components/information-button/information-button.component';\n\nimport {MainMenuComponent} from './components/main-menu/main-menu.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SettingsComponentComponent} from './components/settings-component/settings-component.component';\nimport { GameComponentComponent } from './components/game-component/game-component.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { PlayerCardComponent } from './components/player-card/player-card.component';\nimport {NgIf} from \"@angular/common\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatButtonModule} from \"@angular/material/button\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartButtonComponent,\n    InformationButtonComponent,\n    MainMenuComponent,\n    SettingsComponentComponent,\n    GameComponentComponent,\n    TitleComponent,\n    PlayerCardComponent,\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        MatIconModule,\n        NoopAnimationsModule,\n        NgIf,\n        MatSidenavModule,\n        MatButtonModule\n    ],\n  providers:\n    [],\n  bootstrap:\n    [AppComponent]\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponentComponent} from \"./components/settings-component/settings-component.component\";\nimport {MainMenuComponent} from \"./components/main-menu/main-menu.component\";\nimport {GameComponentComponent} from \"./components/game-component/game-component.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: MainMenuComponent},\n  {path: 'lobby', component: SettingsComponentComponent},\n  {path: 'game', component: GameComponentComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/Game.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addNote\n                                    \n                                \n                                \n                                    \n                                        chooseDefaultValue\n                                    \n                                \n                                \n                                    \n                                        creatAndDownloadJSON\n                                    \n                                \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        getActualStage\n                                    \n                                \n                                \n                                    \n                                        getBacklogData\n                                    \n                                \n                                \n                                    \n                                        getBacklogDataNote\n                                    \n                                \n                                \n                                    \n                                        getDefaultValue\n                                    \n                                \n                                \n                                    \n                                        getNote\n                                    \n                                \n                                \n                                    \n                                        getNotes\n                                    \n                                \n                                \n                                    \n                                        getPlayer\n                                    \n                                \n                                \n                                    \n                                        getPlayerNumber\n                                    \n                                \n                                \n                                    \n                                        getPlayers\n                                    \n                                \n                                \n                                    \n                                        isDownload\n                                    \n                                \n                                \n                                    \n                                        isRetry\n                                    \n                                \n                                \n                                    \n                                        lunchStage\n                                    \n                                \n                                \n                                    \n                                        modifyBacklogData\n                                    \n                                \n                                \n                                    \n                                        nextStage\n                                    \n                                \n                                \n                                    \n                                        playerPushButton\n                                    \n                                \n                                \n                                    \n                                        setActualPlayerTurn\n                                    \n                                \n                                \n                                    \n                                        setBacklogData\n                                    \n                                \n                                \n                                    \n                                        setDefaultValue\n                                    \n                                \n                                \n                                    \n                                        setPlayers\n                                    \n                                \n                                \n                                    \n                                        setupDefaultValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Game {\n\n  setPlayers(players: { [key: number]: string }): void;\n\n  setBacklogData(BacklogData: { [key: string]: number }): void;\n\n  chooseDefaultValue(): void;\n\n  setupDefaultValue(): boolean;\n\n  setDefaultValue(value: string): void;\n\n  nextStage(): void;\n\n  lunchStage(): void;\n\n  getActualStage(): number;\n\n  getPlayerNumber(): number;\n\n  getPlayer(key: number): string;\n\n  getDefaultValue(): string;\n\n  getBacklogData(): { [key: string]: number };\n\n  playerPushButton(id: string): void;\n\n  getPlayers(): { [key: number]: string };\n\n  addNote(value: string, key: string): void\n\n  getNotes(): { [key: string]: string };\n\n  getNote(key: string): string;\n\n  modifyBacklogData(key: string, value: number): void;\n\n  isRetry(): boolean;\n\n  isDownload(): boolean;\n\n  creatAndDownloadJSON() : { [p: string]: any };\n\n  setActualPlayerTurn(n : number): void;\n\n  end() : void;\n\n  getBacklogDataNote(key : string) : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponentComponent.html":{"url":"components/GameComponentComponent.html","title":"component - GameComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-component/game-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                game-component\n            \n\n\n\n            \n                styleUrls\n                ./game-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balise\n                            \n                            \n                                game\n                            \n                            \n                                htmlDisplay\n                            \n                            \n                                listValue\n                            \n                            \n                                opened\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMode\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectButton\n                            \n                            \n                                setBacklog\n                            \n                            \n                                setPlayers\n                            \n                            \n                                valideStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-component/game-component.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMode\n                        \n                    \n                \n            \n            \n                \ngetMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectButton\n                        \n                    \n                \n            \n            \n                \nselectButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklog\n                        \n                    \n                \n            \n            \n                \nsetBacklog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valideStage\n                        \n                    \n                \n            \n            \n                \nvalideStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Game} from \"../../classes/decorateur/Game\";\nimport {GameConcret} from \"../../classes/decorateur/GameConcret\";\nimport {StrictDecorator} from \"../../classes/decorateur/StrictDecorator\";\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {HtmlDisplay} from \"../../classes/facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../../classes/singleton/htmlBalise\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'game-component',\n  templateUrl: './game-component.component.html',\n  styleUrls: ['./game-component.component.scss']\n})\nexport class GameComponentComponent implements AfterViewInit, OnInit {\n\n  constructor(private dataService: GameOptionServiceService, private router: Router) {\n  }\n\n  game: Game | undefined;\n\n  htmlDisplay: HtmlDisplay | undefined;\n\n  listValue = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n\n  balise: HtmlBalise | undefined;\n\n  opened = false;\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.balise = HtmlBalise.getInstance();\n\n    this.balise.playerButton.style.display = 'none';\n\n    this.htmlDisplay = new HtmlDisplay();\n\n    this.game = new GameConcret();\n    if (this.getMode() == \"strict\") this.game = new StrictDecorator(this.game)\n    else this.game = new StrictDecorator(this.game)\n\n    this.setPlayers()\n    this.setBacklog()\n\n    this.game.chooseDefaultValue();\n  }\n\n  getMode(): string {\n    let mode = \"strict\"\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Mode')) {\n            mode = data[key];\n          }\n        });\n      }\n    });\n    return mode\n  }\n\n  setPlayers() {\n    let players: { [key: number]: string } = {}\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Player')) {\n            const playerNumber = parseInt(key.replace('Player', ''), 10);\n            players[playerNumber] = data[key];\n          }\n        });\n      } else {\n        players[1] = \"Michel\";\n        players[2] = \"Patrick\";\n      }\n    });\n    this.game?.setPlayers(players)\n  }\n\n  setBacklog() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = 1\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  selectButton(id: string) {\n    this.game?.playerPushButton(id)\n  }\n\n  valideStage() {\n    if (this.game?.setupDefaultValue()) {\n      const valueElement = document.getElementById(\"stage1\") as HTMLInputElement;\n      if (valueElement.value != \"\") {\n        this.game?.setDefaultValue(valueElement.value)\n      }\n    } else {\n\n      if (this.game?.isDownload()) {\n        this.game?.creatAndDownloadJSON();\n        this.router.navigateByUrl('/').then(r => true);\n      } else {\n        if (this.game?.isRetry()) {\n          this.game?.setActualPlayerTurn(1);\n          this.game?.lunchStage();\n        } else {\n          if (this.game != null) {\n            if (this.game.getActualStage() \n    \n\n    \n        \n  \n     clear \n  \n  \n    \n\n      \n        \n        \n\n        \n           menu\n        \n      \n\n      \n\n      \n\n      \n\n      \n\n      \n        \n          local_cafe\n           {{ i }}\n        \n      \n\n      \n      \n\n\n      \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./game-component.component.scss\n                \n                .container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.header {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n}\n\n#textToShow, #StandarValue, #ActualTask {\n  color: white;\n}\n\n#textToShow {\n  grid-column: 1/2;\n  grid-row: 1;\n  text-align: center;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.5em;\n  padding: 10px 0;\n  border-radius: 2.5em;\n  margin: 0 20% 0 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-shadow: 0 0 20px #0fa, 0 0 120px #0fa;\n  color: transparent;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#StandarValue {\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n}\n\n#ActualTask {\n  grid-column: 3 / 10;\n  grid-row: 1;\n  text-align: center;\n  background-image: url(\"../../../assets/images/hypnotic.jpg\");\n  background-size: 100%;\n  border-radius: 2em;\n  padding: 10px 0;\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  font-family: 'Press Start 2P', serif;\n  min-height: 80px;\n  min-width: 800px;\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  justify-content: center;\n  -webkit-text-stroke: 1px #ffffff;\n\n}\n\n#PlayerButton {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-button {\n  width: 150px;\n  height: 210px;\n  background-image: url(\"../../../assets/images/card.jpg\");\n  background-size: 95%;\n  filter: brightness(0.8);\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  margin-right: -50px;\n  border-radius: 0.3rem;\n  cursor: url('../../../assets/images/hand.png'), auto;\n  position: relative;\n  z-index: 1;\n  transition: margin-right 0.3s ease, top 0.3s ease;\n\n  &:hover {\n    margin-right: 0;\n    top: -50px;\n  }\n\n  &:active {\n    transform: scale(0.85);\n  }\n}\n\n.card-button_label {\n  width: auto;\n  height: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-shadow: 0 0 7px #0fa, 0 0 120px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 2.5em;\n}\n\n.card-button_icon {\n  height: 210px;\n  text-shadow: rgb(0, 255, 170) 0.1px 0.2px 6px;\n  color: rgb(255, 255, 255);\n  font-size: 3.2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmat-sidenav-container {\n  height: 100%;\n  background: none;\n}\n\nmat-sidenav {\n  width: 300px;\n  padding: 10px;\n}\n\n.header_sidenav {\n  grid-column: 11;\n  grid-row: 1;\n  transform:scale(1.2);\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: white;\n  padding: 0 10px 100px 0;\n  width: 90%;\n  text-align: right;\n\n  &:active {\n    color: #797777;\n  }\n}\n\n.cross {\n  background: none;\n  color: red;\n  border: none;\n  cursor: pointer;\n\n  &:active {\n    color: #730505;\n  }\n}\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       clear                                                  menu                                                              local_cafe           {{ i }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConcret.html":{"url":"classes/GameConcret.html","title":"class - GameConcret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConcret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/GameConcret.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualFunctionInBacklog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                bSetupDefaultValue\n                            \n                            \n                                defaultValue\n                            \n                            \n                                Players\n                            \n                            \n                                PlayersNote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                chooseDefaultValue\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                end\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                lunchStage\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                setActualPlayerTurn\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualFunctionInBacklog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bSetupDefaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersNote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\n\nexport class GameConcret implements Game{\n\n  Players: { [key: number]: string} = {};\n  PlayersNote: { [key : string]: string } = {};\n  BacklogData: { [key : string]: number } = {};\n\n  bSetupDefaultValue = true;\n\n  defaultValue = \"\";\n\n  actualFunctionInBacklog : number = 0;\n\n  setPlayers(players: { [p: number]: string }): void {\n    this.Players = players\n    console.log(this.Players);\n  }\n\n  setBacklogData(BacklogData: { [key : string]: number }){\n    this.BacklogData = BacklogData\n  }\n\n  chooseDefaultValue(): void {\n  }\n\n  setupDefaultValue(): boolean {\n    return this.bSetupDefaultValue;\n  }\n\n  setDefaultValue(value: string): void {\n    this.defaultValue = value\n    this.bSetupDefaultValue = false;\n  }\n\n  nextStage(){\n    this.actualFunctionInBacklog++;\n  }\n\n  getActualStage(): number {\n    return this.actualFunctionInBacklog;\n  }\n\n  getPlayerNumber(): number {\n    return Object.keys(this.Players).length;\n  }\n\n  getPlayer(key: number): string {\n    return this.Players[key];\n  }\n\n  getDefaultValue(): string {\n    return this.defaultValue;\n  }\n\n  getBacklogData(): { [p: string]: number } {\n    return this.BacklogData;\n  }\n\n  playerPushButton(id: string): void {\n  }\n\n  getPlayers(): { [p: number]: string } {\n    return this.Players;\n  }\n\n  addNote(value : string, key : string) : void {\n    this.PlayersNote[key] = value;\n  }\n\n  getNotes() : { [key : string]: string }{\n    return this.PlayersNote;\n  }\n\n  getNote(key : string) : string{\n    return this.PlayersNote[key];\n  }\n\n  modifyBacklogData(key : string, value : number) : void{\n    this.BacklogData[key] = value;\n  }\n\n  getBacklogDataNote(key : string) : number{\n    return this.BacklogData[key];\n  }\n\n  isRetry(): boolean {\n    return false;\n  }\n\n  setActualPlayerTurn(n: number): void {\n  }\n\n  end(): void {\n  }\n\n  lunchStage(): void {\n  }\n\n  isDownload(): boolean {\n    return false;\n  }\n\n  creatAndDownloadJSON(): { [p: string]: any } {\n    const test : { [p: string]: any } = {}\n    return test;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameOptionServiceService.html":{"url":"injectables/GameOptionServiceService.html","title":"injectable - GameOptionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameOptionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/gameOptionService/game-option-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(newData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/gameOptionService/game-option-service.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameOptionServiceService {\n  private data = new BehaviorSubject(null);\n  data$ = this.data.asObservable();\n  setData(newData: any) {\n    this.data.next(newData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlBalise.html":{"url":"classes/HtmlBalise.html","title":"class - HtmlBalise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlBalise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/singleton/htmlBalise.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endMessage\n                            \n                            \n                                finishButton\n                            \n                            \n                                gameModeMessage\n                            \n                            \n                                inputValue\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                            \n                                playerButton\n                            \n                            \n                                stValue\n                            \n                            \n                                task\n                            \n                            \n                                title\n                            \n                            \n                                validateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearInstance\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/singleton/htmlBalise.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finishButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameModeMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLDivElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLInputElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLDivElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLDivElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLButtonElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        clearInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         HtmlBalise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HtmlBalise{\n  private static instance: HtmlBalise | null = null;\n\n  stValue : HTMLElement\n  task : HTMLElement\n  endMessage : HTMLElement\n  title : HTMLDivElement\n  playerButton : HTMLDivElement\n  validateButton : HTMLButtonElement\n  finishButton : HTMLElement;\n  gameModeMessage : HTMLDivElement;\n  inputValue : HTMLInputElement;\n\n  private constructor() {\n    this.stValue = document.getElementById(\"StandarValue\") as HTMLElement\n    this.task = document.getElementById(\"ActualTask\") as HTMLElement\n    this.endMessage = document.getElementById(\"endMessage\") as HTMLElement\n    this.title = document.getElementById(\"textToShow\") as HTMLDivElement\n    this.playerButton = document.getElementById(\"PlayerButton\") as HTMLDivElement;\n    this.validateButton = document.getElementById(\"validateButton\") as HTMLButtonElement;\n    this.finishButton = document.getElementById(\"finishButton\") as HTMLElement;\n    this.gameModeMessage = document.getElementById(\"gameModeMessage\") as HTMLDivElement;\n    this.inputValue = document.getElementById(\"stage1\") as HTMLInputElement;\n  }\n\n  static getInstance(): HtmlBalise {\n    if (!HtmlBalise.instance){\n      HtmlBalise.instance = new HtmlBalise();\n    }\n    return HtmlBalise.instance;\n  }\n\n  static clearInstance(): void{\n    HtmlBalise.instance = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlDisplay.html":{"url":"classes/HtmlDisplay.html","title":"class - HtmlDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/facade/HtmlDisplay.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                addHtmlElement\n                            \n                            \n                                addText\n                            \n                            \n                                clearHTML\n                            \n                            \n                                displayHTML\n                            \n                            \n                                showText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/facade/HtmlDisplay.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(id: string, classe: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classe\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHtmlElement\n                        \n                    \n                \n            \n            \n                \naddHtmlElement(type: string, id: string, additionalValue: literal type, closeBalise: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"div\"\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                        \n                                        \n                                                additionalValue\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                closeBalise\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addText\n                        \n                    \n                \n            \n            \n                \naddText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHTML\n                        \n                    \n                \n            \n            \n                \nclearHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayHTML\n                        \n                    \n                \n            \n            \n                \ndisplayHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showText\n                        \n                    \n                \n            \n            \n                \nshowText(label: any, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {connect} from \"rxjs\";\nimport transformJavaScript from \"@angular-devkit/build-angular/src/tools/esbuild/javascript-transformer-worker\";\n\nexport class HtmlDisplay{\n\n  content = \"\";\n\n  showText(label : any, text : string){\n    label.innerText = text;\n  }\n\n  addHtmlElement(type : string = \"div\", id : string = \"\", additionalValue : {[key : string] : string} = {}, closeBalise : boolean = false){\n    if(!closeBalise) {\n      this.content += \" 0) {\n        Object.keys(additionalValue).forEach(key => {\n          this.content += key + \"='\" + additionalValue[key] + \"' \"\n        });\n      }\n\n      this.content += \">\"\n    }else{\n      this.content += \"\";\n    }\n  }\n\n  addClass(id: string, classe: string){\n    const element = document.getElementById(id);\n    if(element == null) return\n    console.log(\"aa\")\n    element.classList.add(classe);\n  }\n\n  addText(text : string){\n    this.content += text;\n  }\n\n  displayHTML(element : HTMLElement){\n    element.innerHTML = this.content;\n    this.content = \"\"\n  }\n\n  clearHTML(element : HTMLElement){\n    element.innerHTML = \"\";\n    this.content = \"\";\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationButtonComponent.html":{"url":"components/InformationButtonComponent.html","title":"component - InformationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-button/information-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create an information button to explain the rules and the goal of this website.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-button\n            \n\n\n\n            \n                styleUrls\n                ./information-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n\n/**\n * Component that create an information button to explain the rules and the goal of this website.\n */\n@Component({\n  selector: 'information-button',\n  templateUrl: './information-button.component.html',\n  styleUrls: ['./information-button.component.scss']\n})\n\nexport class InformationButtonComponent {\n\n}\n\n    \n\n    \n        \n  help\n\n\n    \n\n    \n                \n                    ./information-button.component.scss\n                \n                .information_button {\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n\n  &:hover {\n    cursor: pointer;\n    color: #3146d3;\n  }\n}\n\n.icon-display {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  help'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-menu/main-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n\n\n            \n                styleUrls\n                ./main-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * Component that create page for the main menu of the website. We can choose here if we want to start a\n * new game or load a game from a json file.\n */\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent {\n\n}\n\n    \n\n    \n        \n   \n  \n\n\n  \n  \n  \n  \n\n\n\n    \n\n    \n                \n                    ./main-menu.component.scss\n                \n                .container_button {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 55%;\n}\n\n.container_info-button {\n  height: 25%;\n  padding: 80px 15px 0 35px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\nstart-button {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModeDecorator.html":{"url":"classes/ModeDecorator.html","title":"class - ModeDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModeDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/ModeDecorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualPlayerTurn\n                            \n                            \n                                downloadJson\n                            \n                            \n                                    Protected\n                                game\n                            \n                            \n                                    Protected\n                                html\n                            \n                            \n                                retry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                chooseDefaultValue\n                            \n                            \n                                CoffeeSelected\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                end\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                lunchStage\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                notSameMind\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                QuestionSelected\n                            \n                            \n                                reavelNote\n                            \n                            \n                                sameMind\n                            \n                            \n                                setActualPlayerTurn\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: Game)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        Game\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualPlayerTurn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadJson\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CoffeeSelected\n                        \n                    \n                \n            \n            \n                \nCoffeeSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:307\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:275\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:299\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:198\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:226\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:218\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:303\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:267\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notSameMind\n                        \n                    \n                \n            \n            \n                \nnotSameMind()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:256\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionSelected\n                        \n                    \n                \n            \n            \n                \nQuestionSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reavelNote\n                        \n                    \n                \n            \n            \n                \nreavelNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sameMind\n                        \n                    \n                \n            \n            \n                \nsameMind(note: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                note\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:271\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\nimport {HtmlDisplay} from \"../facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../singleton/htmlBalise\";\n\nexport abstract class ModeDecorator implements Game {\n\n  protected game: Game;\n  protected html: HtmlDisplay;\n\n  actualPlayerTurn: number = 1;\n\n  retry = false;\n  downloadJson = false;\n\n  constructor(game: Game) {\n    this.game = game;\n    this.html = new HtmlDisplay();\n  }\n\n  setPlayers(players: { [key: number]: string }) {\n    this.game.setPlayers(players);\n  }\n\n  setBacklogData(BacklogData: { [p: string]: number }): void {\n    this.game.setBacklogData(BacklogData);\n  }\n\n  chooseDefaultValue(): void {\n    console.log(this.getBacklogData())\n    const balise = HtmlBalise.getInstance();\n    this.html.showText(balise.task, \"Choose a standard value\")\n    balise.inputValue.style.display = \"block\"\n    console.log(this.html.content)\n    this.html.displayHTML(balise.stValue)\n  }\n\n  setupDefaultValue(): boolean {\n    return this.game.setupDefaultValue();\n  }\n\n  setDefaultValue(value: string): void {\n    this.game.setDefaultValue(value);\n    const balise = HtmlBalise.getInstance();\n    this.html.clearHTML(balise.stValue);\n    this.html.clearHTML(balise.endMessage);\n    this.nextStage();\n  }\n\n  lunchStage() {\n    const balise = HtmlBalise.getInstance();\n    balise.inputValue.style.display = \"none\"\n    this.retry = false;\n    this.downloadJson = false;\n\n    this.html.clearHTML(balise.stValue);\n    this.html.clearHTML(balise.endMessage);\n    this.html.clearHTML(balise.task);\n    this.html.clearHTML(balise.gameModeMessage);\n\n    let actualStage = this.getActualStage();\n    console.log(actualStage);\n    if (this.actualPlayerTurn  {\n      value++;\n      if (value == actualStage) {\n        this.html.addHtmlElement(\"div\");\n        this.html.addText(\"Define the value of \" + key);\n        this.html.addHtmlElement(\"div\", undefined, undefined, true);\n\n        balise.playerButton.style.display = \"flex\"\n      }\n    });\n\n    this.html.displayHTML(balise.task);\n  }\n\n  reavelNote() {\n    const balise = HtmlBalise.getInstance();\n    this.html.clearHTML(balise.stValue)\n    this.html.clearHTML(balise.endMessage)\n    this.html.clearHTML(balise.task)\n    this.html.clearHTML(balise.gameModeMessage)\n    this.html.clearHTML(balise.title)\n\n    this.html.showText(balise.task, \"Reavel of Notation\");\n\n    let notes: string[] = [];\n    let evryboddySameMind = true;\n\n    let nameQuestion = \"\";\n    let nameCoffe = \"\";\n\n    this.html.addHtmlElement(\"ul\");\n\n    Object.keys(this.getNotes()).forEach(key => {\n      this.html.addHtmlElement(\"li\");\n      this.html.addText(key + \" : \" + this.getNote(key));\n      this.html.addHtmlElement(\"li\", undefined, undefined, true);\n      notes.push(this.getNote(key));\n\n      if (this.getNote(key) == \"?\") {\n        nameQuestion = key;\n      } else if (this.getNote(key) == \"cafe\") {\n        nameCoffe = key;\n      }\n\n      if (notes.includes(\"?\")) {\n        this.QuestionSelected(nameQuestion);\n        return;\n      } else if (notes.includes(\"cafe\")) {\n        this.CoffeeSelected(nameCoffe);\n        return;\n      }\n    });\n    if (notes.includes(\"?\")) {\n      return;\n    } else if (notes.includes(\"cafe\")) {\n      return;\n    }\n    this.html.addHtmlElement(\"ul\", undefined, undefined, true);\n    this.html.displayHTML(balise.stValue);\n\n    for (let i = 0; i  {\n      value++;\n      if (value == this.actualPlayerTurn) {\n        this.addNote(id, this.getPlayer(value));\n      }\n    });\n    this.actualPlayerTurn++;\n    this.lunchStage();\n  }\n\n  getPlayers(): { [p: number]: string } {\n    return this.game.getPlayers();\n  }\n\n  addNote(value: string, key: string): void {\n    this.game.addNote(value, key);\n  }\n\n  getNotes(): { [key: string]: string } {\n    return this.game.getNotes();\n  }\n\n  getNote(key: string): string {\n    return this.game.getNote(key);\n  }\n\n  sameMind(note: string) {\n    this.retry = false;\n    const balise = HtmlBalise.getInstance();\n\n    this.html.addHtmlElement(\"label\");\n    this.html.addText(\"Everyone is of the same opinion we can pass to the next function\");\n    this.html.addHtmlElement(\"label\", undefined, undefined, true);\n    this.html.displayHTML(balise.endMessage);\n\n    let value = 0;\n\n    Object.keys(this.getBacklogData()).forEach(key => {\n      value++;\n      if (value == this.getActualStage()) {\n        this.modifyBacklogData(key, parseInt(note))\n      }\n    })\n\n    balise.validateButton.style.display = 'block';\n    balise.validateButton.name = \"block\";\n  }\n\n  notSameMind() {\n    const balise = HtmlBalise.getInstance();\n\n    this.html.addText(\"You don't agree with each other. That's all right.\")\n    this.html.displayHTML(balise.endMessage);\n  }\n\n  modifyBacklogData(key: string, value: number): void {\n    this.game.modifyBacklogData(key, value);\n  }\n\n  isRetry(): boolean {\n    return this.retry;\n  }\n\n  setActualPlayerTurn(n: number): void {\n    this.actualPlayerTurn = n;\n  }\n\n  end(): void {\n    const balise = HtmlBalise.getInstance();\n\n    this.html.clearHTML(balise.stValue)\n    this.html.clearHTML(balise.endMessage)\n\n    this.html.showText(balise.title, \"Summary\");\n\n    this.html.addHtmlElement(\"ul\");\n\n    Object.keys(this.getBacklogData()).forEach(key => {\n      this.html.addHtmlElement(\"li\");\n      this.html.addText(key + \" : \" + this.getBacklogDataNote(key))\n      this.html.addHtmlElement(\"li\", undefined, undefined, true);\n    })\n\n    this.html.addHtmlElement(\"ul\", \"id\", undefined, true);\n    this.html.displayHTML(balise.stValue);\n\n    balise.validateButton.style.display = 'none';\n    balise.playerButton.style.display = 'none';\n    balise.finishButton.style.display = 'block';\n  }\n\n  getBacklogDataNote(key: string): number {\n    return this.game.getBacklogDataNote(key);\n  }\n\n  isDownload(): boolean {\n    return this.downloadJson;\n  }\n\n  creatAndDownloadJSON(): { [p: string]: any } {\n    let data = this.getBacklogData();\n    let players = this.getPlayers();\n\n    const jsonOutput: { [key: string]: any } = {\n      default: this.getDefaultValue(),\n      Backlog: {},\n      Players: {}\n    };\n\n    Object.keys(data).forEach((key, index) => {\n      const entry: { [key: string]: any } = {};\n\n      entry[key] = data[key];\n      entry['work'] = this.getActualStage() > index + 1;\n\n      jsonOutput['Backlog'][(index + 1).toString().padStart(2, '0')] = entry;\n    });\n\n    Object.keys(players).forEach((key, index) => {\n      jsonOutput['Players'][(index + 1).toString().padStart(2, '0')] = players[parseInt(key)];\n    });\n\n    return jsonOutput;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCardComponent.html":{"url":"components/PlayerCardComponent.html","title":"component - PlayerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-card/player-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a card for the player and their name, to have a better display\nin the .\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-card\n            \n\n\n\n            \n                styleUrls\n                ./player-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                i\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-card/player-card.component.ts:17\n                            \n                        \n                \n                    \n                        Value of the current player.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * Component that create a card for the player and their name, to have a better display\n * in the .\n */\n@Component({\n  selector: 'player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.scss']\n})\n\nexport class PlayerCardComponent {\n  /**\n   * Value of the current player.\n   */\n  @Input() i: number = 0;\n}\n\n    \n\n    \n        \n   Player {{i}} \n  \n\n\n    \n\n    \n                \n                    ./player-card.component.scss\n                \n                .card {\n  display: flex;\n  background-image: url(\"../../../assets/images/player-card-background.jpg\");\n  background-size: 50%;\n  flex-direction: column;\n  border-radius: 0.3rem;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem;\n  border: 1px solid #e0e0e0;\n  transition: 0.8s;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  width: 160px;\n\n  &:hover {\n    border: 1px solid #b0b0b0;\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.35);\n  }\n}\n\nh1 {\n  color: #fff;\n  text-shadow:\n    0 0 7px #fff,\n    0 0 10px #fff,\n    0 0 21px #fff,\n    0 0 42px #0fa,\n    0 0 82px #0fa,\n    0 0 92px #0fa,\n    0 0 102px #0fa,\n    0 0 151px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.2em;\n}\n\ninput {\n  background: #001546;\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 0.5em;\n  border: 1px solid white;\n  border-radius: 0.3rem;\n  padding: 7px 0 7px 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Player {{i}}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponentComponent.html":{"url":"components/SettingsComponentComponent.html","title":"component - SettingsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings-component/settings-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the page where the user will choose every option for his game.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-component\n            \n\n\n\n            \n                styleUrls\n                ./settings-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BacklogData\n                            \n                            \n                                    Protected\n                                    Readonly\n                                console\n                            \n                            \n                                Data\n                            \n                            \n                                mode\n                            \n                            \n                                playerMax\n                            \n                            \n                                playerNumber\n                            \n                            \n                                Players\n                            \n                            \n                                playersNb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayerName\n                            \n                            \n                                changeMod\n                            \n                            \n                                getSliderValue\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/settings-component/settings-component.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlayerName\n                        \n                    \n                \n            \n            \n                \naddPlayerName(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMod\n                        \n                    \n                \n            \n            \n                \nchangeMod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSliderValue\n                        \n                    \n                \n            \n            \n                \ngetSliderValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : console\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"strict\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playersNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [1, 2]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create the page where the user will choose every option for his game.\n */\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings-component.component.html',\n  styleUrls: ['./settings-component.component.scss']\n})\n\nexport class SettingsComponentComponent {\n  constructor(private dataService: GameOptionServiceService) {\n  }\n\n  Data: { [Type: string]: string } = {}\n\n  BacklogData: string[] = [];\n\n  playerMax: number = 15;\n\n  mode = \"strict\";\n\n  playerNumber: number = 2;\n  Players: { [key: number]: string } = {}\n  playersNb: number[] = [1, 2]\n\n  getSliderValue(event: any = 0) {\n    this.playerNumber = event.target.value;\n    this.playersNb = []\n    for (let i = 1; i  0) {\n      const placeholder = event.target.placeholder;\n      const match = placeholder.replace(/\\D/g, \"\");\n      const id = parseInt(match);\n      this.Players[id] = event.target.value;\n      console.log(this.Players);\n    }\n  }\n\n  changeMod(event: any = 0) {\n    this.mode = event.target.value;\n    console.log(this.mode);\n  }\n\n  onFileSelected(event: any = 0) {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n\n      // Extract names from JSON using keys\n      const namesArray: string[] = [];\n      for (const key in jsonData) {\n        if (jsonData.hasOwnProperty(key) && jsonData[key]?.name) {\n          namesArray.push(jsonData[key].name);\n        }\n      }\n      this.BacklogData = namesArray;\n      setTimeout(() => {\n        console.log(this.BacklogData);\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n\n  sendData() {\n    console.log(\"test\");\n    Object.keys(this.Players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + playerKey;\n      this.Data[strKey] = this.Players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n\n    this.BacklogData.forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n    });\n\n    this.dataService.setData(this.Data);\n  }\n\n  protected readonly console = console;\n}\n\n    \n\n    \n        \n  \n    \n      \n         Numbers of Players \n        \n        {{ playerNumber }}\n      \n\n      \n        \n      \n    \n\n    \n      \n         Game mode\n        \n          \n            \n            Strict\n            \n            \n          \n          \n            \n            Absolute Majority \n            \n            \n          \n          \n            \n            Average\n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n      Chose a json file\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-component.component.scss\n                \n                form {\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.form_top {\n  display: flex;\n  flex-direction: row;\n  height: 82%;\n  width: 100%;\n}\n\n.top_left {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 80%;\n}\n\n.top_right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  width: 20%;\n}\n\n.left_number-players {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20%;\n}\n\n.left_players {\n  display: flex;\n  width: 100%;\n  height: 80%;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.right_style-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & h3 {\n    font-family: 'Press Start 2P', serif;\n    font-size: 1.4em;\n    margin: 0;\n  }\n}\n\n.bottom_input-json {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & input {\n    color: white;\n    font-family: 'Press Start 2P', serif;\n  }\n}\n\n\n.form_bottom {\n  display: flex;\n  width: 100%;\n  height: 25%;\n  margin-top: 15px;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n\nul {\n  list-style-type: none;\n}\n\nli {\n  position: relative;\n  padding: 10px 10px 10px 40px;\n  height: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n\n  &:active {\n    color: #3351ff !important;\n  }\n}\n\n.style-game_label:before {\n  content: \"\";\n  width: 15px;\n  height: 15px;\n  background: #fff;\n  position: absolute;\n  left: 7px;\n  top: calc(50% - 13px);\n  box-sizing: border-box;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"] {\n  opacity: 0;\n  -webkit-appearance: none;\n  display: inline-block;\n  vertical-align: middle;\n  z-index: 100;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 30px;\n  position: absolute;\n  left: 0;\n  top: calc(50% - 15px);\n  cursor: pointer;\n}\n\n.circle {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  left: -3px;\n  top: 2px;\n  border: 5px solid #fff;\n  opacity: 0;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked ~ .circle {\n  position: absolute;\n  opacity: 1;\n  animation-name: explode;\n  animation-duration: 0.350s;\n}\n\n@keyframes explode {\n  0% {\n    opacity: 0;\n    transform: scale(4);\n  }\n  60% {\n    opacity: 1;\n    transform: scale(0.5);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Numbers of Players                 {{ playerNumber }}                                                 Game mode                                          Strict                                                                    Absolute Majority                                                                     Average                                                                        Chose a json file                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartButtonComponent.html":{"url":"components/StartButtonComponent.html","title":"component - StartButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/start-button/start-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a configurable button with some specific style, the only change possible\nis the link, the color of the background and the text.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                start-button\n            \n\n\n\n            \n                styleUrls\n                ./start-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./start-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captionBackground\n                            \n                            \n                                captionColor\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                pushableBackground\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captionBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:22\n                            \n                        \n                \n                    \n                        Variable to change the background color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        captionColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:27\n                            \n                        \n                \n                    \n                        Variable to change the text color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        link\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:37\n                            \n                        \n                \n                    \n                        Variable to change the link of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:32\n                            \n                        \n                \n                    \n                        Variable to change the text on a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pushableBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:17\n                            \n                        \n                \n                    \n                        Variable to change the color under a button when it's called in another component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:42\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n/**\n * Component that create a configurable button with some specific style, the only change possible\n * is the link, the color of the background and the text.\n */\n@Component({\n  selector: 'start-button',\n  templateUrl: './start-button.component.html',\n  styleUrls: ['./start-button.component.scss']\n})\n\nexport class StartButtonComponent {\n  /**\n   * Variable to change the color under a button when it's called in another component.\n   */\n  @Input() pushableBackground: string = '';\n\n  /**\n   * Variable to change the background color of a button when it's called in another component.\n   */\n  @Input() captionBackground: string = '';\n\n  /**\n   * Variable to change the text color of a button when it's called in another component.\n   */\n  @Input() captionColor: string = '';\n\n  /**\n   * Variable to change the text on a button when it's called in another component.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Variable to change the link of a button when it's called in another component.\n   */\n  @Input() link: string = '';\n\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n}\n\n    \n\n    \n        \n   {{ name }} \n\n\n    \n\n    \n                \n                    ./start-button.component.scss\n                \n                .pushable_button {\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n}\n\n.caption_button {\n  display: block;\n  padding: 20px 50px;\n  border-radius: 12px;\n  border: 3px solid white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.7rem;\n  text-shadow: 1px 1px 2px #000000;\n  transform: translateY(-6px);\n}\n\n.caption_button:hover {\n  filter: brightness(90%);\n  color: #c7c7c7 !important;\n}\n\n\n.pushable_button:active .caption_button {\n  transform: translateY(-2px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ name }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrictDecorator.html":{"url":"classes/StrictDecorator.html","title":"class - StrictDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrictDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/StrictDecorator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ModeDecorator\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualPlayerTurn\n                            \n                            \n                                downloadJson\n                            \n                            \n                                    Protected\n                                game\n                            \n                            \n                                    Protected\n                                html\n                            \n                            \n                                retry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                creatAndDownloadJSON\n                            \n                            \n                                    \n                                notSameMind\n                            \n                            \n                                addNote\n                            \n                            \n                                chooseDefaultValue\n                            \n                            \n                                CoffeeSelected\n                            \n                            \n                                end\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                lunchStage\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                QuestionSelected\n                            \n                            \n                                reavelNote\n                            \n                            \n                                sameMind\n                            \n                            \n                                setActualPlayerTurn\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualPlayerTurn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadJson\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game\n\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay\n\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    creatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:44\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notSameMind\n                        \n                    \n                \n            \n            \n                \n                        \n                    notSameMind()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:6\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:222\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CoffeeSelected\n                        \n                    \n                \n            \n            \n                \nCoffeeSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:164\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:275\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:186\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:299\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:198\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:230\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:226\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:194\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:190\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:218\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:303\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:267\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:49\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:263\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionSelected\n                        \n                    \n                \n            \n            \n                \nQuestionSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:148\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reavelNote\n                        \n                    \n                \n            \n            \n                \nreavelNote()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:93\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sameMind\n                        \n                    \n                \n            \n            \n                \nsameMind(note: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:234\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                note\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:271\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ModeDecorator} from \"./ModeDecorator\";\nimport {HtmlBalise} from \"../singleton/htmlBalise\";\n\nexport class StrictDecorator extends ModeDecorator{\n\n  override notSameMind() {\n    super.notSameMind();\n    const balise = HtmlBalise.getInstance();\n\n    let max = 0;\n    let maxPlayer = \";\"\n\n    let min = 1000;\n    let minPlayer = \"\";\n\n    Object.keys(this.getNotes()).forEach(key => {\n      if(parseInt(this.getNote(key)) > max){\n        max = parseInt(this.getNote(key));\n        maxPlayer = key;\n      }\n      if(parseInt(this.getNote(key)) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title/title.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the title of the website and all the style that come with it, on the main menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pp-title\n            \n\n\n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that create the title of the website and all the style that come with it, on the main menu.\n */\n@Component({\n  selector: 'pp-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n}\n\n    \n\n    \n        \n  \n    PLANNING\n    PLANNING\n  \n  POKER\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Mr+Dafoe&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@900&display=swap');\n\nh1 {\n  position: relative;\n  font-family: 'Exo', serif;\n  font-size: 11em;\n  margin: 0;\n  transform: skew(-15deg);\n  letter-spacing: 0.03em;\n\n  span:first-child {\n    display: block;\n    text-shadow: 0 0 0.1em #8ba2d0, 0 0 0.2em black, 0 0 5em #165ff3;\n    -webkit-text-stroke: 0.06em rgba(black, 0.5);\n  }\n\n  span:last-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-image: linear-gradient(#032d50 25%, #00a1ef 35%, white 50%, #20125f 50%, #8313e7 55%, #ff61af 75%);\n    -webkit-text-stroke: 0.01em #94a0b9;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\nh2 {\n  font-family: 'Mr Dafoe', serif;\n  font-size: 5.5em;\n  margin-left: 3em;\n  color: white;\n  text-shadow: 0 0 0.05em #fff, 0 0 0.2em #281775, 0 0 0.3em #20125f;\n  transform: rotate(-7deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PLANNING    PLANNING    POKER'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/Game.ts\n            \n            interface\n            Game\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/GameConcret.ts\n            \n            class\n            GameConcret\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/ModeDecorator.ts\n            \n            class\n            ModeDecorator\n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/StrictDecorator.ts\n            \n            class\n            StrictDecorator\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/classes/facade/HtmlDisplay.ts\n            \n            class\n            HtmlDisplay\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/classes/singleton/htmlBalise.ts\n            \n            class\n            HtmlBalise\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/game-component/game-component.component.ts\n            \n            component\n            GameComponentComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/information-button/information-button.component.ts\n            \n            component\n            InformationButtonComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/player-card/player-card.component.ts\n            \n            component\n            PlayerCardComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/settings-component/settings-component.component.ts\n            \n            component\n            SettingsComponentComponent\n            \n                6 %\n                (1/15)\n            \n        \n        \n            \n                \n                src/app/components/start-button/start-button.component.ts\n            \n            component\n            StartButtonComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/gameOptionService/game-option-service.service.ts\n            \n            injectable\n            GameOptionServiceService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.12\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^16.2.12\n        \n            @angular/compiler : ^16.2.12\n        \n            @angular/core : ^16.2.12\n        \n            @angular/forms : ^16.2.12\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^16.2.12\n        \n            @angular/platform-browser-dynamic : ^16.2.12\n        \n            @angular/router : ^16.2.12\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeface-press-start-2p : ^1.1.13\n        \n            zone.js : ~0.13.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanningPokerPP\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
