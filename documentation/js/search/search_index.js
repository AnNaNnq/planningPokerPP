var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.022,1,0.59]],["body/components/AppComponent.html",[0,0.041,1,1.085,2,1.363,3,0.494,4,0.416,5,1.222,6,1.369,7,1.09,8,1.222,9,0.416,10,2.982,11,0.664,12,1.487,13,1.712,14,3.175,15,1.222,16,1.922,17,1.558,18,3.729,19,1.712,20,4.988,21,1.528,22,4.572,23,0.664,24,1.213,25,1.558,26,0.664,27,0.045,28,1.369,29,1.09,30,0.97,31,3.729,32,0.759,33,3.656,34,1.712,35,2.429,36,0.95,37,2.76,38,0.831,39,0.759,40,3.175,41,1.722,42,1.722,43,0.494,44,0.274,45,1.534,46,1.222,47,2.207,48,2.982,49,3.656,50,3.656,51,2.539,52,1.918,53,3.656,54,1.534,55,1.534,56,1.363,57,1.534,58,3.656,59,3.656,60,3.656,61,0.97,62,1.076,63,1.363,64,1.222,65,1.747,66,1.222,67,1.222,68,0.664,69,0.577,70,1.667,71,0.759,72,1.09,73,1.528,74,0.664,75,1.222,76,0.759,77,0.97,78,1.222,79,0.664,80,1.222,81,0.86,82,1.09,83,0.759,84,0.759,85,1.222,86,1.222,87,1.222,88,0.035,89,0.035]],["title/modules/AppModule.html",[90,1.717,91,1.717]],["body/modules/AppModule.html",[1,1.18,3,0.44,4,0.371,9,0.371,17,0.971,27,0.045,38,1.064,39,0.676,41,2,42,1.534,43,0.574,44,0.244,45,1.366,46,1.088,61,0.864,68,0.968,71,1.105,74,0.968,76,1.105,79,0.968,83,1.18,84,1.105,88,0.032,89,0.032,90,1.966,91,3.563,92,1.73,93,1.966,94,3.854,95,3.854,96,3.463,97,3.28,98,2.656,99,2.656,100,2.656,101,2.656,102,2.656,103,2.829,104,4.343,105,3.463,106,2.656,107,2.261,108,3.256,109,2.948,110,2.948,111,3.463,112,2.948,113,1.966,114,3.256,115,2.656,116,3.256,117,2.261,118,4.245,119,3.256,120,2.261,121,2.656,122,1.966,123,2.656,124,4.245,125,3.256,126,3.463,127,2.656,128,2.656,129,1.966,130,3.463,131,2.656,132,1.966,133,3.256,134,3.256,135,2.261,136,3.256,137,2.656,138,4.245,139,3.256,140,4.245,141,3.256,142,4.724,143,4.245,144,3.256,145,4.245,146,2.261,147,3.256,148,2.656,149,3.463,150,4.245,151,3.256,152,4.245,153,3.256,154,3.256,155,1.966,156,1.219,157,3.256,158,1.366,159,0.766,160,3.256,161,3.256,162,3.256,163,3.256,164,3.256,165,3.256]],["title/modules/AppRoutingModule.html",[90,1.717,103,1.511]],["body/modules/AppRoutingModule.html",[0,0.041,3,0.559,4,0.472,9,0.472,27,0.045,38,1.027,39,0.859,43,0.559,44,0.31,68,0.896,69,0.653,74,0.896,79,0.896,81,1.16,82,1.234,88,0.037,89,0.037,92,2.199,97,2.874,103,2.621,109,2.874,110,3.424,121,3.376,122,2.499,123,3.376,128,3.376,129,2.499,130,4.297,131,3.376,132,2.499,166,4.139,167,4.139,168,4.932,169,3.18,170,2.499,171,4.139,172,2.874,173,1.95,174,5.572,175,4.139,176,4.023,177,4.139,178,4.139,179,4.139,180,4.139]],["title/interfaces/Game.html",[69,0.448,181,1.717]],["body/interfaces/Game.html",[3,0.259,4,0.219,9,0.402,11,0.949,23,0.349,26,1,27,0.046,28,2.178,30,1.473,32,1.168,36,0.959,43,0.259,46,1.78,69,0.774,77,1.37,88,0.022,89,0.022,156,2.146,158,2.136,181,1.762,182,1.918,183,1.565,184,1.565,185,1.332,186,1.332,187,0.774,188,2.381,189,3.221,190,2.381,191,3.221,192,3.107,193,3.221,194,3.221,195,2.381,196,2.742,197,2.027,198,3.221,199,2.381,200,3.221,201,3.221,202,3.221,203,3.221,204,3.221,205,2.381,206,3.221,207,2.381,208,2.919,209,2.381,210,2.381,211,2.027,212,2.381,213,3.221,214,2.381,215,2.547,216,1.918,217,2.027,218,3.908,219,2.743,220,1.933,221,1.933,222,1.551,223,2.027,224,1.502,225,1.493,226,1.918,227,2.919,228,2.743,229,2.381,230,3.117,231,2.381,232,2.742,233,2.696,234,1.918,235,2.381,236,2.027,237,2.381,238,2.027,239,2.027,240,2.805,241,1.918,242,0.976,243,3.65,244,3.221,245,2.098,246,2.547,247,1.918,248,2.919,249,2.919,250,3.948,251,2.919,252,1.918,253,2.384,254,2.381,255,1.918,256,2.377,257,2.381,258,1.918,259,1.375,260,2.381,261,1.918,262,2.381,263,2.381,264,1.918,265,2.381,266,3.221,267,1.918,268,2.108,269,2.381,270,1.918,271,2.381,272,1.918,273,1.918,274,1.918,275,2.027,276,2.701,277,1.918,278,2.381,279,2.381,280,1.918,281,2.919,282,2.919,283,2.919,284,3.948,285,2.919,286,1.762,287,2.027,288,2.919,289,2.381,290,2.384,291,2.381,292,1.918,293,1.375,294,1.918,295,2.381,296,2.381,297,2.381,298,1.918,299,2.381,300,2.381,301,2.381,302,2.381,303,2.381,304,2.381,305,1.918,306,2.742,307,3.948,308,2.027,309,2.381,310,1.918,311,3.65,312,2.381,313,1.918,314,2.381,315,1.918,316,2.381,317,1.918,318,2.381,319,1.918,320,2.027,321,2.027,322,2.381,323,1.565]],["title/components/GameComponentComponent.html",[0,0.022,68,0.517]],["body/components/GameComponentComponent.html",[0,0.026,1,0.262,2,0.623,3,0.17,4,0.144,5,0.698,6,0.472,7,0.376,8,0.421,9,0.144,11,0.566,12,0.376,13,1.763,14,0.876,15,0.421,16,1.512,17,0.623,19,0.782,21,0.698,23,0.486,24,0.554,25,0.798,26,0.801,27,0.046,28,1.792,29,1.109,30,1.2,32,1.062,35,1.834,36,0.627,38,0.84,39,0.262,40,2.396,41,0.594,42,0.594,43,0.17,44,0.295,45,0.529,46,1.153,47,0.761,52,1.939,54,1.561,55,1.561,56,1.348,57,1.561,61,0.335,62,0.732,63,0.623,64,0.421,65,1.041,66,0.421,67,0.421,68,0.566,69,0.846,70,0.895,71,0.262,72,0.376,73,0.698,74,0.229,75,0.421,76,0.262,77,1.094,78,0.421,79,0.229,80,0.421,81,0.297,82,0.376,83,0.262,84,0.262,85,0.421,86,0.421,87,0.421,88,0.016,89,0.016,132,3.114,155,1.616,156,1.65,158,1.448,159,0.875,170,0.761,173,0.985,187,0.554,196,2.162,197,1.451,211,2.162,215,1.261,218,2.162,219,1.977,220,1.002,221,1.002,222,1.11,223,1.451,224,1.2,225,1.094,228,0.67,230,1.616,233,2.077,240,2.093,256,1.11,268,0.985,276,1.262,286,1.262,290,1.879,306,2.583,308,3.061,324,4.207,325,0.761,326,2.09,327,1.467,328,3.113,329,1.879,330,1.858,331,1.451,332,3.451,333,1.858,334,2.379,335,2.676,336,2.676,337,3.451,338,2.183,339,2.077,340,3.113,341,3.113,342,3.113,343,3.113,344,2.09,345,3.113,346,3.113,347,3.113,348,1.029,349,1.626,350,4.522,351,1.261,352,1.858,353,2.403,354,1.705,355,1.261,356,2.09,357,2.09,358,1.261,359,1.261,360,2.083,361,2.09,362,1.261,363,1.261,364,2.09,365,1.029,366,3.72,367,2.083,368,2.09,369,2.09,370,1.261,371,2.246,372,2.09,373,1.705,374,1.261,375,1.261,376,1.261,377,1.261,378,2.09,379,2.09,380,1.261,381,1.616,382,3.72,383,1.261,384,1.451,385,1.11,386,2.09,387,2.162,388,1.261,389,1.261,390,2.088,391,2.79,392,1.858,393,2.676,394,1.705,395,2.09,396,1.858,397,1.705,398,3.14,399,2.09,400,1.261,401,1.705,402,1.705,403,1.616,404,1.261,405,2.09,406,2.676,407,1.261,408,2.09,409,1.261,410,1.261,411,1.262,412,1.261,413,1.029,414,1.261,415,0.876,416,0.67,417,0.876,418,1.261,419,1.261,420,1.029,421,1.261,422,1.029,423,1.261,424,1.261,425,1.029,426,1.261,427,0.761,428,0.761,429,1.261,430,1.029,431,1.261,432,2.093,433,1.261,434,3.72,435,2.676,436,1.705,437,2.09,438,3.113,439,1.261,440,1.261,441,1.261,442,1.261,443,1.261,444,1.261,445,1.261,446,1.261,447,1.261,448,1.261,449,1.261,450,4.122,451,2.583,452,4.122,453,1.261,454,3.451,455,2.676,456,1.261,457,1.451,458,1.261,459,1.029,460,1.261,461,1.451,462,1.261,463,1.261,464,1.261,465,1.261,466,1.261,467,1.261,468,2.09,469,2.09,470,3.113,471,2.09,472,2.09,473,1.261,474,1.261,475,1.261,476,1.261,477,1.261,478,1.261,479,1.261,480,1.029,481,1.029,482,1.261,483,1.261,484,1.261,485,1.261,486,1.261,487,1.261,488,1.261,489,1.261,490,1.261,491,2.09,492,2.09,493,1.262,494,2.09,495,2.539,496,1.261,497,1.261,498,2.09,499,2.969,500,2.661,501,2.79,502,1.879,503,2.396,504,2.379,505,1.856,506,1.262,507,1.261,508,2.79,509,2.379,510,2.97,511,1.261,512,2.09,513,3.113,514,1.261,515,4.122,516,1.261,517,1.261,518,1.261,519,2.183,520,1.451,521,1.879,522,2.09,523,2.09,524,2.09,525,1.849,526,1.834,527,1.849,528,1.261,529,2.396,530,1.753,531,2.015,532,1.261,533,1.977,534,2.246,535,2.13,536,1.654,537,2.09,538,2.162,539,1.261,540,1.977,541,0.876,542,2.539,543,2.09,544,1.262,545,1.262,546,1.705,547,1.262,548,1.705,549,2.676,550,0.876,551,1.705,552,1.897,553,1.858,554,1.261,555,1.261,556,1.705,557,1.422,558,2.246,559,1.262,560,1.834,561,1.616,562,2.539,563,1.451,564,2.09,565,1.029,566,1.261,567,2.09,568,2.09,569,2.183,570,1.029,571,1.029,572,1.705,573,1.261,574,2.09,575,1.261,576,1.261,577,1.261,578,0.985,579,1.261,580,1.422,581,1.11,582,1.261,583,1.261,584,3.113,585,1.858,586,1.261,587,1.261,588,1.261,589,1.261,590,1.261,591,0.876,592,1.029,593,1.261,594,2.676,595,1.261,596,1.029,597,1.029,598,1.261,599,1.451,600,1.029,601,1.261,602,2.09,603,0.761,604,0.761,605,1.451,606,1.029,607,1.705,608,2.09,609,1.262,610,0.67,611,1.261,612,1.261,613,1.261,614,1.261,615,2.676,616,1.261,617,1.261,618,1.261,619,1.029,620,1.261,621,1.261,622,1.261,623,1.261,624,1.261,625,1.261,626,1.261,627,1.261,628,1.261,629,1.029,630,1.705,631,1.261,632,1.261,633,1.261,634,2.09,635,1.261,636,0.67,637,1.029,638,1.261,639,1.029,640,1.261,641,1.029,642,1.029,643,1.261,644,1.261,645,2.162,646,1.261,647,0.876,648,1.261]],["title/classes/GameConcret.html",[44,0.213,411,1.717]],["body/classes/GameConcret.html",[3,0.232,4,0.195,9,0.375,11,0.914,23,0.312,24,0.71,26,1.013,27,0.046,28,2.175,29,1.275,30,1.502,32,1.166,36,0.926,38,0.312,43,0.232,44,0.247,45,1.561,46,1.742,69,0.822,72,0.798,77,1.227,88,0.02,89,0.02,156,2.104,158,2.313,159,0.403,173,0.808,187,0.71,188,2.184,189,1.399,190,2.184,191,3.036,192,1.191,193,3.036,194,3.036,195,2.184,196,2.584,197,1.859,198,3.036,199,2.184,200,3.036,201,3.036,202,3.036,203,3.036,204,1.399,205,2.184,206,3.036,207,2.184,209,2.184,210,2.184,211,1.859,212,2.184,213,3.036,214,2.184,215,2.498,217,1.859,218,3.828,219,2.741,220,1.853,221,1.853,222,1.423,223,1.859,224,1.463,225,1.435,228,2.795,230,3.114,231,2.184,232,2.584,233,2.673,235,2.184,236,1.859,237,2.184,238,1.859,239,2.803,240,2.672,242,0.895,243,3.036,244,3.036,245,1.423,246,2.63,253,1.616,254,2.184,256,2.581,257,2.184,259,1.261,260,2.184,262,2.184,263,2.184,265,2.184,266,3.036,268,2.369,269,2.184,271,2.184,275,1.859,276,2.582,278,2.184,279,2.184,290,1.616,291,2.184,293,1.261,295,2.184,296,2.184,297,2.184,299,2.184,300,2.184,301,2.184,302,3.036,303,2.184,304,1.399,306,1.859,308,1.191,309,2.184,311,3.489,312,2.184,314,2.184,316,2.184,318,2.686,320,1.859,321,1.859,322,2.184,323,3.292,327,1.551,385,1.423,390,1.002,402,2.184,403,1.988,411,1.616,457,1.859,649,0.911,650,1.399,651,3.293,652,3.293,653,3.293,654,1.715,655,2.677,656,2.677,657,2.677,658,1.715,659,2.677,660,1.715,661,1.715,662,1.715,663,1.715,664,2.677,665,1.715,666,1.715,667,1.715,668,1.715,669,1.715,670,1.715,671,1.715,672,1.715,673,1.715,674,1.715,675,1.715,676,1.715,677,1.715,678,1.715,679,1.715,680,1.715,681,1.715,682,1.715,683,1.715,684,1.715,685,1.715,686,1.715,687,1.715,688,1.715,689,1.715,690,2.184,691,1.399,692,1.859,693,2.677,694,2.184,695,3.293,696,1.715,697,1.715,698,2.677,699,1.715,700,2.677,701,2.184]],["title/injectables/GameOptionServiceService.html",[349,1.34,702,1.717]],["body/injectables/GameOptionServiceService.html",[0,0.039,3,0.487,4,0.41,9,0.41,11,0.823,12,1.35,18,2.938,23,0.655,24,1.202,26,0.655,27,0.045,29,1.35,30,1.202,32,1.028,34,1.946,36,0.655,38,0.823,39,0.747,43,0.487,44,0.27,46,1.204,69,0.714,88,0.034,89,0.034,156,1.696,158,1.511,159,1.066,187,1.202,220,1.348,221,1.348,224,0.956,225,1.315,238,3.145,245,2.407,259,2.134,349,2.134,353,3.133,385,2.407,416,2.762,427,3.139,493,2.734,702,2.734,703,3.602,704,4.241,705,2.938,706,3.695,707,4.529,708,4.46,709,5.198,710,4.46,711,3.695,712,2.734,713,3.695,714,4.529,715,4.529,716,4.529,717,3.602,718,4.529,719,4.529,720,3.695,721,4.529,722,3.602,723,4.241,724,4.529,725,3.602,726,3.695,727,3.602,728,2.501,729,3.602,730,3.602]],["title/classes/HtmlBalise.html",[44,0.213,381,1.717]],["body/classes/HtmlBalise.html",[3,0.461,4,0.388,9,0.388,11,0.619,23,0.619,24,1.16,25,1.016,26,0.619,27,0.046,29,1.016,30,0.904,32,1.002,34,1.637,35,1.811,43,0.461,44,0.404,45,2.372,62,0.802,88,0.033,89,0.033,155,2.058,156,1.907,158,1.834,159,1.136,187,1.16,224,1.16,225,1.16,242,1.462,259,2.06,286,2.058,381,3.352,384,3.353,385,2.324,427,3.18,451,3.658,480,2.78,481,3.567,570,2.78,571,2.78,592,2.78,649,1.811,708,3.567,731,2.78,732,3.408,733,3.408,734,5.608,735,5.608,736,5.094,737,5.094,738,3.408,739,3.408,740,3.567,741,3.408,742,3.408,743,4.529,744,4.397,745,3.408,746,3.567,747,3.408,748,3.408,749,3.408,750,3.408,751,3.408,752,3.408,753,3.408,754,3.408,755,3.408,756,3.408,757,3.408,758,3.408,759,3.408,760,3.408,761,3.408,762,3.408,763,3.408,764,3.408,765,3.408,766,5.094]],["title/classes/HtmlDisplay.html",[44,0.213,334,1.717]],["body/classes/HtmlDisplay.html",[0,0.025,3,0.311,4,0.262,7,1.649,9,0.262,11,0.897,14,2.999,23,0.418,24,0.887,26,1.01,27,0.046,28,2.175,29,0.996,30,0.887,32,1.07,34,1.617,35,1.776,36,0.919,38,0.607,43,0.311,44,0.386,46,1.773,62,1.343,63,1.686,88,0.025,89,0.025,156,2.007,158,0.966,159,0.786,173,1.854,185,2.321,186,2.321,187,0.887,215,2.034,217,2.999,220,1.893,221,1.791,222,2.849,224,1.269,225,1.269,229,3.523,240,2.849,246,1.776,268,1.575,276,2.607,286,2.607,333,2.321,334,2.607,338,3.21,385,1.776,387,2.321,403,2.607,430,2.726,451,1.598,495,2.726,505,2.55,527,2.38,647,2.321,649,1.223,711,2.726,728,1.598,740,2.726,743,4.374,767,1.877,768,2.726,769,2.726,770,3.342,771,3.342,772,3.342,773,3.342,774,3.342,775,3.342,776,3.342,777,3.342,778,3.342,779,2.302,780,5.457,781,2.726,782,3.342,783,3.523,784,2.302,785,4.318,786,3.342,787,2.726,788,3.342,789,4.318,790,4.318,791,2.302,792,3.342,793,5.362,794,3.342,795,4.318,796,2.321,797,3.342,798,3.342,799,3.342,800,3.342,801,3.342,802,4.318,803,3.342,804,3.342,805,3.342,806,3.342,807,2.302,808,2.726,809,3.342,810,2.302,811,3.342,812,2.726,813,3.342,814,3.342,815,2.302,816,3.342,817,3.342,818,2.302,819,3.342,820,2.321,821,2.726,822,2.302,823,2.302,824,1.877,825,2.302,826,2.302,827,2.302,828,2.302,829,2.302,830,2.302,831,5.057,832,2.302,833,2.302,834,2.302,835,2.302,836,3.342]],["title/components/InformationButtonComponent.html",[0,0.022,71,0.59]],["body/components/InformationButtonComponent.html",[0,0.04,1,0.724,2,1.324,3,0.472,4,0.398,5,1.166,6,1.306,7,1.04,8,1.166,9,0.398,11,0.634,12,1.04,13,1.306,15,1.166,16,1.909,17,1.324,19,1.662,21,1.484,23,0.634,25,1.04,26,0.634,27,0.045,32,0.921,34,1.924,36,0.807,37,2.68,38,0.634,39,0.724,43,0.472,44,0.261,56,1.04,61,0.926,62,1.044,63,1.324,64,1.166,65,1.718,66,1.166,67,1.166,68,0.634,69,0.55,70,1.632,71,1.066,72,1.692,73,1.484,74,0.634,75,1.166,76,0.724,77,0.926,78,1.166,79,0.634,80,1.166,81,0.821,82,1.04,83,0.724,84,0.724,85,1.166,86,1.166,87,1.166,88,0.034,89,0.034,120,3.39,159,0.821,187,1.178,224,0.926,225,0.926,242,1.484,371,3.103,432,1.854,525,2.048,535,1.644,544,2.107,548,2.847,552,1.464,578,1.644,580,1.854,581,1.854,610,1.854,712,3.103,837,3.983,838,2.423,839,4.439,840,4.439,841,4.439,842,3.983,843,3.621,844,4.192,845,3.621,846,4.328,847,3.983,848,2.847,849,4.192,850,3.621,851,3.083,852,2.847,853,3.621,854,2.847,855,3.621,856,3.49,857,2.847,858,3.49,859,2.847]],["title/components/MainMenuComponent.html",[0,0.022,74,0.517]],["body/components/MainMenuComponent.html",[0,0.033,1,0.513,2,0.737,3,0.334,4,0.177,5,0.518,6,0.581,7,0.462,8,0.518,9,0.549,11,0.561,12,1.461,13,1.609,15,0.518,16,1.61,17,1.049,19,0.926,21,0.827,23,0.699,24,0.934,25,0.462,26,0.904,27,0.046,28,1.803,29,1.436,30,1.278,32,1.047,34,0.926,35,1.314,36,0.699,37,2.125,38,0.811,39,0.322,40,2.669,41,0.731,42,0.731,43,0.21,44,0.116,46,0.827,47,0.936,48,1.265,51,1.077,52,1.719,54,1.294,55,1.294,56,1.436,57,1.294,61,0.411,62,0.582,63,0.737,64,1.031,65,1.176,66,0.518,67,0.518,68,0.282,69,0.844,70,1.031,71,0.322,72,0.92,73,0.827,74,0.64,75,0.518,76,0.322,77,0.656,78,0.518,79,0.282,80,0.518,81,0.365,82,0.462,83,0.322,84,0.322,85,0.518,86,0.518,87,0.518,88,0.019,89,0.019,110,1.077,111,1.265,112,1.077,113,0.936,115,1.265,122,3.08,126,1.265,127,1.265,146,1.077,155,0.936,156,1.534,159,0.904,173,2.451,187,0.656,215,1.658,219,1.87,220,1.155,221,1.155,224,1.02,225,1.087,228,2.043,230,1.493,232,2.142,233,1.658,239,2.142,242,1.176,245,2.68,246,1.314,256,1.639,259,1.165,268,1.658,287,1.077,293,1.658,320,1.717,321,1.717,327,1.165,329,1.862,339,2.451,348,1.265,349,1.658,352,1.717,353,2.559,354,2.017,360,2.321,367,2.125,371,2.595,390,1.948,391,2.125,396,1.077,397,1.265,403,1.493,415,1.077,416,1.639,417,1.077,427,0.936,428,2.125,432,2.284,461,1.077,493,2.473,499,2.142,500,0.936,501,2.777,502,1.493,504,2.321,505,2.025,506,1.862,508,2.595,509,2.125,510,2.321,519,2.871,520,2.444,525,1.803,527,1.294,529,1.717,530,1.453,531,1.453,533,1.87,534,1.493,535,1.93,536,1.314,540,0.824,541,2.142,544,0.936,545,0.936,547,0.936,550,1.077,552,1.719,556,1.265,557,1.639,558,0.936,559,0.936,560,1.639,561,0.936,562,2.017,563,1.077,565,1.265,578,1.453,580,1.639,581,1.639,585,1.077,591,1.717,599,1.077,603,1.862,604,0.936,605,1.077,609,1.493,610,1.314,622,1.165,636,1.87,690,2.017,692,1.077,694,2.516,706,2.017,712,1.493,713,2.017,723,2.017,726,2.017,744,2.017,746,2.017,781,2.017,787,2.871,796,2.444,808,2.017,820,1.077,851,1.717,857,1.265,859,1.265,860,4.162,861,1.265,862,3.519,863,3.084,864,2.473,865,3.844,866,3.084,867,2.473,868,2.017,869,3.519,870,2.871,871,1.551,872,1.551,873,1.551,874,4.463,875,2.473,876,1.551,877,2.017,878,2.017,879,2.871,880,2.017,881,2.017,882,2.871,883,2.017,884,2.017,885,2.444,886,2.017,887,2.017,888,2.017,889,2.017,890,2.017,891,2.017,892,1.551,893,2.516,894,2.473,895,1.551,896,2.473,897,2.473,898,4.298,899,2.473,900,1.551,901,2.473,902,2.473,903,1.551,904,2.473,905,1.551,906,1.551,907,1.551,908,1.551,909,1.551,910,2.516,911,1.551,912,1.551,913,2.473,914,1.551,915,1.551,916,1.551,917,1.265,918,1.551,919,2.473,920,2.473,921,2.473,922,3.084,923,1.551,924,1.551,925,1.265,926,1.265,927,1.265,928,1.265,929,1.265,930,1.265,931,1.265,932,1.265,933,1.265,934,1.265,935,1.265,936,1.265,937,2.017,938,1.551,939,1.551,940,2.473,941,2.473,942,3.136,943,2.473,944,2.473,945,1.551,946,1.551,947,1.551,948,1.551,949,1.551,950,1.551,951,1.551,952,1.551,953,1.551,954,1.551,955,3.084,956,2.017,957,1.551,958,1.265,959,1.265,960,1.265,961,1.265,962,2.017,963,1.265,964,1.265,965,1.265,966,1.265,967,1.551,968,1.551,969,1.551,970,1.265,971,1.551,972,1.551,973,1.551,974,1.551,975,1.265,976,1.551,977,1.862,978,2.473,979,1.551,980,2.473,981,1.551,982,1.551,983,1.551,984,2.473,985,2.473,986,2.017,987,2.473,988,2.473,989,2.473,990,2.473,991,2.473,992,2.473,993,2.473,994,1.551,995,1.551,996,1.077,997,2.444,998,1.551,999,2.017,1000,1.265,1001,2.017,1002,1.265,1003,1.265,1004,1.077,1005,1.265,1006,1.265,1007,1.265,1008,1.265,1009,1.265,1010,1.077,1011,1.717,1012,1.265,1013,1.551,1014,1.265,1015,1.551,1016,1.551,1017,1.551,1018,2.017,1019,2.473,1020,1.551,1021,1.265,1022,1.551,1023,1.551,1024,1.551,1025,2.516,1026,1.551,1027,1.551,1028,1.551,1029,1.265,1030,1.265]],["title/components/PlayerCardComponent.html",[0,0.022,76,0.59]],["body/components/PlayerCardComponent.html",[0,0.039,1,0.657,2,1.243,3,0.428,4,0.361,5,1.059,6,1.186,7,0.944,8,1.059,9,0.361,11,0.576,12,0.944,13,1.745,15,1.059,16,1.881,17,1.243,19,1.561,21,1.394,23,0.576,25,0.944,26,0.576,27,0.045,29,0.944,30,1.237,32,0.657,36,0.9,38,0.576,39,0.657,43,0.428,44,0.237,52,2.078,54,1.749,55,1.749,56,1.39,57,1.749,61,0.84,62,0.981,63,1.243,64,1.059,65,1.656,66,1.059,67,1.059,68,0.576,69,0.499,70,1.558,71,0.657,72,0.944,73,1.394,74,0.576,75,1.059,76,1.028,77,1.518,78,1.059,79,0.576,80,1.059,81,0.745,82,0.944,83,0.657,84,0.657,85,1.059,86,1.059,87,1.059,88,0.032,89,0.032,135,2.895,233,1.964,242,1.394,253,2.517,290,3.19,339,1.964,390,2.187,500,1.912,501,2.517,502,1.912,503,2.199,504,1.912,505,1.492,506,1.912,508,1.912,509,1.912,510,1.912,525,1.749,526,2.216,527,1.329,530,1.964,531,2.196,533,2.216,534,1.912,535,2.425,536,2.216,540,2.216,542,4.198,547,2.814,552,1.955,553,2.199,557,2.477,558,1.912,560,2.632,561,2.814,600,3.401,606,3.401,607,2.584,610,1.683,622,2.196,629,2.584,636,1.683,997,2.199,999,2.584,1004,2.199,1031,3.401,1032,2.584,1033,4.169,1034,4.661,1035,4.169,1036,3.401,1037,3.167,1038,3.167,1039,3.167,1040,3.167,1041,3.167,1042,3.167,1043,3.167,1044,3.167,1045,2.584,1046,3.167,1047,3.167,1048,4.169,1049,3.167,1050,3.167,1051,2.584,1052,3.167,1053,3.167,1054,3.167,1055,3.167,1056,3.167,1057,3.167,1058,3.167,1059,3.167]],["title/components/SettingsComponentComponent.html",[0,0.022,79,0.517]],["body/components/SettingsComponentComponent.html",[0,0.034,1,0.352,2,0.792,3,0.229,4,0.193,5,0.567,6,0.635,7,0.506,8,0.567,9,0.507,11,0.73,12,0.506,13,1.904,15,0.567,16,1.65,17,0.792,19,0.994,21,0.888,23,0.73,24,0.705,25,0.506,26,0.935,27,0.046,28,1.773,29,1.444,30,1.404,32,1.024,36,0.861,38,0.483,39,0.352,43,0.229,44,0.127,45,1.372,46,1.093,47,1.025,52,1.685,54,1.372,55,1.372,56,1.103,57,1.372,61,0.45,62,0.625,63,0.792,64,0.567,65,1.237,66,0.567,67,0.567,68,0.308,69,0.828,70,1.093,71,0.352,72,0.506,73,0.888,74,0.308,75,0.567,76,0.352,77,0.868,78,0.567,79,0.672,80,1.54,81,0.399,82,0.506,83,0.352,84,0.352,85,0.567,86,0.567,87,0.567,88,0.02,89,0.02,129,3.028,159,0.399,173,2.325,187,0.705,215,1.251,219,1.966,220,1.385,221,1.385,224,1.066,225,1.066,228,2.665,233,2.396,236,1.844,240,0.902,242,0.888,245,2.516,246,1.411,253,1.603,256,1.738,259,1.251,268,1.892,287,1.178,293,1.251,325,1.025,330,2.271,331,1.844,339,2.363,349,1.251,352,1.178,353,2.365,360,2.859,365,1.384,367,1.603,390,2.021,391,2.571,392,2.271,396,1.844,398,3.427,415,1.178,416,1.738,417,1.178,432,1.411,436,3.018,459,3.276,461,1.178,499,3.427,500,2.924,501,3.26,502,2.859,503,2.789,504,2.687,505,2.231,506,1.025,508,2.781,509,2.571,510,3.07,520,1.844,521,1.603,525,1.786,526,1.411,527,0.712,529,2.569,530,1.541,531,1.251,533,1.738,534,2.425,535,2.006,536,1.738,538,2.271,545,1.025,550,1.178,551,2.166,552,1.372,557,1.411,558,2.234,559,1.025,560,1.738,561,1.025,563,1.844,569,2.166,578,1.743,580,1.738,581,1.738,585,1.844,603,2.687,604,1.975,605,1.844,609,2.425,610,0.902,622,1.251,636,1.411,645,1.178,647,1.178,691,1.384,692,1.178,720,2.166,768,2.166,820,1.178,868,2.166,870,3.018,891,2.166,893,3.63,910,2.166,925,1.384,926,1.384,927,1.384,928,1.384,929,1.384,930,1.384,931,1.384,932,2.166,933,1.384,934,1.384,935,1.384,936,1.384,937,2.166,942,1.384,956,1.384,958,1.384,959,1.384,960,1.384,961,1.384,962,2.166,963,1.384,964,1.384,965,1.384,966,1.384,970,1.384,975,1.384,977,1.975,986,2.166,996,1.178,997,2.789,1000,2.166,1001,2.668,1002,1.384,1003,1.384,1004,1.844,1005,1.384,1006,1.384,1007,1.384,1008,1.384,1009,1.384,1010,2.957,1011,2.569,1012,3.63,1014,1.384,1025,1.384,1045,1.384,1060,4.091,1061,2.655,1062,3.271,1063,2.655,1064,2.655,1065,2.655,1066,1.697,1067,1.697,1068,3.271,1069,1.697,1070,1.697,1071,2.655,1072,2.166,1073,2.655,1074,1.697,1075,2.655,1076,3.7,1077,1.697,1078,2.655,1079,1.697,1080,2.655,1081,1.697,1082,1.697,1083,1.697,1084,2.655,1085,1.697,1086,2.655,1087,2.655,1088,1.697,1089,1.697,1090,1.697,1091,1.697,1092,2.655,1093,1.697,1094,1.697,1095,1.697,1096,1.697,1097,1.697,1098,1.697,1099,1.697,1100,1.384,1101,2.655,1102,1.697,1103,1.697,1104,1.697,1105,1.697,1106,1.697,1107,1.697,1108,2.655,1109,1.697,1110,2.655,1111,2.655,1112,2.655,1113,2.655,1114,1.697,1115,1.697,1116,1.697,1117,1.697,1118,2.655,1119,1.697,1120,1.697,1121,1.697,1122,1.697,1123,1.697,1124,1.697,1125,1.697,1126,1.697,1127,1.697,1128,1.697,1129,1.697,1130,1.384,1131,1.697,1132,2.655,1133,1.697,1134,1.697,1135,1.697,1136,1.697,1137,1.697,1138,2.655,1139,1.697,1140,2.655,1141,2.655,1142,1.697,1143,1.697,1144,1.697,1145,1.697,1146,1.697,1147,1.697]],["title/components/ShopComponentComponent.html",[0,0.022,81,0.669]],["body/components/ShopComponentComponent.html",[0,0.04,1,0.734,2,1.335,3,0.478,4,0.403,5,1.182,7,1.054,8,1.182,9,0.403,11,0.814,12,1.054,15,1.182,16,1.913,17,1.335,21,1.496,23,0.643,25,1.054,26,0.643,27,0.045,32,0.929,36,0.893,38,0.893,39,0.734,41,1.666,42,1.666,43,0.478,44,0.368,45,1.483,56,1.054,61,0.938,62,1.053,63,1.465,64,1.182,65,1.726,66,1.182,67,1.182,68,0.643,69,0.558,70,1.642,71,0.734,72,1.054,73,1.496,74,0.643,75,1.182,76,0.734,77,0.938,78,1.182,79,0.643,80,1.182,81,1.215,82,1.648,83,0.734,84,0.734,85,1.182,86,1.182,87,1.182,88,0.034,89,0.034,109,3.109,146,3.411,170,2.135,172,3.411,176,3.652,187,1.188,220,1.324,221,1.324,224,1.188,225,1.304,325,2.135,327,2.109,329,2.966,330,3.109,331,3.109,339,2.109,387,2.455,390,1.676,428,2.135,457,3.109,1148,4.007,1149,4.477,1150,4.477,1151,4.477,1152,4.913,1153,4.477,1154,4.913,1155,4.477,1156,3.536,1157,3.536,1158,3.536,1159,2.885,1160,4.477,1161,4.477,1162,3.536,1163,3.536,1164,2.885,1165,3.536,1166,3.536,1167,3.536,1168,3.536,1169,4.477]],["title/components/StartButtonComponent.html",[0,0.022,83,0.59]],["body/components/StartButtonComponent.html",[0,0.042,1,0.526,2,1.067,3,0.342,4,0.289,5,0.847,6,0.949,7,0.755,8,0.847,9,0.289,11,0.46,12,0.755,13,0.949,15,0.847,16,1.808,17,1.067,19,1.34,21,1.197,23,0.46,24,0.95,25,0.755,26,0.898,27,0.046,28,2.002,29,1.514,30,1.263,32,1.076,34,2.075,36,0.923,38,0.46,39,0.526,43,0.342,44,0.19,52,1.502,54,1.063,55,1.063,56,1.573,57,1.063,61,0.672,62,0.842,63,1.067,64,1.388,65,1.508,66,0.847,67,0.847,68,0.46,69,0.4,70,1.388,71,0.526,72,0.755,73,1.197,74,0.46,75,0.847,76,0.526,77,0.672,78,0.847,79,0.46,80,0.847,81,0.596,82,0.755,83,0.936,84,0.526,85,0.847,86,0.847,87,0.847,88,0.027,89,0.027,117,3.663,159,0.596,187,0.95,224,0.95,225,1.102,242,1.197,293,2.611,327,1.687,329,2.507,353,1.902,371,3.346,390,0.949,428,2.724,432,1.346,505,1.687,521,2.162,525,2.213,526,1.346,527,2.131,530,1.194,531,1.194,533,1.902,535,2.126,536,1.902,540,1.346,541,1.759,547,2.162,552,1.893,557,1.346,559,2.162,572,4.362,578,1.687,580,1.346,581,1.346,591,2.486,597,2.067,599,1.759,619,2.067,622,2.328,641,2.067,642,2.067,645,1.759,710,4.362,712,2.724,838,1.759,842,3.387,843,2.921,844,3.681,845,2.921,846,3.883,847,3.387,848,2.067,849,3.681,850,2.921,851,2.486,852,2.067,853,2.921,854,2.067,877,2.921,878,2.921,879,3.681,880,2.921,881,2.921,882,3.681,883,2.921,884,2.921,885,2.486,886,2.921,887,2.921,888,2.921,889,2.921,890,2.921,977,1.53,1018,2.921,1030,2.067,1036,2.921,1130,2.067,1170,4.303,1171,3.58,1172,3.58,1173,3.58,1174,5.079,1175,4.152,1176,4.152,1177,4.152,1178,5.347,1179,2.534,1180,2.534,1181,2.534,1182,3.58,1183,2.534,1184,2.534,1185,2.534,1186,2.534,1187,2.534,1188,3.58,1189,2.534,1190,3.58,1191,2.534,1192,2.534,1193,2.534,1194,2.534]],["title/components/TitleComponent.html",[0,0.022,84,0.59]],["body/components/TitleComponent.html",[0,0.039,1,0.673,2,1.263,3,0.438,4,0.37,5,1.085,6,1.215,7,0.967,8,1.085,9,0.37,11,0.59,12,1.406,13,1.215,15,1.085,16,1.888,17,1.263,19,1.586,21,1.416,25,1.547,27,0.045,36,0.77,37,2.558,38,0.857,39,0.673,43,0.438,44,0.243,52,2.098,54,1.777,56,0.967,61,0.861,62,0.997,63,1.263,64,1.085,65,1.671,66,1.085,67,1.085,68,0.59,69,0.512,70,1.576,71,0.673,72,0.967,73,1.416,74,0.59,75,1.085,76,0.673,77,0.861,78,1.085,79,0.59,80,1.085,81,0.763,82,0.967,83,0.673,84,1.038,85,1.576,86,1.085,87,1.085,88,0.032,89,0.032,242,1.416,289,3.456,339,2.506,390,2.157,493,2.558,521,2.558,525,1.777,526,2.251,527,2.232,530,1.996,531,1.996,538,2.942,540,2.251,544,1.959,545,3.019,546,3.456,552,1.777,553,2.253,560,1.724,578,1.996,603,2.558,604,1.959,609,1.959,630,2.647,636,2.251,637,3.456,639,2.647,977,1.959,996,2.253,1010,2.253,1011,2.942,1021,2.647,1029,2.647,1051,2.647,1195,2.647,1196,4.236,1197,4.716,1198,4.236,1199,5,1200,3.245,1201,3.245,1202,3.245,1203,3.245,1204,3.245,1205,3.245,1206,3.245,1207,3.245,1208,3.245,1209,3.245,1210,4.236,1211,3.245,1212,3.245,1213,4.236,1214,3.245,1215,3.245,1216,3.245,1217,3.245,1218,3.245,1219,3.245,1220,3.245,1221,3.245,1222,3.245,1223,3.245,1224,3.245,1225,3.245,1226,3.245,1227,3.245,1228,3.245,1229,3.245,1230,3.245,1231,3.245,1232,3.245,1233,3.245,1234,3.245,1235,3.245,1236,3.245,1237,3.245,1238,3.245]],["title/coverage.html",[1239,3.164]],["body/coverage.html",[0,0.043,1,0.796,9,0.437,10,3.128,26,0.697,27,0.045,44,0.421,68,0.697,69,0.605,71,0.796,74,0.697,76,0.796,79,0.697,81,0.902,83,0.796,84,0.796,88,0.036,89,0.036,117,2.662,120,2.662,122,2.315,129,2.315,132,2.315,135,2.662,159,0.902,172,2.662,181,2.315,183,3.128,324,3.128,325,3.077,334,2.315,349,1.806,373,3.128,381,2.315,398,4.051,411,2.315,413,3.128,416,2.037,420,3.128,422,3.128,596,3.128,650,3.128,702,2.315,704,3.128,705,3.128,731,3.128,767,3.128,837,3.128,838,3.27,860,3.128,861,3.128,1031,3.128,1032,3.128,1060,3.128,1148,3.128,1170,3.128,1195,3.128,1239,3.128,1240,3.128,1241,3.834,1242,4.708,1243,3.834,1244,5.314,1245,4.708,1246,3.834,1247,3.834,1248,3.834,1249,4.708,1250,3.834,1251,3.834,1252,3.834,1253,3.834,1254,4.708,1255,3.834,1256,4.708,1257,3.834,1258,3.834,1259,3.834,1260,3.834,1261,3.834,1262,3.834]],["title/dependencies.html",[93,2.065,1263,1.65]],["body/dependencies.html",[27,0.045,39,0.879,41,2.355,42,1.995,55,1.777,56,1.263,57,1.777,88,0.038,89,0.038,93,2.557,112,3.471,113,3.018,137,3.455,148,3.455,149,3.455,170,2.557,425,3.455,728,2.941,917,3.455,1264,4.235,1265,5.815,1266,4.235,1267,4.999,1268,4.235,1269,4.235,1270,4.235,1271,4.235,1272,4.235,1273,4.235,1274,4.235,1275,4.235,1276,4.235,1277,4.235,1278,4.235,1279,4.235]],["title/index.html",[23,0.432,1280,2.376,1281,2.376]],["body/index.html",[0,0.034,4,0.326,27,0.03,31,2.333,34,1.07,36,0.52,51,3.453,62,1.042,88,0.03,89,0.03,107,1.986,159,0.673,184,2.333,185,3.563,186,3.453,192,3.563,222,1.519,275,1.986,293,1.347,327,1.347,333,3.074,360,2.351,367,2.673,384,2.704,622,1.347,649,1.519,701,3.612,769,3.176,783,3.612,796,3.074,812,2.333,821,2.333,824,3.877,855,3.612,885,1.986,1072,2.333,1159,3.877,1164,3.176,1240,3.176,1263,1.986,1282,3.894,1283,4.427,1284,2.333,1285,2.859,1286,2.859,1287,3.894,1288,5.131,1289,5.343,1290,2.859,1291,2.859,1292,2.859,1293,2.859,1294,2.859,1295,2.859,1296,2.859,1297,2.859,1298,4.753,1299,2.859,1300,4.427,1301,2.859,1302,4.753,1303,2.859,1304,2.859,1305,2.859,1306,2.859,1307,3.894,1308,4.427,1309,5.25,1310,3.894,1311,4.427,1312,3.894,1313,2.859,1314,2.859,1315,2.859,1316,3.894,1317,2.859,1318,2.859,1319,2.859,1320,2.859,1321,2.859,1322,1.986,1323,2.859,1324,4.753,1325,5.573,1326,3.894,1327,2.859,1328,3.894,1329,2.859,1330,5.611,1331,5.131,1332,4.973,1333,5.343,1334,2.859,1335,5.131,1336,2.859,1337,5.479,1338,2.859,1339,2.859,1340,2.859,1341,3.894,1342,4.427,1343,2.859,1344,5.131,1345,4.427,1346,3.894,1347,3.894,1348,3.894,1349,3.894,1350,2.859,1351,3.894,1352,4.973,1353,4.753,1354,2.859,1355,2.859,1356,2.859,1357,4.973,1358,4.427,1359,5.479,1360,2.859,1361,3.894,1362,2.859,1363,4.427,1364,2.859,1365,2.859,1366,2.859,1367,3.894,1368,4.427,1369,2.859,1370,4.753,1371,4.427,1372,2.859,1373,2.859,1374,2.859,1375,3.894,1376,2.859,1377,2.859,1378,2.859,1379,2.859,1380,2.859,1381,2.859,1382,2.859,1383,3.894,1384,2.859,1385,2.859,1386,2.859,1387,2.859,1388,2.859,1389,2.859,1390,2.859,1391,2.859,1392,2.859,1393,2.859,1394,2.859,1395,2.859,1396,2.859,1397,2.859,1398,2.859,1399,3.894,1400,2.859,1401,2.859,1402,2.859,1403,3.894,1404,2.859,1405,2.859,1406,2.859,1407,2.859,1408,2.859,1409,2.859,1410,2.859,1411,2.859,1412,2.859,1413,2.859,1414,2.859,1415,2.859,1416,4.427,1417,2.859,1418,3.894,1419,3.894,1420,4.427,1421,2.859,1422,2.859,1423,2.859,1424,2.859,1425,2.859,1426,3.894,1427,2.859,1428,3.894,1429,2.859,1430,2.859,1431,2.859,1432,2.859,1433,2.859,1434,2.859,1435,2.859]],["title/modules.html",[92,2.061]],["body/modules.html",[27,0.04,88,0.04,89,0.04,91,2.762,92,2.431,103,2.431,113,2.762,401,3.731,1436,4.574,1437,4.574,1438,5.228,1439,4.574]],["title/overview.html",[1322,2.694]],["body/overview.html",[1,1.177,2,1.19,27,0.045,61,1.059,68,0.943,71,1.076,74,0.943,76,1.076,79,0.943,83,1.177,84,1.076,88,0.037,89,0.037,90,2.41,91,3.603,92,2.121,93,2.41,94,3.256,95,3.256,96,3.256,97,2.772,98,3.256,99,3.256,100,3.256,101,3.256,102,3.256,103,2.756,104,4.231,105,3.936,106,3.256,107,2.772,169,2.41,181,2.41,391,2.913,392,2.772,394,3.256,649,2.121,702,2.41,1100,3.256,1322,2.772,1440,3.991]],["title/properties.html",[24,0.907,1263,1.65]],["body/properties.html",[24,1.225,27,0.042,88,0.04,89,0.04,1284,3.767,1441,4.618]],["title/routes.html",[169,2.342]],["body/routes.html",[27,0.04,88,0.04,89,0.04,169,2.801]]],"invertedIndex":[["",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":390,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["0.0.0",{"_index":1441,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1227,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.03em",{"_index":1208,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.05em",{"_index":1234,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.06em",{"_index":1216,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.14.2",{"_index":1279,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":1211,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.1px",{"_index":617,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.25em",{"_index":643,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.2em",{"_index":1213,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.2px",{"_index":618,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.35",{"_index":1050,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.350s",{"_index":1142,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.3em",{"_index":1236,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.3rem",{"_index":600,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.3s",{"_index":607,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5",{"_index":1218,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.5em",{"_index":629,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5px",{"_index":1005,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8em",{"_index":1003,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["0.8rem",{"_index":1040,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.8s",{"_index":1042,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["000000",{"_index":641,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["001546",{"_index":1059,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["00a1ef",{"_index":1221,"title":{},"body":{"components/TitleComponent.html":{}}}],["00b2ff",{"_index":1024,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["0fa",{"_index":542,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0ff",{"_index":635,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0px",{"_index":1048,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1",{"_index":391,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["1.1.13",{"_index":1277,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":1058,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1.2px",{"_index":556,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["1.4em",{"_index":1124,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.5em",{"_index":532,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.6em",{"_index":628,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.7rem",{"_index":1189,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["1.8em",{"_index":567,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1/1",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":528,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10",{"_index":461,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["100",{"_index":398,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["100px",{"_index":582,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["102px",{"_index":1056,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["10abff",{"_index":646,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10px",{"_index":534,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11",{"_index":577,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1125a4",{"_index":1007,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["11em",{"_index":1203,"title":{},"body":{"components/TitleComponent.html":{}}}],["12/12",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["120px",{"_index":543,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["12px",{"_index":1018,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["13px",{"_index":1133,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15",{"_index":1084,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15.0.0",{"_index":1271,"title":{},"body":{"dependencies.html":{}}}],["15.0.1",{"_index":1285,"title":{},"body":{"index.html":{}}}],["15/15",{"_index":1257,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":593,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["151515",{"_index":1017,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["151px",{"_index":1057,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["15deg",{"_index":1205,"title":{},"body":{"components/TitleComponent.html":{}}}],["15px",{"_index":997,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["16.2.12",{"_index":1267,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":1046,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["165ff3",{"_index":1215,"title":{},"body":{"components/TitleComponent.html":{}}}],["17.0.7",{"_index":1265,"title":{},"body":{"dependencies.html":{}}}],["170",{"_index":616,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1b35d3",{"_index":1002,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["1beabd",{"_index":634,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1em",{"_index":549,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1fr",{"_index":518,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1px",{"_index":547,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["2",{"_index":392,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1275,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":537,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2/2",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":396,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["20/21",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":640,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["20125f",{"_index":637,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["20px",{"_index":541,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["210px",{"_index":594,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["21px",{"_index":1052,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["25",{"_index":996,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["255",{"_index":615,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["25px",{"_index":563,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["27/27",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["281775",{"_index":1235,"title":{},"body":{"components/TitleComponent.html":{}}}],["29/29",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":555,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2p",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["2px",{"_index":559,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["3",{"_index":393,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3.2em",{"_index":621,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3/3",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":539,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["300px",{"_index":575,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30px",{"_index":569,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["3146d3",{"_index":857,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["3351ff",{"_index":1129,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["35",{"_index":1222,"title":{},"body":{"components/TitleComponent.html":{}}}],["35em",{"_index":625,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["35px",{"_index":998,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["38/39",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["39/40",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["3em",{"_index":1233,"title":{},"body":{"components/TitleComponent.html":{}}}],["3px",{"_index":645,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["4/4",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":397,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["40px",{"_index":1128,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["42px",{"_index":1053,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["4px",{"_index":1030,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["5",{"_index":394,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["5.5em",{"_index":1232,"title":{},"body":{"components/TitleComponent.html":{}}}],["50",{"_index":636,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["50px",{"_index":599,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["55",{"_index":1224,"title":{},"body":{"components/TitleComponent.html":{}}}],["5em",{"_index":1214,"title":{},"body":{"components/TitleComponent.html":{}}}],["5px",{"_index":1004,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["60",{"_index":1145,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["6px",{"_index":619,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["7",{"_index":1100,"title":{},"body":{"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["7.5.0",{"_index":1273,"title":{},"body":{"dependencies.html":{}}}],["70em",{"_index":1020,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["730505",{"_index":589,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["75",{"_index":1226,"title":{},"body":{"components/TitleComponent.html":{}}}],["797777",{"_index":586,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["7deg",{"_index":1238,"title":{},"body":{"components/TitleComponent.html":{}}}],["7px",{"_index":561,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["8",{"_index":395,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["8.0.0",{"_index":1272,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1118,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["800px",{"_index":566,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["80px",{"_index":565,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["82",{"_index":1116,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["82px",{"_index":1054,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["8313e7",{"_index":1223,"title":{},"body":{"components/TitleComponent.html":{}}}],["8ba2d0",{"_index":1212,"title":{},"body":{"components/TitleComponent.html":{}}}],["8d8d8d",{"_index":648,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["9",{"_index":1440,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":583,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["92px",{"_index":1055,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["949494",{"_index":1019,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["94a0b9",{"_index":1228,"title":{},"body":{"components/TitleComponent.html":{}}}],["95",{"_index":596,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["97",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["__input",{"_index":626,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ability",{"_index":251,"title":{},"body":{"interfaces/Game.html":{}}}],["absolute",{"_index":1010,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["abstraite",{"_index":1343,"title":{},"body":{"index.html":{}}}],["active",{"_index":585,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["actual",{"_index":512,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["actual_component",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["actualfunctioninbacklog",{"_index":651,"title":{},"body":{"classes/GameConcret.html":{}}}],["actuallog",{"_index":232,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["actualtask",{"_index":524,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["add",{"_index":222,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"index.html":{}}}],["addclass",{"_index":773,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addclass(id",{"_index":782,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["added",{"_index":780,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement",{"_index":774,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement(type",{"_index":788,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["adding",{"_index":217,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["additionalvalue",{"_index":789,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue[key",{"_index":832,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addnote",{"_index":188,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addnote(value",{"_index":214,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["addplayername",{"_index":1063,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addplayername(event",{"_index":1066,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["adds",{"_index":792,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext",{"_index":775,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext(text",{"_index":806,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["afin",{"_index":1324,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":328,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ainsi",{"_index":1341,"title":{},"body":{"index.html":{}}}],["align",{"_index":508,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["allows",{"_index":711,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{}}}],["already",{"_index":913,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["andlocations",{"_index":386,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["angular",{"_index":824,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["angular/animations",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1266,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":425,"title":{},"body":{"components/GameComponentComponent.html":{},"dependencies.html":{}}}],["angular/core",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":917,"title":{},"body":{"components/MainMenuComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1268,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["angular/material/input",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":170,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/ShopComponentComponent.html":{},"dependencies.html":{}}}],["angular/router/upgrade",{"_index":915,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["angular/src/tools/esbuild/javascript",{"_index":826,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["angular/upgrade",{"_index":1270,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":1140,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["another",{"_index":710,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/StartButtonComponent.html":{}}}],["app",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["app.component",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["app.component.html",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":1025,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["application",{"_index":1294,"title":{},"body":{"index.html":{}}}],["applied",{"_index":664,"title":{},"body":{"classes/GameConcret.html":{}}}],["appmodule",{"_index":91,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":103,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":507,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["artifacts",{"_index":1303,"title":{},"body":{"index.html":{}}}],["associated",{"_index":659,"title":{},"body":{"classes/GameConcret.html":{}}}],["assurez",{"_index":1421,"title":{},"body":{"index.html":{}}}],["au",{"_index":1349,"title":{},"body":{"index.html":{}}}],["auto",{"_index":602,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["automatically",{"_index":1295,"title":{},"body":{"index.html":{}}}],["available",{"_index":401,"title":{},"body":{"components/GameComponentComponent.html":{},"modules.html":{}}}],["avant",{"_index":1425,"title":{},"body":{"index.html":{}}}],["avec",{"_index":1377,"title":{},"body":{"index.html":{}}}],["average",{"_index":1113,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["averagedecorator",{"_index":420,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["averagedecorator(this.game",{"_index":440,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["avons",{"_index":1331,"title":{},"body":{"index.html":{}}}],["b0b0b0",{"_index":1047,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["back",{"_index":364,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["background",{"_index":552,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["background.jpg",{"_index":1039,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["backlog",{"_index":219,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata",{"_index":256,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["backlogdata[\"boutton",{"_index":470,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogdata[data[key",{"_index":469,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogvalue",{"_index":332,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backup",{"_index":244,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["balise",{"_index":333,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"index.html":{}}}],["bare",{"_index":405,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["based",{"_index":768,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["before",{"_index":887,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["behaviorsubject",{"_index":727,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["behaviorsubject(null",{"_index":721,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["being",{"_index":655,"title":{},"body":{"classes/GameConcret.html":{}}}],["belongs",{"_index":260,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["better",{"_index":1033,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["between",{"_index":999,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["bibliotèque",{"_index":1395,"title":{},"body":{"index.html":{}}}],["black",{"_index":1029,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["block",{"_index":977,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["bon",{"_index":1350,"title":{},"body":{"index.html":{}}}],["bons",{"_index":1414,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":276,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{}}}],["bootstrap",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":535,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["bottom_input",{"_index":1000,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["bound",{"_index":884,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["box",{"_index":558,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["break",{"_index":957,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["brightness(0.8",{"_index":598,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["brightness(90",{"_index":1192,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["browse",{"_index":1438,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["bsetupdefaultvalue",{"_index":652,"title":{},"body":{"classes/GameConcret.html":{}}}],["build",{"_index":1302,"title":{},"body":{"index.html":{}}}],["button",{"_index":371,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["button's",{"_index":850,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["button.component",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":843,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.scss",{"_index":842,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts",{"_index":838,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:16",{"_index":848,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:21",{"_index":852,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1179,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1181,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:36",{"_index":1180,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:41",{"_index":1183,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:47",{"_index":1185,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:54",{"_index":1184,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.style.display",{"_index":920,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["button/information",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["button/start",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button_icon",{"_index":613,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_label",{"_index":612,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_language",{"_index":1027,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["buttonclicked",{"_index":846,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["c7c7c7",{"_index":1193,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["cafe",{"_index":399,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(1em",{"_index":627,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["calc(50",{"_index":1132,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["callback",{"_index":877,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["called",{"_index":1178,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["came",{"_index":590,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["capabilities",{"_index":1318,"title":{},"body":{"index.html":{}}}],["caption_button",{"_index":1188,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["caption_button:hover",{"_index":1191,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captionbackground",{"_index":1175,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captioncolor",{"_index":1176,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["card",{"_index":290,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/PlayerCardComponent.html":{}}}],["card'},{'name",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["card.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":1035,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.scss",{"_index":1034,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.ts",{"_index":1032,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":1037,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card/player",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["cbcbcb",{"_index":1028,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["ce",{"_index":1358,"title":{},"body":{"index.html":{}}}],["center",{"_index":510,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["change",{"_index":293,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["changemod",{"_index":1064,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changemod(event",{"_index":1071,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changer",{"_index":1157,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["changes",{"_index":1068,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changlang",{"_index":867,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changlang(lang",{"_index":872,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changlang(lang:any",{"_index":979,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["changselected",{"_index":1154,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["chaque",{"_index":1400,"title":{},"body":{"index.html":{}}}],["check",{"_index":1072,"title":{},"body":{"components/SettingsComponentComponent.html":{},"index.html":{}}}],["checked",{"_index":882,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["child",{"_index":1210,"title":{},"body":{"components/TitleComponent.html":{}}}],["children",{"_index":591,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["choice",{"_index":1315,"title":{},"body":{"index.html":{}}}],["choose",{"_index":520,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["choosedefaultvalue",{"_index":189,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["choosing",{"_index":1149,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["chrome",{"_index":1423,"title":{},"body":{"index.html":{}}}],["circle",{"_index":1138,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["class",{"_index":44,"title":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["classe",{"_index":783,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["classes",{"_index":649,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"index.html":{},"overview.html":{}}}],["classes/decorateur/averagedecorator",{"_index":421,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/game",{"_index":410,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/gameconcret",{"_index":412,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/majabsdecorator",{"_index":423,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/strictdecorator",{"_index":414,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/facade/htmldisplay",{"_index":418,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/singleton/htmlbalise",{"_index":419,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clear",{"_index":491,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clearhtml",{"_index":776,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearhtml(element",{"_index":809,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearinstance",{"_index":736,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["cli",{"_index":1283,"title":{},"body":{"index.html":{}}}],["cli/src/ngtsc/translator",{"_index":426,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["click",{"_index":1166,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["clicked",{"_index":851,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["clip",{"_index":639,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["closebalise",{"_index":790,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["closes",{"_index":897,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["closing",{"_index":805,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["cluster_appmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_exports",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1298,"title":{},"body":{"index.html":{}}}],["color",{"_index":525,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["column",{"_index":503,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["columns",{"_index":516,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["come",{"_index":1196,"title":{},"body":{"components/TitleComponent.html":{}}}],["command",{"_index":1316,"title":{},"body":{"index.html":{}}}],["commande",{"_index":1420,"title":{},"body":{"index.html":{}}}],["compodoc",{"_index":1428,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["component.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.html",{"_index":331,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["component.component.scss",{"_index":330,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["component.component.ts",{"_index":325,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:102",{"_index":359,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:112",{"_index":1079,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:119",{"_index":363,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:136",{"_index":376,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:157",{"_index":374,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:178",{"_index":362,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:195",{"_index":355,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:21",{"_index":1082,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:210",{"_index":358,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:225",{"_index":375,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:24",{"_index":351,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:246",{"_index":370,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:253",{"_index":377,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:26",{"_index":1081,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:31",{"_index":1085,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:32",{"_index":409,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:36",{"_index":1083,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:37",{"_index":1163,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["component.component.ts:38",{"_index":388,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:41",{"_index":1088,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:43",{"_index":389,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:45",{"_index":1089,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:46",{"_index":1156,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["component.component.ts:48",{"_index":400,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:52",{"_index":1074,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:53",{"_index":383,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:58",{"_index":404,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:63",{"_index":407,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:64",{"_index":1067,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:67",{"_index":380,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:78",{"_index":365,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:87",{"_index":1077,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component/game",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"coverage.html":{}}}],["component/settings",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component/shop",{"_index":172,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ShopComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["components/game",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/information",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/player",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/shop",{"_index":171,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/start",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title/title.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["con",{"_index":894,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["concret",{"_index":1355,"title":{},"body":{"index.html":{}}}],["configurable",{"_index":1171,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["connect",{"_index":822,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console",{"_index":1110,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(\"data",{"_index":973,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["console.log(\"test",{"_index":1106,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.backlogdata",{"_index":1105,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.mode",{"_index":958,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["console.log(this.players",{"_index":691,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["const",{"_index":173,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["constructor(dataservice",{"_index":348,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["constructor(private",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["cont",{"_index":455,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["contain",{"_index":496,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container",{"_index":498,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container_bottom",{"_index":1015,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_header",{"_index":995,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_middle",{"_index":994,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["containing",{"_index":385,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["contains",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["content",{"_index":505,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["contient",{"_index":1345,"title":{},"body":{"index.html":{}}}],["continue",{"_index":379,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["continuegame",{"_index":190,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["continuegame(defaultvalue",{"_index":231,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["correctement",{"_index":1401,"title":{},"body":{"index.html":{}}}],["courses",{"_index":254,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["coverage",{"_index":1239,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatanddownloadjson",{"_index":191,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["create",{"_index":242,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["creating",{"_index":714,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["cross",{"_index":587,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["current",{"_index":253,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["currently",{"_index":357,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["cursor",{"_index":580,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["d'autre",{"_index":1380,"title":{},"body":{"index.html":{}}}],["d'avoir",{"_index":1422,"title":{},"body":{"index.html":{}}}],["d'implémenter",{"_index":1369,"title":{},"body":{"index.html":{}}}],["d'installer",{"_index":1424,"title":{},"body":{"index.html":{}}}],["d'y",{"_index":1392,"title":{},"body":{"index.html":{}}}],["d000ff",{"_index":562,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["dafoe",{"_index":1231,"title":{},"body":{"components/TitleComponent.html":{}}}],["dans",{"_index":1383,"title":{},"body":{"index.html":{}}}],["data",{"_index":353,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["data[key",{"_index":454,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dataservice",{"_index":352,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["de",{"_index":1325,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorateur",{"_index":1334,"title":{},"body":{"index.html":{}}}],["decoration",{"_index":1022,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["decorator",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"index.html":{}}}],["default",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defaultvalue",{"_index":239,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["defines",{"_index":320,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["deleting",{"_index":811,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dependencies",{"_index":93,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["depuis",{"_index":1373,"title":{},"body":{"index.html":{}}}],["des",{"_index":1371,"title":{},"body":{"index.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["design",{"_index":185,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{},"index.html":{}}}],["detector",{"_index":881,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["dev",{"_index":1291,"title":{},"body":{"index.html":{}}}],["development",{"_index":1286,"title":{},"body":{"index.html":{}}}],["devkit/build",{"_index":825,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["différents",{"_index":1338,"title":{},"body":{"index.html":{}}}],["diférentes",{"_index":1408,"title":{},"body":{"index.html":{}}}],["directement",{"_index":1372,"title":{},"body":{"index.html":{}}}],["direction",{"_index":502,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["directive",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive's",{"_index":883,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["directives",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1301,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1306,"title":{},"body":{"index.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["displayed",{"_index":808,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["displayhtml",{"_index":777,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml(element",{"_index":814,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displays",{"_index":801,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dist",{"_index":1305,"title":{},"body":{"index.html":{}}}],["div",{"_index":495,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["divers",{"_index":1390,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1426,"title":{},"body":{"index.html":{}}}],["document.getelementbyid(\"actualtask",{"_index":752,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"contniue",{"_index":919,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"endmessage",{"_index":754,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"finishbutton",{"_index":762,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"gamemodemessage",{"_index":764,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"playerbutton",{"_index":758,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"popup",{"_index":921,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["document.getelementbyid(\"stage1",{"_index":480,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"standardvalue",{"_index":750,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"texttoshow",{"_index":756,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"validatebutton",{"_index":760,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(id",{"_index":833,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["document.getelementsbyclassname(\"skinbutton",{"_index":1167,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["documentation",{"_index":1240,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["down",{"_index":657,"title":{},"body":{"classes/GameConcret.html":{}}}],["download",{"_index":243,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["du",{"_index":1159,"title":{},"body":{"components/ShopComponentComponent.html":{},"index.html":{}}}],["duration",{"_index":1045,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["during",{"_index":281,"title":{},"body":{"interfaces/Game.html":{}}}],["dynamic",{"_index":1269,"title":{},"body":{"dependencies.html":{}}}],["dériv",{"_index":1354,"title":{},"body":{"index.html":{}}}],["déroulement",{"_index":1351,"title":{},"body":{"index.html":{}}}],["e",{"_index":1165,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["e0e0e0",{"_index":1041,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["e2e",{"_index":1313,"title":{},"body":{"index.html":{}}}],["e3e3e3",{"_index":632,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["e9e9ea",{"_index":1006,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["each",{"_index":250,"title":{},"body":{"interfaces/Game.html":{}}}],["ease",{"_index":608,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["easily",{"_index":771,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["element.classlist.add(classe",{"_index":835,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element.innerhtml",{"_index":836,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["elements",{"_index":387,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/ShopComponentComponent.html":{}}}],["emplacement",{"_index":1391,"title":{},"body":{"index.html":{}}}],["emptied",{"_index":813,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["empty",{"_index":740,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["en",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["end",{"_index":192,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["endmessage",{"_index":570,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["english",{"_index":984,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["enter",{"_index":229,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{}}}],["entered",{"_index":1070,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["error(\"method",{"_index":688,"title":{},"body":{"classes/GameConcret.html":{}}}],["est",{"_index":1353,"title":{},"body":{"index.html":{}}}],["et",{"_index":1357,"title":{},"body":{"index.html":{}}}],["evenly",{"_index":550,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event",{"_index":893,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.files[0",{"_index":926,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event.target.placeholder",{"_index":1094,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value",{"_index":1092,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value.substring(0",{"_index":1099,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["eventemitter",{"_index":847,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["everything",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["example",{"_index":795,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["execute",{"_index":1310,"title":{},"body":{"index.html":{}}}],["exo",{"_index":1202,"title":{},"body":{"components/TitleComponent.html":{}}}],["explain",{"_index":839,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["explode",{"_index":1141,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["export",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["exports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extract",{"_index":934,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["facade",{"_index":769,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["face",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["facilement",{"_index":1370,"title":{},"body":{"index.html":{}}}],["faire",{"_index":1326,"title":{},"body":{"index.html":{}}}],["false",{"_index":403,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["family",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["ff61af",{"_index":1225,"title":{},"body":{"components/TitleComponent.html":{}}}],["fff",{"_index":560,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["ffffff",{"_index":548,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":930,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["filereader",{"_index":928,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["files",{"_index":1297,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1229,"title":{},"body":{"components/TitleComponent.html":{}}}],["filter",{"_index":597,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["finishbutton",{"_index":747,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["first",{"_index":885,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["fixed",{"_index":1016,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["flex",{"_index":501,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["focus",{"_index":644,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["fonction",{"_index":1409,"title":{},"body":{"index.html":{}}}],["fonctioner",{"_index":1327,"title":{},"body":{"index.html":{}}}],["fonctionnements",{"_index":1415,"title":{},"body":{"index.html":{}}}],["fonctions",{"_index":1347,"title":{},"body":{"index.html":{}}}],["font",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["for(const",{"_index":949,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["for(let",{"_index":1169,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["form",{"_index":1114,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_bottom",{"_index":1125,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_top",{"_index":1115,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["format",{"_index":781,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["français",{"_index":985,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["full",{"_index":178,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["further",{"_index":1319,"title":{},"body":{"index.html":{}}}],["game",{"_index":69,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["game_label:before",{"_index":1131,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["gamecomponentcomponent",{"_index":68,"title":{"components/GameComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameconcret",{"_index":411,"title":{"classes/GameConcret.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"coverage.html":{}}}],["gamemodemessage",{"_index":571,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["gameoptionserviceservice",{"_index":349,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["gamerules",{"_index":987,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules1",{"_index":988,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules2",{"_index":989,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules3",{"_index":990,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules4",{"_index":991,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules5",{"_index":992,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gamerules6",{"_index":993,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gap",{"_index":1014,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["generate",{"_index":1300,"title":{},"body":{"index.html":{}}}],["generated",{"_index":812,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["getactualstage",{"_index":193,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getactuellog",{"_index":340,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getbacklogdata",{"_index":194,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getbacklogdatanote(key",{"_index":257,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getdefaultvalue",{"_index":196,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getinstance",{"_index":737,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["getmode",{"_index":341,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote",{"_index":197,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["getnote(id",{"_index":361,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote(key",{"_index":263,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getnotes",{"_index":198,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer",{"_index":199,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayer(key",{"_index":269,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayernumber",{"_index":200,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getplayers",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["getslidervalue",{"_index":1065,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event",{"_index":1073,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getters",{"_index":1412,"title":{},"body":{"index.html":{}}}],["getting",{"_index":1280,"title":{"index.html":{}},"body":{}}],["give",{"_index":284,"title":{},"body":{"interfaces/Game.html":{}}}],["given",{"_index":303,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["go",{"_index":1321,"title":{},"body":{"index.html":{}}}],["goal",{"_index":841,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["graded",{"_index":904,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["gradient(#032d50",{"_index":1220,"title":{},"body":{"components/TitleComponent.html":{}}}],["gradient(#e3e3e3",{"_index":631,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["gradient(120deg",{"_index":633,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["graph",{"_index":1439,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":515,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["group",{"_index":624,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["généreras",{"_index":1430,"title":{},"body":{"index.html":{}}}],["gér",{"_index":1336,"title":{},"body":{"index.html":{}}}],["h1",{"_index":1051,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["h2",{"_index":1021,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["h3",{"_index":1123,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["header",{"_index":514,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["header_right",{"_index":1013,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["header_sidenav",{"_index":576,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["height",{"_index":499,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["help",{"_index":855,"title":{},"body":{"components/InformationButtonComponent.html":{},"index.html":{}}}],["here",{"_index":519,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["hidden",{"_index":1044,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["home",{"_index":176,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ShopComponentComponent.html":{}}}],["hover",{"_index":610,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["html",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["html.addhtmlelement(\"input",{"_index":797,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["html.displayhtml(balise.title",{"_index":799,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["htmlbalise",{"_index":381,"title":{"classes/HtmlBalise.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"coverage.html":{}}}],["htmlbalise.getinstance",{"_index":430,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["htmlbalise.instance",{"_index":766,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlbuttonelement",{"_index":746,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmlcollectionof",{"_index":1168,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["htmldisplay",{"_index":334,"title":{"classes/HtmlDisplay.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["htmldivelement",{"_index":744,"title":{},"body":{"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["htmlelement",{"_index":743,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["htmlinputelement",{"_index":481,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["http",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["http://localhost:4200",{"_index":1293,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["httploaderfactory",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["httploaderfactory(http:httpclient",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["icon",{"_index":858,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["id",{"_index":240,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["identifiant",{"_index":1378,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":373,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["if(!closebalise",{"_index":830,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(element",{"_index":834,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(this.popupisopen",{"_index":976,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["ignore",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["image",{"_index":553,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["immediately",{"_index":880,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["implemented",{"_index":689,"title":{},"body":{"classes/GameConcret.html":{}}}],["implements",{"_index":327,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["implèmentés",{"_index":1364,"title":{},"body":{"index.html":{}}}],["implémentation",{"_index":1388,"title":{},"body":{"index.html":{}}}],["implémenter",{"_index":1376,"title":{},"body":{"index.html":{}}}],["import",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["important",{"_index":1130,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["imported",{"_index":1078,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["imports",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ShopComponentComponent.html":{}}}],["index",{"_index":23,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information_button",{"_index":856,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["informationbuttoncomponent",{"_index":71,"title":{"components/InformationButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["injectable",{"_index":702,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":703,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["inline",{"_index":1001,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input",{"_index":622,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["input[type=\"file",{"_index":1009,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio",{"_index":1135,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":1139,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input_text",{"_index":800,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["inputs",{"_index":1036,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["inputvalue",{"_index":748,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instance",{"_index":735,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instantiated",{"_index":890,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["insérer",{"_index":1382,"title":{},"body":{"index.html":{}}}],["interface",{"_index":181,"title":{"interfaces/Game.html":{}},"body":{"interfaces/Game.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":182,"title":{},"body":{"interfaces/Game.html":{}}}],["intégrer",{"_index":1381,"title":{},"body":{"index.html":{}}}],["invoked",{"_index":879,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["iscontinue",{"_index":342,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["isdownload",{"_index":202,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["isretry",{"_index":203,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["it's",{"_index":572,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["item",{"_index":942,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["item.hasownproperty(itemname",{"_index":945,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item.work",{"_index":954,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["item[itemname",{"_index":948,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["itemname",{"_index":944,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["items",{"_index":509,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["itself",{"_index":623,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["jasmine",{"_index":1398,"title":{},"body":{"index.html":{}}}],["jeu",{"_index":1352,"title":{},"body":{"index.html":{}}}],["jeux",{"_index":1340,"title":{},"body":{"index.html":{}}}],["json",{"_index":245,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json.parse(filecontent",{"_index":933,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json_file",{"_index":986,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata",{"_index":932,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["jsondata.backlog",{"_index":940,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog.hasownproperty(key",{"_index":941,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.backlog[key",{"_index":943,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.default",{"_index":939,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.hasownproperty(key",{"_index":1102,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata.mode",{"_index":938,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players",{"_index":950,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players.hasownproperty(key",{"_index":951,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata.players[key",{"_index":952,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["jsondata[key]?.name",{"_index":1103,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["justify",{"_index":504,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["karma",{"_index":1312,"title":{},"body":{"index.html":{}}}],["key",{"_index":215,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["key.startswith(\"default",{"_index":456,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('actuallog",{"_index":474,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('backlog",{"_index":468,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('default",{"_index":475,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('mode",{"_index":453,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('note",{"_index":473,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('player",{"_index":458,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["keyframes",{"_index":1143,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["keys",{"_index":936,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["l'affichage",{"_index":1158,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["l'implèmentation",{"_index":1366,"title":{},"body":{"index.html":{}}}],["l'importer",{"_index":1406,"title":{},"body":{"index.html":{}}}],["l'on",{"_index":1404,"title":{},"body":{"index.html":{}}}],["la",{"_index":1359,"title":{},"body":{"index.html":{}}}],["label",{"_index":820,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["label.innertext",{"_index":829,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["lancant",{"_index":1419,"title":{},"body":{"index.html":{}}}],["lancer",{"_index":1418,"title":{},"body":{"index.html":{}}}],["lang",{"_index":865,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lang.target.value",{"_index":981,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["language",{"_index":874,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["launches",{"_index":248,"title":{},"body":{"interfaces/Game.html":{}}}],["le",{"_index":1333,"title":{},"body":{"index.html":{}}}],["left",{"_index":1011,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["left_number",{"_index":1120,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["left_players",{"_index":1121,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["legend",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["lequel",{"_index":1434,"title":{},"body":{"index.html":{}}}],["les",{"_index":1337,"title":{},"body":{"index.html":{}}}],["lets",{"_index":770,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["letter",{"_index":1206,"title":{},"body":{"components/TitleComponent.html":{}}}],["leurs",{"_index":1413,"title":{},"body":{"index.html":{}}}],["li",{"_index":1127,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["ligne",{"_index":1374,"title":{},"body":{"index.html":{}}}],["line",{"_index":568,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["linear",{"_index":630,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["link",{"_index":1174,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["list",{"_index":268,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["listvalue",{"_index":335,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["literal",{"_index":246,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["load",{"_index":862,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["loaded",{"_index":368,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["loader",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lobby",{"_index":179,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local_cafe",{"_index":494,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["localstorage.getitem('lang",{"_index":924,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["localstorage.setitem('lang",{"_index":982,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["lunchstage",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["main",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["mainmenucomponent",{"_index":74,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["majabs",{"_index":441,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majabsdecorator",{"_index":422,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["majabsdecorator(this.game",{"_index":442,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["majority",{"_index":1112,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["manages",{"_index":326,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["margin",{"_index":538,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["marks",{"_index":301,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["mat",{"_index":574,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["matbuttonmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1095,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["matching",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maticon",{"_index":918,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["maticonmodule",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{}}}],["matinputmodule",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["maximum",{"_index":1086,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["menu",{"_index":493,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["menu'},{'name",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["menu.component",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["menu.component.html",{"_index":864,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":863,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":861,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:133",{"_index":900,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:156",{"_index":895,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:167",{"_index":873,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:19",{"_index":871,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:31",{"_index":912,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":908,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":876,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":906,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:57",{"_index":905,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":909,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:65",{"_index":907,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:69",{"_index":911,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:73",{"_index":903,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:79",{"_index":892,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/main",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["message",{"_index":849,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["metadata",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["method",{"_index":878,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["methods",{"_index":187,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["michel",{"_index":464,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["middle",{"_index":1137,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["min",{"_index":564,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["mode",{"_index":360,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"index.html":{}}}],["modedecorator",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["modes",{"_index":1362,"title":{},"body":{"index.html":{}}}],["modified",{"_index":733,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["modifier",{"_index":1396,"title":{},"body":{"index.html":{}}}],["modifies",{"_index":1075,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["modifybacklogdata",{"_index":205,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["modifybacklogdata(key",{"_index":291,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["mods",{"_index":1339,"title":{},"body":{"index.html":{}}}],["module",{"_index":90,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":92,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1320,"title":{},"body":{"index.html":{}}}],["moyenne",{"_index":439,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["moz",{"_index":1026,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["mr",{"_index":1230,"title":{},"body":{"components/TitleComponent.html":{}}}],["mère",{"_index":1360,"title":{},"body":{"index.html":{}}}],["n",{"_index":308,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["n'ayant",{"_index":1385,"title":{},"body":{"index.html":{}}}],["name",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["names",{"_index":935,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["namesarray",{"_index":1101,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray.push(jsondata[key].name",{"_index":1104,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["navigate",{"_index":1292,"title":{},"body":{"index.html":{}}}],["nb",{"_index":318,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["nbplayer",{"_index":1111,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["need",{"_index":275,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"index.html":{}}}],["new",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":719,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["next",{"_index":295,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["nextstage",{"_index":206,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["ng",{"_index":1289,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":343,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ngif",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngmodelgroup",{"_index":916,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["ngmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{}}}],["ngoninit",{"_index":428,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["ngx",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"dependencies.html":{}}}],["none",{"_index":432,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["noopanimationsmodule",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["note",{"_index":218,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["noted",{"_index":223,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["notes",{"_index":402,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["notre",{"_index":1328,"title":{},"body":{"index.html":{}}}],["nous",{"_index":1330,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1429,"title":{},"body":{"index.html":{}}}],["null",{"_index":451,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["number",{"_index":233,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["object",{"_index":785,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["object.keys(data).foreach(key",{"_index":452,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["object.keys(this.backlogdata).foreach((item",{"_index":969,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["object.keys(this.players).foreach(key",{"_index":961,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["object.keys(this.players).length",{"_index":696,"title":{},"body":{"classes/GameConcret.html":{}}}],["offset",{"_index":1187,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onbuttonclick",{"_index":844,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["once",{"_index":889,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["one",{"_index":708,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["onfileselected",{"_index":868,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["onfileselected(event",{"_index":891,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["oninit",{"_index":329,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["opacity",{"_index":1012,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["open",{"_index":406,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["opened",{"_index":336,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["openinformation",{"_index":869,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["opens",{"_index":896,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["option",{"_index":416,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["optional",{"_index":221,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["origin",{"_index":638,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ou",{"_index":1379,"title":{},"body":{"index.html":{}}}],["out",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":642,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["output",{"_index":853,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["outputs",{"_index":845,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["ouvrera",{"_index":1432,"title":{},"body":{"index.html":{}}}],["overflow",{"_index":1043,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["overview",{"_index":1322,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":323,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["package",{"_index":1263,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":533,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["page",{"_index":367,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"index.html":{}}}],["page's",{"_index":772,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["par",{"_index":1397,"title":{},"body":{"index.html":{}}}],["param",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parameters",{"_index":220,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{}}}],["parseint(key",{"_index":956,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["parseint(key.replace('player",{"_index":460,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["parseint(match",{"_index":1097,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["passed",{"_index":720,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{}}}],["passing",{"_index":786,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["path",{"_index":174,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":177,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrick",{"_index":466,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["pattern",{"_index":186,"title":{},"body":{"interfaces/Game.html":{},"classes/HtmlDisplay.html":{},"index.html":{}}}],["patterne",{"_index":1384,"title":{},"body":{"index.html":{}}}],["per",{"_index":1087,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["permet",{"_index":1368,"title":{},"body":{"index.html":{}}}],["peut",{"_index":1405,"title":{},"body":{"index.html":{}}}],["phase",{"_index":282,"title":{},"body":{"interfaces/Game.html":{}}}],["placed",{"_index":802,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["placeholder",{"_index":647,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["placeholder.replace(/\\d/g",{"_index":1096,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["placer",{"_index":1393,"title":{},"body":{"index.html":{}}}],["places",{"_index":819,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["planing",{"_index":288,"title":{},"body":{"interfaces/Game.html":{}}}],["planning",{"_index":1199,"title":{},"body":{"components/TitleComponent.html":{}}}],["planningpokerpp",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["platform",{"_index":1314,"title":{},"body":{"index.html":{}}}],["play",{"_index":307,"title":{},"body":{"interfaces/Game.html":{}}}],["player",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["player's",{"_index":271,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerbutton",{"_index":592,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["playercardcomponent",{"_index":76,"title":{"components/PlayerCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerkey",{"_index":962,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playermax",{"_index":1062,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playernumber",{"_index":459,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playerpushbutton",{"_index":207,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["playerpushbutton(id",{"_index":297,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["players",{"_index":228,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["players[1",{"_index":463,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[2",{"_index":465,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[playernumber",{"_index":462,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["playersnb",{"_index":1090,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playersnote",{"_index":653,"title":{},"body":{"classes/GameConcret.html":{}}}],["pointer",{"_index":581,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["poker",{"_index":289,"title":{},"body":{"interfaces/Game.html":{},"components/TitleComponent.html":{}}}],["popup",{"_index":898,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popup.style.display",{"_index":922,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["popupisopen",{"_index":866,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["position",{"_index":603,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["possible",{"_index":1173,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pour",{"_index":1335,"title":{},"body":{"index.html":{}}}],["pouves",{"_index":1417,"title":{},"body":{"index.html":{}}}],["pouvons",{"_index":1375,"title":{},"body":{"index.html":{}}}],["pp",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["press",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["pressed",{"_index":372,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["presses",{"_index":378,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["previously",{"_index":901,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["prinipalement",{"_index":1410,"title":{},"body":{"index.html":{}}}],["private",{"_index":427,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{}}}],["project",{"_index":1282,"title":{},"body":{"index.html":{}}}],["projet",{"_index":1329,"title":{},"body":{"index.html":{}}}],["prompts",{"_index":227,"title":{},"body":{"interfaces/Game.html":{}}}],["properties",{"_index":24,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"properties.html":{}}}],["protected",{"_index":1108,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["provide",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":729,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["providers",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["présent",{"_index":1435,"title":{},"body":{"index.html":{}}}],["public",{"_index":338,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{}}}],["pushable_button",{"_index":1186,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushable_button:active",{"_index":1194,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushablebackground",{"_index":1177,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["qu'une",{"_index":1386,"title":{},"body":{"index.html":{}}}],["que",{"_index":1363,"title":{},"body":{"index.html":{}}}],["qui",{"_index":1344,"title":{},"body":{"index.html":{}}}],["quiter",{"_index":471,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["radius",{"_index":536,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["raport",{"_index":1323,"title":{},"body":{"index.html":{}}}],["rating",{"_index":302,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reader",{"_index":927,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.onload",{"_index":929,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.readastext(selectedfile",{"_index":960,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["reader.result",{"_index":931,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["readonly",{"_index":1109,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["recorded",{"_index":902,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["recover",{"_index":265,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["red",{"_index":588,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["redirectto",{"_index":175,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":821,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["regular.ttf",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":604,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["reload",{"_index":1296,"title":{},"body":{"index.html":{}}}],["repeat(11",{"_index":517,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["replay",{"_index":278,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["reset",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["resume",{"_index":492,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["resuming",{"_index":238,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{}}}],["retrieve",{"_index":259,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["retrieves",{"_index":356,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["return",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["returned",{"_index":266,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returning",{"_index":262,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["returns",{"_index":224,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["rgb(0",{"_index":614,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgb(255",{"_index":620,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgba(0",{"_index":1049,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["rgba(black",{"_index":1217,"title":{},"body":{"components/TitleComponent.html":{}}}],["right",{"_index":584,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["right_style",{"_index":1122,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["root",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{}}}],["root'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["rotate",{"_index":1237,"title":{},"body":{"components/TitleComponent.html":{}}}],["round",{"_index":279,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["router",{"_index":350,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["routerlink",{"_index":1152,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["routermodule",{"_index":168,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":180,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":169,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":167,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":529,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["rules",{"_index":840,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["run",{"_index":1288,"title":{},"body":{"index.html":{}}}],["running",{"_index":1307,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":728,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"dependencies.html":{}}}],["récupérer",{"_index":1389,"title":{},"body":{"index.html":{}}}],["save",{"_index":713,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["scaffolding",{"_index":1299,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":1146,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(0.85",{"_index":611,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(0.9",{"_index":1008,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["scale(1",{"_index":1147,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1.2",{"_index":579,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(1.5",{"_index":859,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["scale(4",{"_index":1144,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scene",{"_index":709,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["score",{"_index":285,"title":{},"body":{"interfaces/Game.html":{}}}],["select",{"_index":910,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectbutton",{"_index":344,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectbutton(id",{"_index":369,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectedfile",{"_index":925,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["selectedlanguage",{"_index":980,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["selectioner",{"_index":1161,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["selector",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["selects",{"_index":300,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["selectskin",{"_index":1155,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["selectskin(e",{"_index":1162,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["send",{"_index":712,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["senddata",{"_index":870,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["sending",{"_index":718,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["sends",{"_index":1080,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["sent",{"_index":723,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["serif",{"_index":530,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":1290,"title":{},"body":{"index.html":{}}}],["server",{"_index":1287,"title":{},"body":{"index.html":{}}}],["serveur",{"_index":1433,"title":{},"body":{"index.html":{}}}],["service",{"_index":706,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["service.service",{"_index":417,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["service.service.ts",{"_index":705,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:18",{"_index":722,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:23",{"_index":725,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:30",{"_index":717,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["services/gameoptionservice/game",{"_index":415,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["set",{"_index":306,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setactualplayerturn",{"_index":208,"title":{},"body":{"interfaces/Game.html":{}}}],["setactualplayerturn(n",{"_index":304,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklog",{"_index":345,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setbacklogdata",{"_index":209,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklogdata(backlogdata",{"_index":309,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setbacklognote",{"_index":346,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setdata",{"_index":715,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdata(newdata",{"_index":716,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdefaultvalue",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setdefaultvalue(value",{"_index":312,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setplayers",{"_index":211,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{}}}],["setplayers(players",{"_index":314,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["sets",{"_index":235,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage",{"_index":212,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setstage(nb",{"_index":316,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setter",{"_index":311,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setters",{"_index":1411,"title":{},"body":{"index.html":{}}}],["settimeout",{"_index":959,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["settings",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["settingscomponentcomponent",{"_index":79,"title":{"components/SettingsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setup",{"_index":322,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setupdefaultvalue",{"_index":213,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["setuplocationsync",{"_index":914,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["seule",{"_index":1387,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":540,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["shop",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["shopcomponentcomponent",{"_index":81,"title":{"components/ShopComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["showtext",{"_index":778,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["showtext(label",{"_index":817,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["sidenav",{"_index":513,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["simplifier",{"_index":1365,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":384,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"index.html":{}}}],["site",{"_index":354,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["size",{"_index":531,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["sizing",{"_index":1134,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["skew",{"_index":1204,"title":{},"body":{"components/TitleComponent.html":{}}}],["skin",{"_index":1160,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["skins",{"_index":1150,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["slider",{"_index":1076,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["solid",{"_index":557,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["space",{"_index":506,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["spacing",{"_index":1207,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:first",{"_index":1209,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:last",{"_index":1219,"title":{},"body":{"components/TitleComponent.html":{}}}],["specific",{"_index":1172,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["src",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app",{"_index":166,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:27",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/decorateur/averagedecorator.ts",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/game.ts",{"_index":183,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/game.ts:10",{"_index":315,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:101",{"_index":216,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:106",{"_index":267,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:112",{"_index":264,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:119",{"_index":292,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:124",{"_index":277,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:129",{"_index":274,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:134",{"_index":241,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:140",{"_index":305,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:145",{"_index":247,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:151",{"_index":258,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:16",{"_index":310,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:21",{"_index":226,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:28",{"_index":234,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:34",{"_index":319,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:40",{"_index":313,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:45",{"_index":294,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:51",{"_index":317,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:57",{"_index":280,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:62",{"_index":252,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:67",{"_index":272,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:73",{"_index":270,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:78",{"_index":261,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:83",{"_index":255,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:89",{"_index":298,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:94",{"_index":273,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/gameconcret.ts",{"_index":650,"title":{},"body":{"classes/GameConcret.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:103",{"_index":675,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:111",{"_index":674,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:118",{"_index":671,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:125",{"_index":669,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:133",{"_index":681,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:139",{"_index":676,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:14",{"_index":666,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:148",{"_index":665,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:155",{"_index":673,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:163",{"_index":672,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:172",{"_index":679,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:180",{"_index":670,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:187",{"_index":678,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:21",{"_index":662,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:213",{"_index":677,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:220",{"_index":667,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:229",{"_index":685,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:25",{"_index":663,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:29",{"_index":658,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:34",{"_index":660,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:39",{"_index":661,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:44",{"_index":654,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:50",{"_index":684,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:59",{"_index":682,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:73",{"_index":686,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:81",{"_index":683,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:89",{"_index":680,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:96",{"_index":668,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/majabsdecorator.ts",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/modedecorator.ts",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/decorateur/strictdecorator.ts",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts",{"_index":767,"title":{},"body":{"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts:12",{"_index":779,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:20",{"_index":818,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:40",{"_index":791,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:63",{"_index":784,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:73",{"_index":807,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:81",{"_index":815,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:90",{"_index":810,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/singleton/htmlbalise.ts",{"_index":731,"title":{},"body":{"classes/HtmlBalise.html":{},"coverage.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:39",{"_index":741,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:49",{"_index":739,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:9",{"_index":738,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/components/game",{"_index":324,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":837,"title":{},"body":{"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":860,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/player",{"_index":1031,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["src/app/components/settings",{"_index":1060,"title":{},"body":{"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/shop",{"_index":1148,"title":{},"body":{"components/ShopComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/start",{"_index":1170,"title":{},"body":{"components/StartButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/title/title.component.ts",{"_index":1195,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/services/gameoptionservice/game",{"_index":704,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["stage1",{"_index":798,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["standalone",{"_index":1151,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["standar",{"_index":408,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standard",{"_index":230,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["standardvalue",{"_index":523,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["standarvalue",{"_index":337,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["start",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["startbuttoncomponent",{"_index":83,"title":{"components/StartButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1281,"title":{"index.html":{}},"body":{}}],["starts",{"_index":366,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["statements",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":734,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["step",{"_index":296,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["stored",{"_index":1304,"title":{},"body":{"index.html":{}}}],["strict",{"_index":436,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["strictdecorator",{"_index":413,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["strictdecorator(this.game",{"_index":437,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["string",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["strkey",{"_index":963,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["stroke",{"_index":546,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["stvalue",{"_index":742,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["style",{"_index":521,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styleurl",{"_index":1153,"title":{},"body":{"components/ShopComponentComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["summary",{"_index":249,"title":{},"body":{"interfaces/Game.html":{}}}],["support",{"_index":1436,"title":{},"body":{"modules.html":{}}}],["sur",{"_index":1399,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1437,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":793,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["tags",{"_index":732,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["takes",{"_index":497,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["task",{"_index":286,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["teh",{"_index":511,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["test",{"_index":701,"title":{},"body":{"classes/GameConcret.html":{},"index.html":{}}}],["tester",{"_index":1402,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1317,"title":{},"body":{"index.html":{}}}],["testons",{"_index":1407,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1309,"title":{},"body":{"index.html":{}}}],["text",{"_index":527,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["texttoshow",{"_index":522,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["things",{"_index":573,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.actualfunctioninbacklog",{"_index":695,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.actuallog",{"_index":955,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata",{"_index":692,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.backlogdata.foreach((item",{"_index":1107,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.backlogdata[item",{"_index":972,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[itemname",{"_index":947,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.backlogdata[key",{"_index":700,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.balise",{"_index":429,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.balise.playerbutton.style.display",{"_index":431,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.bsetupdefaultvalue",{"_index":693,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.buttonclicked.emit",{"_index":854,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["this.content",{"_index":831,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["this.data",{"_index":974,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data.asobservable",{"_index":724,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data.next(newdata",{"_index":730,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data[\"actuallog",{"_index":968,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"backlog",{"_index":970,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"default",{"_index":967,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[\"mode",{"_index":966,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.data[\"note",{"_index":971,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.data[strkey",{"_index":964,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.dataservice.data$.subscribe(data",{"_index":450,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.dataservice.setdata(this.data",{"_index":975,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.defaultvalue",{"_index":694,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.endmessage",{"_index":753,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.finishbutton",{"_index":761,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.game",{"_index":434,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.choosedefaultvalue",{"_index":449,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.continuegame(this.getdefaultvalue",{"_index":446,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getactualstage",{"_index":490,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.creatanddownloadjson",{"_index":485,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isdownload",{"_index":484,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isretry",{"_index":487,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.lunchstage",{"_index":489,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.playerpushbutton(id",{"_index":477,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setactualplayerturn(1",{"_index":488,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setbacklogdata(backlogdata",{"_index":472,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setdefaultvalue(valueelement.value",{"_index":483,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setplayers(players",{"_index":467,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setupdefaultvalue",{"_index":478,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.gamemodemessage",{"_index":763,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.getactuellog",{"_index":447,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getmode",{"_index":435,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getnote(parseint(key.match(/\\d+/)?.[0",{"_index":476,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.htmldisplay",{"_index":433,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.inputvalue",{"_index":765,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.iscontinue",{"_index":444,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.lang",{"_index":923,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.mode",{"_index":937,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playerbutton",{"_index":757,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.playernumber",{"_index":1091,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players",{"_index":690,"title":{},"body":{"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["this.players.push(item",{"_index":953,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.players[id",{"_index":1098,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players[key",{"_index":697,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[playerkey",{"_index":965,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["this.playersnb",{"_index":1093,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnote",{"_index":699,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.playersnote[key",{"_index":698,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.popupisopen",{"_index":978,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":486,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklog",{"_index":448,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklognote",{"_index":445,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setplayers",{"_index":443,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.stvalue",{"_index":749,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.task",{"_index":751,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.title",{"_index":755,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.translate",{"_index":438,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.translateservice.setdefaultlang('en",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(localstorage.getitem('lang",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translateservice.use(selectedlanguage",{"_index":983,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.validatebutton",{"_index":759,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["throw",{"_index":687,"title":{},"body":{"classes/GameConcret.html":{}}}],["time",{"_index":886,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["title",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["title.component.html",{"_index":1198,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":1197,"title":{},"body":{"components/TitleComponent.html":{}}}],["titlecomponent",{"_index":84,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":609,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["top_left",{"_index":1117,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["top_right",{"_index":1119,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["tous",{"_index":1361,"title":{},"body":{"index.html":{}}}],["toutes",{"_index":1346,"title":{},"body":{"index.html":{}}}],["transform",{"_index":578,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["transformer",{"_index":827,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transformjavascript",{"_index":823,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transition",{"_index":606,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["translate",{"_index":339,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/TitleComponent.html":{}}}],["translate/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"components/MainMenuComponent.html":{},"components/ShopComponentComponent.html":{}}}],["translatemodule.forroot",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["translateservice:translateservice",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/MainMenuComponent.html":{}}}],["translatetype",{"_index":424,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["translatey",{"_index":1190,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["translation",{"_index":875,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["transmitting",{"_index":707,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["transparent",{"_index":544,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["triggered",{"_index":299,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["true",{"_index":457,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/ShopComponentComponent.html":{}}}],["tslib",{"_index":1274,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":283,"title":{},"body":{"interfaces/Game.html":{}}}],["type",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["typeface",{"_index":1276,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1367,"title":{},"body":{"index.html":{}}}],["ul",{"_index":1126,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["un",{"_index":1164,"title":{},"body":{"components/ShopComponentComponent.html":{},"index.html":{}}}],["undefined",{"_index":382,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["under",{"_index":1182,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["underline",{"_index":1023,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["une",{"_index":1342,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1308,"title":{},"body":{"index.html":{}}}],["unitaires",{"_index":1394,"title":{},"body":{"index.html":{}}}],["url(\"../../../assets/images/card.jpg",{"_index":595,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/hypnotic.jpg",{"_index":554,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/player",{"_index":1038,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["url('../../../assets/images/hand.png",{"_index":601,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url('../assets/fonts/pressstart2p",{"_index":59,"title":{},"body":{"components/AppComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=exo:wght@900&display=swap",{"_index":1201,"title":{},"body":{"components/TitleComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=mr+dafoe&display=swap",{"_index":1200,"title":{},"body":{"components/TitleComponent.html":{}}}],["use",{"_index":796,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"index.html":{}}}],["used",{"_index":726,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"components/MainMenuComponent.html":{}}}],["usefactory",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["useful",{"_index":237,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{}}}],["user",{"_index":1061,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["using",{"_index":287,"title":{},"body":{"interfaces/Game.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["utiliser",{"_index":1332,"title":{},"body":{"index.html":{}}}],["utilisons",{"_index":1427,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1348,"title":{},"body":{"index.html":{}}}],["validatebutton",{"_index":745,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["validestage",{"_index":347,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["value",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["valueelement",{"_index":479,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valueelement.value",{"_index":482,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valuers",{"_index":804,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["values",{"_index":236,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["var",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["variable",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{},"index.html":{}}}],["variables",{"_index":1356,"title":{},"body":{"index.html":{}}}],["various",{"_index":794,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["verifier",{"_index":1403,"title":{},"body":{"index.html":{}}}],["version",{"_index":1284,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1136,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["via",{"_index":1311,"title":{},"body":{"index.html":{}}}],["view",{"_index":888,"title":{},"body":{"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["void",{"_index":225,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/ShopComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["vou",{"_index":1431,"title":{},"body":{"index.html":{}}}],["vous",{"_index":1416,"title":{},"body":{"index.html":{}}}],["want",{"_index":787,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{}}}],["we'll",{"_index":816,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["webkit",{"_index":545,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["website",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["whether",{"_index":321,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"components/MainMenuComponent.html":{}}}],["white",{"_index":526,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["whose",{"_index":1069,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["width",{"_index":500,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["window",{"_index":899,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["work",{"_index":946,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["worker",{"_index":828,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["wrap",{"_index":551,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["written",{"_index":656,"title":{},"body":{"classes/GameConcret.html":{}}}],["yes",{"_index":803,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["z",{"_index":605,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["zone.js",{"_index":1278,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main component that display everything.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'planningPokerPP'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n            \n                \n                    Variable that contains the name of the website.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/**\n * Main component that display everything.\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n\n  /**\n   * @ignore\n   * @param translateService\n   */\n  constructor(private translateService:TranslateService) {\n    this.translateService.setDefaultLang('en');\n    this.translateService.use(localStorage.getItem('lang') || 'en')\n  }\n\n  /**\n   * Variable that contains the name of the website.\n   */\n  title = 'planningPokerPP';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @font-face {\n  font-family: 'Press Start 2P';\n  src: url('../assets/fonts/PressStart2P-Regular.ttf');\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nStartButtonComponent \n\nStartButtonComponent \n\nStartButtonComponent  -->\n\nAppModule->StartButtonComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponentComponent\n                        \n                        \n                            InformationButtonComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            PlayerCardComponent\n                        \n                        \n                            SettingsComponentComponent\n                        \n                        \n                            StartButtonComponent\n                        \n                        \n                            TitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StartButtonComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {StartButtonComponent} from './components/start-button/start-button.component';\nimport {InformationButtonComponent} from './components/information-button/information-button.component';\n\nimport {MainMenuComponent} from './components/main-menu/main-menu.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SettingsComponentComponent} from './components/settings-component/settings-component.component';\nimport { GameComponentComponent } from './components/game-component/game-component.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { PlayerCardComponent } from './components/player-card/player-card.component';\nimport {NgIf} from \"@angular/common\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {HttpClient, HttpClientModule} from \"@angular/common/http\";\nimport {TranslateLoader, TranslateModule} from \"@ngx-translate/core\";\nimport {TranslateHttpLoader} from \"@ngx-translate/http-loader\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatSelectModule} from \"@angular/material/select\";\n\n/**\n * @ignore\n * @param http\n * @constructor\n */\nexport function HttpLoaderFactory(http:HttpClient){\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartButtonComponent,\n    InformationButtonComponent,\n    MainMenuComponent,\n    SettingsComponentComponent,\n    GameComponentComponent,\n    TitleComponent,\n    PlayerCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatIconModule,\n    NoopAnimationsModule,\n    NgIf,\n    MatSidenavModule,\n    MatButtonModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: HttpLoaderFactory,\n          deps: [HttpClient]\n        }\n      }\n    ),\n    MatInputModule,\n    MatSelectModule\n  ],\n  providers:\n    [HttpClient],\n  exports: [\n    StartButtonComponent\n  ],\n  bootstrap:\n    [AppComponent]\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponentComponent} from \"./components/settings-component/settings-component.component\";\nimport {MainMenuComponent} from \"./components/main-menu/main-menu.component\";\nimport {GameComponentComponent} from \"./components/game-component/game-component.component\";\nimport {ShopComponentComponent} from \"./components/shop-component/shop-component.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: MainMenuComponent},\n  {path: 'lobby', component: SettingsComponentComponent},\n  {path: 'game', component: GameComponentComponent},\n  {path: 'shop', component: ShopComponentComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/Game.ts\n        \n\n\n            \n                Description\n            \n            \n                Game interface for the Decorator design pattern\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addNote\n                                    \n                                \n                                \n                                    \n                                        chooseDefaultValue\n                                    \n                                \n                                \n                                    \n                                        continueGame\n                                    \n                                \n                                \n                                    \n                                        creatAndDownloadJSON\n                                    \n                                \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        getActualStage\n                                    \n                                \n                                \n                                    \n                                        getBacklogData\n                                    \n                                \n                                \n                                    \n                                        getBacklogDataNote\n                                    \n                                \n                                \n                                    \n                                        getDefaultValue\n                                    \n                                \n                                \n                                    \n                                        getNote\n                                    \n                                \n                                \n                                    \n                                        getNotes\n                                    \n                                \n                                \n                                    \n                                        getPlayer\n                                    \n                                \n                                \n                                    \n                                        getPlayerNumber\n                                    \n                                \n                                \n                                    \n                                        getPlayers\n                                    \n                                \n                                \n                                    \n                                        isDownload\n                                    \n                                \n                                \n                                    \n                                        isRetry\n                                    \n                                \n                                \n                                    \n                                        lunchStage\n                                    \n                                \n                                \n                                    \n                                        modifyBacklogData\n                                    \n                                \n                                \n                                    \n                                        nextStage\n                                    \n                                \n                                \n                                    \n                                        playerPushButton\n                                    \n                                \n                                \n                                    \n                                        setActualPlayerTurn\n                                    \n                                \n                                \n                                    \n                                        setBacklogData\n                                    \n                                \n                                \n                                    \n                                        setDefaultValue\n                                    \n                                \n                                \n                                    \n                                        setPlayers\n                                    \n                                \n                                \n                                    \n                                        setStage\n                                    \n                                \n                                \n                                    \n                                        setupDefaultValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:101\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:21\n                        \n                    \n\n\n            \n                \n                        Function that prompts players to enter the standard value\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:28\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:134\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:145\n                        \n                    \n\n\n            \n                \n                        Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:62\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:83\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:151\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:78\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:112\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:106\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:73\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:67\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:94\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:129\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:124\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:57\n                        \n                    \n\n\n            \n                \n                        Game function, during this phase the players, each in turn, give the score they would give to the current task\nusing the Planing Poker card.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:119\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:45\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:89\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:140\n                        \n                    \n\n\n            \n                \n                        Set the player who must play\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who is to play\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:16\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:40\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:10\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:51\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:34\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Game {\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [key: number]: string }): void;\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key: string]: number }): void;\n\n  /**\n   * Function that prompts players to enter the standard value\n   */\n  chooseDefaultValue(): void;\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void;\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean;\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void;\n\n  /**\n   * Next step function\n   */\n  nextStage(): void;\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void;\n\n  /**\n   * Game function, during this phase the players, each in turn, give the score they would give to the current task\n   * using the Planing Poker card.\n   */\n  lunchStage(): void;\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number;\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number;\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string;\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string;\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [key: string]: number };\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void;\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [key: number]: string };\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value: string, key: string): void\n\n  /**\n   * Return to note list\n   */\n  getNotes(): { [key: string]: string };\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key: string): string;\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key: string, value: number): void;\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean;\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean;\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON() : { [p: string]: any };\n\n  /**\n   * Set the player who must play\n   * @param n {number} Id of the player who is to play\n   */\n  setActualPlayerTurn(n : number): void;\n\n  /**\n   * Function that launches at the end, with a summary of each note and the ability to download the Backlog JSON\n   */\n  end() : void;\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponentComponent.html":{"url":"components/GameComponentComponent.html","title":"component - GameComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-component/game-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class that manages game display\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                game-component\n            \n\n\n\n            \n                styleUrls\n                ./game-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backlogValue\n                            \n                            \n                                balise\n                            \n                            \n                                game\n                            \n                            \n                                htmlDisplay\n                            \n                            \n                                listValue\n                            \n                            \n                                opened\n                            \n                            \n                                standarValue\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActuelLog\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getMode\n                            \n                            \n                                getNote\n                            \n                            \n                                isContinue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectButton\n                            \n                            \n                                setBacklog\n                            \n                            \n                                setBacklogNote\n                            \n                            \n                                setPlayers\n                            \n                            \n                                valideStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, router: Router, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-component/game-component.component.ts:24\n                            \n                        \n\n                \n                    \n                            Class constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Contains data to start the game\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                site router\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActuelLog\n                        \n                    \n                \n            \n            \n                \ngetActuelLog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:195\n                        \n                    \n\n\n            \n                \n                        retrieves the function currently noted\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:210\n                        \n                    \n\n\n            \n                \n                        Get default value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMode\n                        \n                    \n                \n            \n            \n                \ngetMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Get Game Mode\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Get Note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the player who set the note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isContinue\n                        \n                    \n                \n            \n            \n                \nisContinue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Are we back in the game\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Function that starts the game after the page has loaded\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectButton\n                        \n                    \n                \n            \n            \n                \nselectButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:246\n                        \n                    \n\n\n            \n                \n                        Function that starts when a button is pressed\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    function identifier\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklog\n                        \n                    \n                \n            \n            \n                \nsetBacklog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Set Backlog Data\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogNote\n                        \n                    \n                \n            \n            \n                \nsetBacklogNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:225\n                        \n                    \n\n\n            \n                \n                        Add a not to the Backlog\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Set Player in game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valideStage\n                        \n                    \n                \n            \n            \n                \nvalideStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:253\n                        \n                    \n\n\n            \n                \n                        Function that starts when the player presses the button continue\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backlogValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:67\n                        \n                    \n\n            \n                \n                    Backlog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:53\n                        \n                    \n\n            \n                \n                    Singleton containing andlocations for HTML elements\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:38\n                        \n                    \n\n            \n                \n                    Game data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:43\n                        \n                    \n\n            \n                \n                    Class to display elements on the page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:48\n                        \n                    \n\n            \n                \n                    List of available notes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:58\n                        \n                    \n\n            \n                \n                    If the bare is open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        standarValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:63\n                        \n                    \n\n            \n                \n                    Standar value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        translate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TranslateService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {Game} from \"../../classes/decorateur/Game\";\nimport {GameConcret} from \"../../classes/decorateur/GameConcret\";\nimport {StrictDecorator} from \"../../classes/decorateur/StrictDecorator\";\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {HtmlDisplay} from \"../../classes/facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../../classes/singleton/htmlBalise\";\nimport {Router} from \"@angular/router\";\nimport {AverageDecorator} from \"../../classes/decorateur/AverageDecorator\";\nimport {MajabsDecorator} from \"../../classes/decorateur/MajabsDecorator\";\nimport {translateType} from \"@angular/compiler-cli/src/ngtsc/translator\";\nimport {TranslateService} from \"@ngx-translate/core\";\n\n/**\n * Class that manages game display\n * @implements AfterViewInit\n * @implements OnInit\n */\n@Component({\n  selector: 'game-component',\n  templateUrl: './game-component.component.html',\n  styleUrls: ['./game-component.component.scss']\n})\nexport class GameComponentComponent implements AfterViewInit, OnInit {\n\n  /**\n   * Class constructor\n   * @param dataService {GameOptionServiceService} Contains data to start the game\n   * @param router {Router} site router\n   * @param translate\n   */\n  constructor(private dataService: GameOptionServiceService, private router: Router, public translate: TranslateService) {\n  }\n\n  /**\n   * Game data\n   */\n  game: Game | undefined;\n\n  /**\n   * Class to display elements on the page\n   */\n  htmlDisplay: HtmlDisplay | undefined;\n\n  /**\n   * List of available notes\n   */\n  listValue = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n\n  /**\n   * Singleton containing andlocations for HTML elements\n   */\n  balise: HtmlBalise | undefined;\n\n  /**\n   * If the bare is open\n   */\n  opened = false;\n\n  /**\n   * Standar value\n   */\n  standarValue: string = \"\"\n  /**\n   * Backlog\n   */\n  backlogValue: string = \"\"\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Function that starts the game after the page has loaded\n   */\n  ngAfterViewInit(): void {\n    this.balise = HtmlBalise.getInstance();\n    this.balise.playerButton.style.display = 'none';\n    this.htmlDisplay = new HtmlDisplay();\n    this.game = new GameConcret();\n    if (this.getMode() == \"strict\") this.game = new StrictDecorator(this.game, this.translate);\n    else if (this.getMode() == \"moyenne\") this.game = new AverageDecorator(this.game, this.translate);\n    else if (this.getMode() == \"majabs\") this.game = new MajabsDecorator(this.game, this.translate);\n    else this.game = new StrictDecorator(this.game, this.translate)\n    this.setPlayers()\n\n    if (this.isContinue()) {\n      this.setBacklogNote()\n      this.game.continueGame(this.getDefaultValue(), this.getActuelLog());\n\n    } else {\n      this.setBacklog()\n      this.game.chooseDefaultValue();\n    }\n  }\n\n  /**\n   * Get Game Mode\n   */\n  getMode(): string {\n    let mode = \"strict\"\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Mode')) {\n            mode = data[key];\n          }\n        });\n      }\n    });\n    return mode\n  }\n\n  /**\n   * Are we back in the game\n   */\n  isContinue(): boolean {\n    let cont = false;\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith(\"Default\")) {\n            cont = true;\n          }\n        })\n      }\n    })\n    return cont;\n  }\n\n  /**\n   * Set Player in game\n   */\n  setPlayers() {\n    let players: { [key: number]: string } = {}\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Player')) {\n            const playerNumber = parseInt(key.replace('Player', ''), 10);\n            players[playerNumber] = data[key];\n          }\n        });\n      } else {\n        players[1] = \"Michel\";\n        players[2] = \"Patrick\";\n      }\n    });\n    this.game?.setPlayers(players)\n  }\n\n  /**\n   * Set Backlog Data\n   */\n  setBacklog() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = 1;\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = -1;\n        backlogData[\"Boutton Quiter\"] = -1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Get Note\n   * @param id Id of the player who set the note\n   */\n  getNote(id: number): number {\n    let n = 0\n\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Note' + id)) {\n          n = data[key];\n        }\n      })\n    })\n\n    return n\n  }\n\n  /**\n   * retrieves the function currently noted\n   */\n  getActuelLog(): number {\n    let n = 0;\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('actualLog')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Get default value\n   */\n  getDefaultValue(): string {\n    let n = \"\";\n    this.dataService.data$.subscribe(data => {\n      Object.keys(data).forEach(key => {\n        if (key.startsWith('Default')) {\n          n = data[key];\n        }\n      })\n    })\n    return n;\n  }\n\n  /**\n   * Add a not to the Backlog\n   */\n  setBacklogNote() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = this.getNote(parseInt(key.match(/\\d+/)?.[0] || ''));\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  /**\n   * Function that starts when a button is pressed\n   * @param id function identifier\n   */\n  selectButton(id: string) {\n    this.game?.playerPushButton(id)\n  }\n\n  /**\n   * Function that starts when the player presses the button continue\n   */\n  valideStage() {\n    if (this.game?.setupDefaultValue()) {\n      const valueElement = document.getElementById(\"stage1\") as HTMLInputElement;\n      if (valueElement.value != \"\") {\n        this.game?.setDefaultValue(valueElement.value)\n      }\n    } else {\n\n      if (this.game?.isDownload()) {\n        this.game?.creatAndDownloadJSON();\n        this.router.navigateByUrl('/').then(r => true);\n      } else {\n        if (this.game?.isRetry()) {\n          this.game?.setActualPlayerTurn(1);\n          this.game?.lunchStage();\n        } else {\n          if (this.game != null) {\n            if (this.game.getActualStage()  {\n        if (n \n    \n\n    \n        \n  \n    \n      clear\n    \n    \n       {{ 'Resume' | translate }} \n       {{ 'Standard value'| translate }} : {{ standarValue }}\n      {{ backlogValue }}\n    \n  \n  \n    \n\n      \n        \n        \n\n        \n           menu\n        \n      \n\n      \n\n      \n\n      \n\n      \n        \n      \n\n\n      \n        \n          local_cafe\n           {{ i }}\n        \n      \n\n      \n      \n\n\n      \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./game-component.component.scss\n                \n                /* This is a div that contain everything and takes all the page. */\n.container {\n  height: 100%;\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n\n/* The div that contains the title, teh actual task and the button to open the sidenav. */\n.header {\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n}\n\n\n/* Here we choose the style for the display of the actual task, the title and the standard value. */\n#textToShow, #StandardValue, #ActualTask {\n  color: white;\n  text-align: center;\n}\n\n#textToShow {\n  grid-column: 1/2;\n  grid-row: 1;\n  text-align: center;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.5em;\n  padding: 10px 0;\n  border-radius: 2.5em;\n  margin: 0 20% 0 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-shadow: 0 0 20px #0fa, 0 0 120px #0fa;\n  color: transparent;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#StandardValue {\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n#ActualTask {\n  grid-column: 3 / 10;\n  grid-row: 1;\n  text-align: center;\n  background-image: url(\"../../../assets/images/hypnotic.jpg\");\n  background-size: 100%;\n  border-radius: 2em;\n  padding: 10px 0;\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  font-family: 'Press Start 2P', serif;\n  min-height: 80px;\n  min-width: 800px;\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  justify-content: center;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#endMessage, #gameModeMessage{\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n  text-align: center;\n}\n\n\n/* It's here that we style all things about the sidenav. */\nmat-sidenav-container {\n  height: 100%;\n  background: none;\n}\n\nmat-sidenav {\n  width: 300px;\n  padding: 10px;\n}\n\n.header_sidenav {\n  grid-column: 11;\n  grid-row: 1;\n  transform: scale(1.2);\n  background: none;\n  border: none;\n  cursor: pointer;\n  color: white;\n  padding: 0 10px 100px 0;\n  width: 90%;\n  text-align: right;\n\n  &:active {\n    color: #797777;\n  }\n}\n\n.cross {\n  background: none;\n  color: red;\n  border: none;\n  cursor: pointer;\n\n  &:active {\n    color: #730505;\n  }\n}\n\n\n/* It's the div that contains every card the player can choose. With all the style that came with his children. */\n#PlayerButton {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-button {\n  width: 150px;\n  height: 210px;\n  background-image: url(\"../../../assets/images/card.jpg\");\n  background-size: 95%;\n  filter: brightness(0.8);\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  margin-right: -50px;\n  border-radius: 0.3rem;\n  cursor: url('../../../assets/images/hand.png'), auto;\n  position: relative;\n  z-index: 1;\n  transition: margin-right 0.3s ease, top 0.3s ease;\n\n  &:hover {\n    margin-right: 0;\n    top: -50px;\n  }\n\n  &:active {\n    transform: scale(0.85);\n  }\n}\n\n.card-button_label {\n  width: auto;\n  height: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-shadow: 0 0 7px #0fa, 0 0 120px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 2.5em;\n}\n\n.card-button_icon {\n  height: 210px;\n  text-shadow: rgb(0, 255, 170) 0.1px 0.2px 6px;\n  color: rgb(255, 255, 255);\n  font-size: 3.2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n\n/* Here is the style of the div that contains the input and the input itself. */\n.input-group {\n  width: 35em;\n  display: flex;\n  flex-direction: column;\n  z-index: 2;\n\n  &__input {\n    height: calc(1em + 1.6em + 0.5em);\n    width: 100%;\n\n    background-image: linear-gradient(#e3e3e3, #e3e3e3),\n    linear-gradient(120deg, #1beabd 0%, #0ff 50%, #20125f 100%);\n    background-origin: border-box;\n    background-clip: padding-box, border-box;\n    background-size: 200% 100%;\n    color: #000000;\n\n    line-height: 1;\n    outline: none;\n    padding: 0 1em;\n    font-family: 'Press Start 2P', serif;\n\n    border: 0.25em solid transparent;\n    border-radius: 1.8em;\n\n    &:focus {\n      box-shadow: 0 0 0 0 #fff,\n      3px -3px 30px #1beabd,\n      -3px 3px 30px #10abff;\n    }\n  }\n}\n\n::placeholder {\n  color: #8d8d8d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear               {{ \\'Resume\\' | translate }}        {{ \\'Standard value\\'| translate }} : {{ standarValue }}      {{ backlogValue }}                                                     menu                                                                            local_cafe           {{ i }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConcret.html":{"url":"classes/GameConcret.html","title":"class - GameConcret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConcret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/GameConcret.ts\n        \n\n\n            \n                Description\n            \n            \n                Class containing all game information\n\n            \n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualFunctionInBacklog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                bSetupDefaultValue\n                            \n                            \n                                defaultValue\n                            \n                            \n                                Players\n                            \n                            \n                                PlayersNote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                continueGame\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setStage\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualFunctionInBacklog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:44\n                        \n                    \n\n            \n                \n                    Which backlog function is being written down\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:29\n                        \n                    \n\n            \n                \n                    Backlog list with associated rating\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bSetupDefaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:34\n                        \n                    \n\n            \n                \n                    Has the standard value been defined?\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:39\n                        \n                    \n\n            \n                \n                    Standard value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:21\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersNote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:25\n                        \n                    \n\n            \n                \n                    List of players in the game with the notes they have applied\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:148\n                        \n                    \n\n\n            \n                \n                        Adding a note to a Backlog function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    note to add\n\n                                            \n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function which is noted\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueGame\n                        \n                    \n                \n            \n            \n                \ncontinueGame(defaultValue: string, actualLog: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:14\n                        \n                    \n\n\n            \n                \n                        Function that sets all values useful for resuming the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Standard game value\n\n                                            \n                                        \n                                        \n                                                actualLog\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:220\n                        \n                    \n\n\n            \n                \n                        Create and download a backup JSON file\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:96\n                        \n                    \n\n\n            \n                \n                        Return to current number of courses\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:125\n                        \n                    \n\n\n            \n                \n                        Return BacklogData\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:180\n                        \n                    \n\n\n            \n                \n                        Retrieve a note from the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function to which the note belongs\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:118\n                        \n                    \n\n\n            \n                \n                        Returning the standard value\n\n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:163\n                        \n                    \n\n\n            \n                \n                        Recover a note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of note to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:155\n                        \n                    \n\n\n            \n                \n                        Return to note list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:111\n                        \n                    \n\n\n            \n                \n                        Return a player's name\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the player to be returned\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:103\n                        \n                    \n\n\n            \n                \n                        Returns the number of players\n\n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:139\n                        \n                    \n\n\n            \n                \n                        Return to player list\n\n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:213\n                        \n                    \n\n\n            \n                \n                        Do we need to download a backup\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:187\n                        \n                    \n\n\n            \n                \n                        Should we replay the round\n\n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:172\n                        \n                    \n\n\n            \n                \n                        Change the note of a function in the backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Id of the function\n\n                                            \n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Function note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:89\n                        \n                    \n\n\n            \n                \n                        Next step function\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:133\n                        \n                    \n\n\n            \n                \n                        Function triggered when a player selects a card. This function marks the function in the Backlog\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    rating given by player\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:59\n                        \n                    \n\n\n            \n                \n                        Setter for backlogData\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    All the backlog\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:81\n                        \n                    \n\n\n            \n                \n                        Setter for the standard value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    value for the standard value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:50\n                        \n                    \n\n\n            \n                \n                        Setter for players\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    List of players\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setStage\n                        \n                    \n                \n            \n            \n                \nsetStage(nb: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:229\n                        \n                    \n\n\n            \n                \n                        Set function to note\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                nb\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of function to note\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:73\n                        \n                    \n\n\n            \n                \n                        Defines whether to setup the standard value\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\n\n/**\n * Class containing all game information\n * @implements Game\n */\nexport class GameConcret implements Game{\n\n  /**\n   * Function that sets all values useful for resuming the game\n   * @param defaultValue {string} Standard game value\n   * @param actualLog {number} id of function to note\n   */\n  continueGame(defaultValue: string, actualLog: number): void {\n      throw new Error(\"Method not implemented.\");\n  }\n\n  /**\n   * List of players in the game\n   */\n  Players: { [key: number]: string} = {};\n  /**\n   * List of players in the game with the notes they have applied\n   */\n  PlayersNote: { [key : string]: string } = {};\n  /**\n   * Backlog list with associated rating\n   */\n  BacklogData: { [key : string]: number } = {};\n\n  /**\n   * Has the standard value been defined?\n   */\n  bSetupDefaultValue = true;\n\n  /**\n   * Standard value\n   */\n  defaultValue = \"\";\n\n  /**\n   * Which backlog function is being written down\n   */\n  actualFunctionInBacklog : number = 0;\n\n  /**\n   * Setter for players\n   * @param players List of players\n   */\n  setPlayers(players: { [p: number]: string }): void {\n    this.Players = players\n    console.log(this.Players);\n  }\n\n  /**\n   * Setter for backlogData\n   * @param BacklogData All the backlog\n   */\n  setBacklogData(BacklogData: { [key : string]: number }){\n    this.BacklogData = BacklogData\n  }\n\n  /**\n   * @ignore\n   */\n  chooseDefaultValue(): void {\n  }\n\n  /**\n   * Defines whether to setup the standard value\n   * @return\n   */\n  setupDefaultValue(): boolean {\n    return this.bSetupDefaultValue;\n  }\n\n  /**\n   * Setter for the standard value\n   * @param value {string} value for the standard value\n   */\n  setDefaultValue(value: string): void {\n    this.defaultValue = value\n    this.bSetupDefaultValue = false;\n  }\n\n  /**\n   * Next step function\n   */\n  nextStage(){\n    this.actualFunctionInBacklog++;\n  }\n\n  /**\n   * Return to current number of courses\n   */\n  getActualStage(): number {\n    return this.actualFunctionInBacklog;\n  }\n\n  /**\n   * Returns the number of players\n   */\n  getPlayerNumber(): number {\n    return Object.keys(this.Players).length;\n  }\n\n  /**\n   * Return a player's name\n   * @param key {number} id of the player to be returned\n   */\n  getPlayer(key: number): string {\n    return this.Players[key];\n  }\n\n  /**\n   * Returning the standard value\n   */\n  getDefaultValue(): string {\n    return this.defaultValue;\n  }\n\n  /**\n   * Return BacklogData\n   */\n  getBacklogData(): { [p: string]: number } {\n    return this.BacklogData;\n  }\n\n  /**\n   * Function triggered when a player selects a card. This function marks the function in the Backlog\n   * @param id {string} rating given by player\n   */\n  playerPushButton(id: string): void {\n  }\n\n  /**\n   * Return to player list\n   */\n  getPlayers(): { [p: number]: string } {\n    return this.Players;\n  }\n\n  /**\n   * Adding a note to a Backlog function\n   * @param value {string} note to add\n   * @param key {string} Function which is noted\n   */\n  addNote(value : string, key : string) : void {\n    this.PlayersNote[key] = value;\n  }\n\n  /**\n   * Return to note list\n   */\n  getNotes() : { [key : string]: string }{\n    return this.PlayersNote;\n  }\n\n  /**\n   * Recover a note\n   * @param key {string} Id of note to be returned\n   */\n  getNote(key : string) : string{\n    return this.PlayersNote[key];\n  }\n\n  /**\n   * Change the note of a function in the backlog\n   * @param key {string} Id of the function\n   * @param value {number} Function note\n   */\n  modifyBacklogData(key : string, value : number) : void{\n    this.BacklogData[key] = value;\n  }\n\n  /**\n   * Retrieve a note from the backlog\n   * @param key {string} Function to which the note belongs\n   */\n  getBacklogDataNote(key : string) : number{\n    return this.BacklogData[key];\n  }\n\n  /**\n   * Should we replay the round\n   */\n  isRetry(): boolean {\n    return false;\n  }\n\n  /**\n   * @ignore\n   * @param n\n   */\n  setActualPlayerTurn(n: number): void {\n  }\n\n  /**\n   * @ignore\n   */\n  end(): void {\n  }\n\n  /**\n   * @ignore\n   */\n  lunchStage(): void {\n  }\n\n  /**\n   * Do we need to download a backup\n   */\n  isDownload(): boolean {\n    return false;\n  }\n\n  /**\n   * Create and download a backup JSON file\n   */\n  creatAndDownloadJSON(): { [p: string]: any } {\n    const test : { [p: string]: any } = {}\n    return test;\n  }\n\n  /**\n   * Set function to note\n   * @param nb id of function to note\n   */\n  setStage(nb: number): void {\n    this.actualFunctionInBacklog = nb;\n  }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameOptionServiceService.html":{"url":"injectables/GameOptionServiceService.html","title":"injectable - GameOptionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameOptionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/gameOptionService/game-option-service.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for transmitting data from one scene to another in JSON \nThis allows you to send data to save data when creating a scene\nor when resuming a game from the main menu\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(newData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/gameOptionService/game-option-service.service.ts:30\n                        \n                    \n\n\n            \n                \n                        Function for sending data from one component to another\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                newData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Data to be passed from one component to another\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:18\n                        \n                    \n\n            \n                \n                    Variable containing the data sent\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:23\n                        \n                    \n\n            \n                \n                    Variable used to retrieve sent data\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n/**\n * Service for transmitting data from one scene to another in JSON \n * This allows you to send data to save data when creating a scene\n * or when resuming a game from the main menu\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameOptionServiceService {\n\n  /**\n   * Variable containing the data sent\n   * @private\n   */\n  private data = new BehaviorSubject(null);\n\n  /**\n   * Variable used to retrieve sent data\n   */\n  data$ = this.data.asObservable();\n\n  /**\n   * Function for sending data from one component to another\n   * @param {any} newData Data to be passed from one component to another\n   * @return {void}\n   */\n  setData(newData: any): void {\n    this.data.next(newData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlBalise.html":{"url":"classes/HtmlBalise.html","title":"class - HtmlBalise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlBalise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/singleton/htmlBalise.ts\n        \n\n\n            \n                Description\n            \n            \n                class singleton which contains the html tags to be modified\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearInstance\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:9\n                        \n                    \n\n            \n                \n                    variable containing singleton class instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        clearInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:49\n                        \n                    \n\n\n            \n                \n                        Function to empty the instance to create a new one\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:39\n                        \n                    \n\n\n            \n                \n                        Function to retrieve class instance\n\n\n                        \n                            Returns :         HtmlBalise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HtmlBalise{\n  /**\n   * variable containing singleton class instance\n   * @private\n   */\n  private static instance: HtmlBalise | null = null;\n\n\n  /** @ignore */ stValue : HTMLElement\n  /** @ignore */ task : HTMLElement\n  /** @ignore */ endMessage : HTMLElement\n  /** @ignore */ title : HTMLDivElement\n  /** @ignore */ playerButton : HTMLDivElement\n  /** @ignore */ validateButton : HTMLButtonElement\n  /** @ignore */ finishButton : HTMLElement;\n  /** @ignore */ gameModeMessage : HTMLDivElement;\n  /** @ignore */ inputValue : HTMLInputElement;\n\n  /** @ignore */\n  private constructor() {\n    this.stValue = document.getElementById(\"StandardValue\") as HTMLElement\n    this.task = document.getElementById(\"ActualTask\") as HTMLElement\n    this.endMessage = document.getElementById(\"endMessage\") as HTMLElement\n    this.title = document.getElementById(\"textToShow\") as HTMLDivElement\n    this.playerButton = document.getElementById(\"PlayerButton\") as HTMLDivElement;\n    this.validateButton = document.getElementById(\"validateButton\") as HTMLButtonElement;\n    this.finishButton = document.getElementById(\"finishButton\") as HTMLElement;\n    this.gameModeMessage = document.getElementById(\"gameModeMessage\") as HTMLDivElement;\n    this.inputValue = document.getElementById(\"stage1\") as HTMLInputElement;\n  }\n\n  /**\n   * Function to retrieve class instance\n   * @return {HtmlBalise}\n   */\n  static getInstance(): HtmlBalise {\n    if (!HtmlBalise.instance){\n      HtmlBalise.instance = new HtmlBalise();\n    }\n    return HtmlBalise.instance;\n  }\n\n  /**\n   * Function to empty the instance to create a new one\n   */\n  static clearInstance(): void{\n    HtmlBalise.instance = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlDisplay.html":{"url":"classes/HtmlDisplay.html","title":"class - HtmlDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/facade/HtmlDisplay.ts\n        \n\n\n            \n                Description\n            \n            \n                Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                addHtmlElement\n                            \n                            \n                                addText\n                            \n                            \n                                clearHTML\n                            \n                            \n                                displayHTML\n                            \n                            \n                                showText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/facade/HtmlDisplay.ts:12\n                        \n                    \n\n            \n                \n                    Variable that contains everything that will be added to the DOM in HTML format\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(id: string, classe: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:63\n                        \n                    \n\n\n            \n                \n                        Function for adding a class to an HTML object by passing its ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    id of the element to which you want to add a class\n\n                                            \n                                        \n                                        \n                                                classe\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    name of the class to be added\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHtmlElement\n                        \n                    \n                \n            \n            \n                \naddHtmlElement(type: string, id?: string, additionalValue?: literal type, closeBalise: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:40\n                        \n                    \n\n\n            \n                \n                        Function that adds an HTML tag with its various parameters to the content variable.\nExample ://Example of use\nconst balise = HtmlBalise.getInstance()\nlet html = new HtmlDisplay()\nhtml.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\nhtml.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"div\"\n                                            \n\n                                            \n                                                    type of HTML tag to be placed in the DOM\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    id of element to be added to DOM\n\n                                            \n                                        \n                                        \n                                                additionalValue\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    list containing the add valuers of the add element type of [key : string] : string\n\n                                            \n                                        \n                                        \n                                                closeBalise\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    defined if the added tag is a closing tag\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addText\n                        \n                    \n                \n            \n            \n                \naddText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:73\n                        \n                    \n\n\n            \n                \n                        Function to add a text to the content, not an HTML tag but a text to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text to be added to content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHTML\n                        \n                    \n                \n            \n            \n                \nclearHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:90\n                        \n                    \n\n\n            \n                \n                        Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element to be emptied\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayHTML\n                        \n                    \n                \n            \n            \n                \ndisplayHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:81\n                        \n                    \n\n\n            \n                \n                        Function for adding content to an HTML object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    DOM element in which we'll add all the content\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showText\n                        \n                    \n                \n            \n            \n                \nshowText(label: HTMLElement, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:20\n                        \n                    \n\n\n            \n                \n                        Function that places a text in an HTML DOM element\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    reference to an HTML element to which a text has been added\n\n                                            \n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    text which will be placed in an HTML component\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {connect} from \"rxjs\";\nimport transformJavaScript from \"@angular-devkit/build-angular/src/tools/esbuild/javascript-transformer-worker\";\n\n/**\n * Class based on the Facade design pattern, which lets you easily add HTML elements to the page's DOM\n */\nexport class HtmlDisplay{\n\n  /**\n   * Variable that contains everything that will be added to the DOM in HTML format\n   */\n  public content = \"\";\n\n\n  /**\n   * Function that places a text in an HTML DOM element\n   * @param label {HTMLElement} reference to an HTML element to which a text has been added\n   * @param text {string} text which will be placed in an HTML component\n   */\n  showText(label : HTMLElement, text : string){\n    label.innerText = text;\n  }\n\n  /**\n   * Function that adds an HTML tag with its various parameters to the content variable.\n   *\n   * @example\n   * //Example of use\n   * const balise = HtmlBalise.getInstance()\n   * let html = new HtmlDisplay()\n   * html.addHtmlElement(\"input\", \"stage1\", {[\"type\"] = \"text\", [\"placeholder\"] = \"Enter Task\"}, false)\n   * html.displayHTML(balise.title) // You should have an input_text tag in the DOM that displays \"Enter Task\".\n   *\n   *\n   * @param type {string} type of HTML tag to be placed in the DOM\n   * @param id {string} id of element to be added to DOM\n   * @param additionalValue {{[string] : string}} list containing the add valuers of the add element type of [key : string] : string\n   * @param closeBalise {boolean} defined if the added tag is a closing tag\n   */\n  addHtmlElement(type : string = \"div\", id? : string, additionalValue? : {[key : string] : string}, closeBalise : boolean = false){\n    if(!closeBalise) {\n      this.content += \" {\n          this.content += key + \"='\" + additionalValue[key] + \"' \"\n        });\n      }\n\n      this.content += \">\"\n    }else{\n      this.content += \"\";\n    }\n  }\n\n  /**\n   * Function for adding a class to an HTML object by passing its ID\n   * @param id {string} id of the element to which you want to add a class\n   * @param classe {string} name of the class to be added\n   */\n  addClass(id: string, classe: string){\n    const element = document.getElementById(id);\n    if(element == null) return\n    element.classList.add(classe);\n  }\n\n  /**\n   * Function to add a text to the content, not an HTML tag but a text to be displayed.\n   * @param text {string} text to be added to content\n   */\n  addText(text : string){\n    this.content += text;\n  }\n\n  /**\n   * Function for adding content to an HTML object\n   * @param element {HTMLElement} DOM element in which we'll add all the content\n   */\n  displayHTML(element : HTMLElement){\n    element.innerHTML = this.content;\n    this.content = \"\"\n  }\n\n  /**\n   * Function that allows you to empty an HTML element by deleting everything that was added after it was generated.\n   * @param element {HTMLElement} DOM element to be emptied\n   */\n  clearHTML(element : HTMLElement){\n    element.innerHTML = \"\";\n    this.content = \"\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationButtonComponent.html":{"url":"components/InformationButtonComponent.html","title":"component - InformationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-button/information-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create an information button to explain the rules and the goal of this website.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-button\n            \n\n\n\n            \n                styleUrls\n                ./information-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/information-button/information-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/information-button/information-button.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Output} from '@angular/core';\n\n/**\n * Component that create an information button to explain the rules and the goal of this website.\n */\n@Component({\n  selector: 'information-button',\n  templateUrl: './information-button.component.html',\n  styleUrls: ['./information-button.component.scss']\n})\n\nexport class InformationButtonComponent {\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n}\n\n    \n\n    \n        \n  help\n\n\n    \n\n    \n                \n                    ./information-button.component.scss\n                \n                .information_button {\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n\n  &:hover {\n    cursor: pointer;\n    color: #3146d3;\n  }\n}\n\n.icon-display {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  help'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-menu/main-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n\n\n            \n                styleUrls\n                ./main-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualLog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                defaultValue\n                            \n                            \n                                lang\n                            \n                            \n                                mode\n                            \n                            \n                                players\n                            \n                            \n                                popupIsOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changLang\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                openInformation\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main-menu/main-menu.component.ts:19\n                            \n                        \n\n                \n                    \n                            Component that create page for the main menu of the website. We can choose here if we want to start a\nnew game or load a game from a json file.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changLang\n                        \n                    \n                \n            \n            \n                \nchangLang(lang: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Language change function\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    translation language\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:41\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Function to save data from the input JSON file as a variable for use in the game\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    con contains the JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openInformation\n                        \n                    \n                \n            \n            \n                \nopenInformation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Opens or closes popup window when information button is clicked\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/main-menu/main-menu.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Function to send previously recorded data to game-option-service for in-game use\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualLog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:73\n                        \n                    \n\n            \n                \n                    First Backlog not yet graded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:57\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:53\n                        \n                    \n\n            \n                \n                    Data sent to the game in JSON format\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:65\n                        \n                    \n\n            \n                \n                    Standard value used\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:36\n                        \n                    \n\n            \n                \n                    Site language\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:61\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:69\n                        \n                    \n\n            \n                \n                    List of players in the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popupIsOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/main-menu/main-menu.component.ts:31\n                        \n                    \n\n            \n                \n                    Defines whether the popup is already displayed or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {TranslateModule, TranslateService} from \"@ngx-translate/core\";\nimport {setUpLocationSync} from \"@angular/router/upgrade\";\nimport {NgModelGroup} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {MatIcon, MatIconModule} from \"@angular/material/icon\";\nimport {AppComponent} from \"../../app.component\";\n\n/**\n * Component that create page for the main menu of the website. We can choose here if we want to start a\n * new game or load a game from a json file.\n */\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit{\n\n  /**\n   * Component that create page for the main menu of the website. We can choose here if we want to start a\n   * new game or load a game from a json file.\n   */\n  constructor(private dataService: GameOptionServiceService, private translateService:TranslateService) {\n  }\n\n  /**\n   * Defines whether the popup is already displayed or not\n   */\n  popupIsOpen = false\n\n  /**\n   * Site language\n   */\n  lang = \"\"\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n      const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n      button.style.display = \"none\";\n      const popup = document.getElementById(\"popup\") as HTMLDivElement;\n      popup.style.display = \"none\";\n\n      this.lang = localStorage.getItem('lang') || 'en';\n  }\n\n  /**\n   * Data sent to the game in JSON format\n   */\n  Data: { [Type: string]: string} = {}\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: { [key : string]: number } = {};\n  /**\n   * Select game mode\n   */\n  mode = \"\"\n  /**\n   * Standard value used\n   */\n  defaultValue = \"\"\n  /**\n   * List of players in the game\n   */\n  players : string[] = []\n  /**\n   * First Backlog not yet graded\n   */\n  actualLog = 0;\n\n  /**\n   * Function to save data from the input JSON file as a variable for use in the game\n   * @param event {event} con contains the JSON file\n   */\n  onFileSelected(event: any = 0){\n    this.players = [];\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n      // Extract names from JSON using keys\n\n      this.mode = jsonData.mode\n      this.defaultValue = jsonData.default\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          for (const itemName in item) {\n            if (item.hasOwnProperty(itemName) && itemName !== 'work') {\n              this.BacklogData[itemName] = item[itemName] as number\n            }\n          }\n        }\n      }\n\n      for(const key in jsonData.Players){\n        if (jsonData.Players.hasOwnProperty(key)) {\n          const item : string = jsonData.Players[key];\n          this.players.push(item);\n        }\n      }\n\n      for (const key in jsonData.Backlog) {\n        if (jsonData.Backlog.hasOwnProperty(key)) {\n          const item = jsonData.Backlog[key];\n          if (!item.work) {\n            this.actualLog = parseInt(key) - 1;\n            break;\n          }\n        }\n      }\n\n      console.log(this.mode, this.defaultValue, this.BacklogData, this.players, this.actualLog)\n\n      setTimeout(() => {\n        const button = document.getElementById(\"contniue-button\") as HTMLButtonElement\n        button.style.display = \"flex\"\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n\n  /**\n   * Function to send previously recorded data to game-option-service for in-game use\n   */\n  sendData(){\n    Object.keys(this.players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + (playerKey + 1);\n      this.Data[strKey] = this.players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n    this.Data[\"Default\"] = this.defaultValue;\n    this.Data[\"actualLog\"] = (this.actualLog + 1) + \"\";\n\n    Object.keys(this.BacklogData).forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n      this.Data[\"Note\" + index] = this.BacklogData[item] + \"\"\n    });\n\n    console.log(\"data\", this.Data);\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * Opens or closes popup window when information button is clicked\n   */\n  openInformation(){\n    const popup = document.getElementById(\"popup\") as HTMLDivElement;\n    if(this.popupIsOpen) popup.style.display = \"none\";\n    else popup.style.display = \"block\";\n    this.popupIsOpen = !this.popupIsOpen;\n  }\n\n  /**\n   * Language change function\n   * @param lang translation language\n   */\n  changLang(lang:any){\n    const selectedLanguage = lang.target.value;\n\n    localStorage.setItem('lang', selectedLanguage);\n    this.translateService.use(selectedLanguage);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n    \n      language\n      \n        English\n        Français\n      \n    \n  \n\n\n  \n  \n  \n  \n  \n  \n\n\n  \n    \n    {{ 'JSON_file' | translate }}\n  \n\n\n  {{ 'GameRules' | translate }}\n  \n    {{ 'GameRules1' | translate }}\n    {{ 'GameRules2' | translate }}\n    {{ 'GameRules3' | translate }}\n    {{ 'GameRules4' | translate }}\n    {{ 'GameRules5' | translate }}\n    {{ 'GameRules6' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./main-menu.component.scss\n                \n                .container_middle {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 40%;\n}\n\n.container_header {\n  height: 25%;\n  padding: 80px 15px 0 35px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\nstart-button {\n  transform: scale(1.5);\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    font-family: 'Press Start 2P', serif;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n.header_right {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  align-content: space-between;\n  gap: 15px;\n}\n\n.container_bottom {\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  justify-content: center;\n  height: 20%;\n}\n\n#popup {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #151515;\n  padding: 20px 50px 20px 15px;\n  font-size: 12px;\n  border: 1.2px solid #949494;\n  text-align: justify;\n  font-family: 'Press Start 2P', serif;\n  color: #949494;\n  width: 70em;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n}\n\nh2 {\n  text-align: center;\n  font-size: 20px;\n  font-family: 'Press Start 2P', serif;\n  text-decoration: underline;\n  color: #00b2ff;\n}\n\n\nselect {\n  appearance: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  cursor: pointer;\n  background: transparent;\n  border: none;\n}\n\n.info-button_language {\n  background: #cbcbcb;\n  border: 1px solid black;\n  display: flex;\n  justify-content: center;\n  border-radius: 4px;\n  padding: 12px;\n\n  &:hover {\n    background-color: #3146d3;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        language              English        Français                                  {{ \\'JSON_file\\' | translate }}    {{ \\'GameRules\\' | translate }}      {{ \\'GameRules1\\' | translate }}    {{ \\'GameRules2\\' | translate }}    {{ \\'GameRules3\\' | translate }}    {{ \\'GameRules4\\' | translate }}    {{ \\'GameRules5\\' | translate }}    {{ \\'GameRules6\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCardComponent.html":{"url":"components/PlayerCardComponent.html","title":"component - PlayerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-card/player-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a card for the player and their name, to have a better display\nin the .\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-card\n            \n\n\n\n            \n                styleUrls\n                ./player-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                i\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-card/player-card.component.ts:17\n                            \n                        \n                \n                    \n                        Value of the current player.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n/**\n * Component that create a card for the player and their name, to have a better display\n * in the .\n */\n@Component({\n  selector: 'player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.scss']\n})\n\nexport class PlayerCardComponent {\n  /**\n   * Value of the current player.\n   */\n  @Input() i: number = 0;\n}\n\n    \n\n    \n        \n   {{'player' | translate}} {{i}} \n  \n\n\n    \n\n    \n                \n                    ./player-card.component.scss\n                \n                .card {\n  display: flex;\n  background-image: url(\"../../../assets/images/player-card-background.jpg\");\n  background-size: 50%;\n  flex-direction: column;\n  border-radius: 0.3rem;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem;\n  border: 1px solid #e0e0e0;\n  transition: 0.8s;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  width: 160px;\n\n  &:hover {\n    border: 1px solid #b0b0b0;\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.35);\n  }\n}\n\nh1 {\n  color: #fff;\n  text-shadow:\n    0 0 7px #fff,\n    0 0 10px #fff,\n    0 0 21px #fff,\n    0 0 42px #0fa,\n    0 0 82px #0fa,\n    0 0 92px #0fa,\n    0 0 102px #0fa,\n    0 0 151px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.2em;\n}\n\ninput {\n  background: #001546;\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 0.5em;\n  border: 1px solid white;\n  border-radius: 0.3rem;\n  padding: 7px 0 7px 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{\\'player\\' | translate}} {{i}}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponentComponent.html":{"url":"components/SettingsComponentComponent.html","title":"component - SettingsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings-component/settings-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the page where the user will choose every option for his game.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-component\n            \n\n\n\n            \n                styleUrls\n                ./settings-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BacklogData\n                            \n                            \n                                Data\n                            \n                            \n                                mode\n                            \n                            \n                                playerMax\n                            \n                            \n                                playerNumber\n                            \n                            \n                                Players\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayerName\n                            \n                            \n                                changeMod\n                            \n                            \n                                getSliderValue\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlayerName\n                        \n                    \n                \n            \n            \n                \naddPlayerName(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Changes the name of the player whose name has just been entered\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    input text value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMod\n                        \n                    \n                \n            \n            \n                \nchangeMod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Change game mode\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    value of check box\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSliderValue\n                        \n                    \n                \n            \n            \n                \ngetSliderValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Modifies the number of players by the slider value\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    slider value\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Changes backlog values based on imported JSON file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                            \n                                                    JSON file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Sends data to the game\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:26\n                        \n                    \n\n            \n                \n                    Backlog list retrieve JSON file\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:21\n                        \n                    \n\n            \n                \n                    Data that will be passed to the game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"strict\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:36\n                        \n                    \n\n            \n                \n                    Select game mode\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:31\n                        \n                    \n\n            \n                \n                    Maximum number of players per game\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:41\n                        \n                    \n\n            \n                \n                    Current number of players\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:45\n                        \n                    \n\n            \n                \n                    List of players\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n/**\n * Component that create the page where the user will choose every option for his game.\n */\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings-component.component.html',\n  styleUrls: ['./settings-component.component.scss']\n})\n\nexport class SettingsComponentComponent {\n  /** @ignore */\n  constructor(private dataService: GameOptionServiceService) {\n  }\n\n  /**\n   * Data that will be passed to the game\n   */\n  Data: { [Type: string]: string } = {}\n\n  /**\n   * Backlog list retrieve JSON file\n   */\n  BacklogData: string[] = [];\n\n  /**\n   * Maximum number of players per game\n   */\n  playerMax: number = 15;\n\n  /**\n   * Select game mode\n   */\n  mode = \"strict\";\n\n  /**\n   * Current number of players\n   */\n  playerNumber: number = 2;\n  /**\n   * List of players\n   */\n  Players: { [key: number]: string } = {}\n  /** @ignore */playersNb: number[] = [1, 2]\n\n  /**\n   * Modifies the number of players by the slider value\n   * @param event slider value\n   */\n  getSliderValue(event: any = 0) {\n    this.playerNumber = event.target.value;\n    this.playersNb = []\n    for (let i = 1; i  0) {\n      const placeholder = event.target.placeholder;\n      const match = placeholder.replace(/\\D/g, \"\");\n      const id = parseInt(match);\n      this.Players[id] = event.target.value.substring(0, 7);\n      console.log(this.Players);\n    }\n  }\n\n  /**\n   * Change game mode\n   * @param event value of check box\n   */\n  changeMod(event: any = 0) {\n    this.mode = event.target.value;\n    console.log(this.mode);\n  }\n\n  /**\n   * Changes backlog values based on imported JSON file\n   * @param event JSON file\n   */\n  onFileSelected(event: any = 0) {\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n\n      // Extract names from JSON using keys\n      const namesArray: string[] = [];\n      for (const key in jsonData) {\n        if (jsonData.hasOwnProperty(key) && jsonData[key]?.name) {\n          namesArray.push(jsonData[key].name);\n        }\n      }\n      this.BacklogData = namesArray;\n      setTimeout(() => {\n        console.log(this.BacklogData);\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n  /**\n   * Sends data to the game\n   */\n  sendData(){\n    console.log(\"test\");\n    Object.keys(this.Players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + playerKey;\n      this.Data[strKey] = this.Players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n\n    this.BacklogData.forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n    });\n\n    this.dataService.setData(this.Data);\n  }\n\n  /**\n   * @ignore\n   * @protected\n   */\n  protected readonly console = console;\n}\n\n    \n\n    \n        \n  \n    \n      \n         {{'NbPlayer' | translate}}\n        \n        {{ playerNumber }}\n      \n\n      \n        \n      \n    \n\n    \n      \n         {{'Game mode' | translate }}\n        \n          \n            \n             {{\"Strict\" | translate}}\n            \n            \n          \n          \n            \n            {{\"Absolute Majority\" | translate}} \n            \n            \n          \n          \n            \n            {{\"Average\" | translate}}\n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n      {{'JSON_file' | translate}}\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-component.component.scss\n                \n                form {\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.form_top {\n  display: flex;\n  flex-direction: row;\n  height: 82%;\n  width: 100%;\n}\n\n.top_left {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 80%;\n}\n\n.top_right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  width: 20%;\n}\n\n.left_number-players {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20%;\n}\n\n.left_players {\n  display: flex;\n  width: 100%;\n  height: 80%;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.right_style-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & h3 {\n    font-family: 'Press Start 2P', serif;\n    font-size: 1.4em;\n    margin: 0;\n  }\n}\n\n.bottom_input-json {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & input {\n    color: white;\n    font-family: 'Press Start 2P', serif;\n  }\n}\n\n\n.form_bottom {\n  display: flex;\n  width: 100%;\n  height: 25%;\n  margin-top: 15px;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n\nul {\n  list-style-type: none;\n}\n\nli {\n  position: relative;\n  padding: 10px 10px 10px 40px;\n  height: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n\n  &:active {\n    color: #3351ff !important;\n  }\n}\n\n.style-game_label:before {\n  content: \"\";\n  width: 15px;\n  height: 15px;\n  background: #fff;\n  position: absolute;\n  left: 7px;\n  top: calc(50% - 13px);\n  box-sizing: border-box;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"] {\n  opacity: 0;\n  -webkit-appearance: none;\n  display: inline-block;\n  vertical-align: middle;\n  z-index: 100;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 30px;\n  position: absolute;\n  left: 0;\n  top: calc(50% - 15px);\n  cursor: pointer;\n}\n\n.circle {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  left: -3px;\n  top: 2px;\n  border: 5px solid #fff;\n  opacity: 0;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked ~ .circle {\n  position: absolute;\n  opacity: 1;\n  animation-name: explode;\n  animation-duration: 0.350s;\n}\n\n@keyframes explode {\n  0% {\n    opacity: 0;\n    transform: scale(4);\n  }\n  60% {\n    opacity: 1;\n    transform: scale(0.5);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{\\'NbPlayer\\' | translate}}                {{ playerNumber }}                                                 {{\\'Game mode\\' | translate }}                                           {{\"Strict\" | translate}}                                                                    {{\"Absolute Majority\" | translate}}                                                                     {{\"Average\" | translate}}                                                                        {{\\'JSON_file\\' | translate}}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShopComponentComponent.html":{"url":"components/ShopComponentComponent.html","title":"component - ShopComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShopComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/shop-component/shop-component.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class for choosing skins\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                shop-component\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            RouterLink\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./shop-component.component.html\n            \n\n\n\n            \n                styleUrl\n                ./shop-component.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changSelected\n                            \n                            \n                                selectSkin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changSelected\n                        \n                    \n                \n            \n            \n                \nchangSelected()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shop-component/shop-component.component.ts:46\n                        \n                    \n\n\n            \n                \n                        Changer l'affichage du skin selectioner\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSkin\n                        \n                    \n                \n            \n            \n                \nselectSkin(e: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/shop-component/shop-component.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Selectioner un skin\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                e\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    click element\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {TranslateModule} from \"@ngx-translate/core\";\nimport {RouterLink} from \"@angular/router\";\n\n/**\n * Class for choosing skins\n */\n@Component({\n  selector: 'shop-component',\n  standalone: true,\n  imports: [\n    TranslateModule,\n    RouterLink\n  ],\n  templateUrl: './shop-component.component.html',\n  styleUrl: './shop-component.component.scss'\n})\nexport class ShopComponentComponent implements OnInit{\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    let elements = document.getElementsByClassName(\"skinbutton\") as HTMLCollectionOf\n    for(let i = 0; i \n    for(let i = 0; i \n    \n\n    \n        \n\n\n\n\n     {{\"home\" | translate}} \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     {{\"home\" | translate}} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShopComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartButtonComponent.html":{"url":"components/StartButtonComponent.html","title":"component - StartButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/start-button/start-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create a configurable button with some specific style, the only change possible\nis the link, the color of the background and the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                start-button\n            \n\n\n\n            \n                styleUrls\n                ./start-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./start-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captionBackground\n                            \n                            \n                                captionColor\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                pushableBackground\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captionBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:21\n                            \n                        \n                \n                    \n                        Variable to change the background color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        captionColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:26\n                            \n                        \n                \n                    \n                        Variable to change the text color of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        link\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:36\n                            \n                        \n                \n                    \n                        Variable to change the link of a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:31\n                            \n                        \n                \n                    \n                        Variable to change the text on a button when it's called in another component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pushableBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:16\n                            \n                        \n                \n                    \n                        Variable to change the color under a button when it's called in another component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:41\n                            \n                        \n                \n                    \n                        Variable who send a message when the button's clicked.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Send a message with the variable buttonClicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n/**\n * Component that create a configurable button with some specific style, the only change possible\n * is the link, the color of the background and the text.\n */\n@Component({\n  selector: 'start-button',\n  templateUrl: './start-button.component.html',\n  styleUrls: ['./start-button.component.scss']\n})\nexport class StartButtonComponent implements OnInit{\n  /**\n   * Variable to change the color under a button when it's called in another component.\n   */\n  @Input() pushableBackground: string = '';\n\n  /**\n   * Variable to change the background color of a button when it's called in another component.\n   */\n  @Input() captionBackground: string = '';\n\n  /**\n   * Variable to change the text color of a button when it's called in another component.\n   */\n  @Input() captionColor: string = '';\n\n  /**\n   * Variable to change the text on a button when it's called in another component.\n   */\n  @Input() name: string = '';\n\n  /**\n   * Variable to change the link of a button when it's called in another component.\n   */\n  @Input() link: string = '';\n\n  /**\n   * Variable who send a message when the button's clicked.\n   */\n  @Output() buttonClicked = new EventEmitter();\n\n\n  /**\n   * Send a message with the variable buttonClicked.\n   */\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n\n  /**\n   * A callback method that is invoked immediately after the default change detector has checked the directive's data-bound properties for the first time, and before any of the view or content children have been checked. It is invoked only once when the directive is instantiated.\n   */\n  ngOnInit(): void {\n\n  }\n}\n\n    \n\n    \n        \n   {{ name }} \n\n\n    \n\n    \n                \n                    ./start-button.component.scss\n                \n                .pushable_button {\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n}\n\n.caption_button {\n  display: block;\n  padding: 20px 50px;\n  border-radius: 12px;\n  border: 3px solid white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.7rem;\n  text-shadow: 1px 1px 2px #000000;\n  transform: translateY(-6px);\n}\n\n.caption_button:hover {\n  filter: brightness(90%);\n  color: #c7c7c7 !important;\n}\n\n\n.pushable_button:active .caption_button {\n  transform: translateY(-2px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ name }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title/title.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that create the title of the website and all the style that come with it, on the main menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pp-title\n            \n\n\n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that create the title of the website and all the style that come with it, on the main menu.\n */\n@Component({\n  selector: 'pp-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n}\n\n    \n\n    \n        \n  \n     {{ 'PLANNING' | translate }} \n     {{ 'PLANNING' | translate }} \n  \n  {{ 'POKER' | translate }}\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Mr+Dafoe&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@900&display=swap');\n\nh1 {\n  position: relative;\n  font-family: 'Exo', serif;\n  font-size: 11em;\n  margin: 0;\n  transform: skew(-15deg);\n  letter-spacing: 0.03em;\n\n  span:first-child {\n    display: block;\n    text-shadow: 0 0 0.1em #8ba2d0, 0 0 0.2em black, 0 0 5em #165ff3;\n    -webkit-text-stroke: 0.06em rgba(black, 0.5);\n  }\n\n  span:last-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-image: linear-gradient(#032d50 25%, #00a1ef 35%, white 50%, #20125f 50%, #8313e7 55%, #ff61af 75%);\n    -webkit-text-stroke: 0.01em #94a0b9;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\nh2 {\n  font-family: 'Mr Dafoe', serif;\n  font-size: 5.5em;\n  margin-left: 3em;\n  color: white;\n  text-shadow: 0 0 0.05em #fff, 0 0 0.2em #281775, 0 0 0.3em #20125f;\n  transform: rotate(-7deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{ \\'PLANNING\\' | translate }}      {{ \\'PLANNING\\' | translate }}     {{ \\'POKER\\' | translate }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'ShopComponentComponent', 'selector': 'shop-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/AverageDecorator.ts\n            \n            class\n            AverageDecorator\n            \n                97 %\n                (39/40)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/Game.ts\n            \n            interface\n            Game\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/GameConcret.ts\n            \n            class\n            GameConcret\n            \n                100 %\n                (29/29)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/MajabsDecorator.ts\n            \n            class\n            MajabsDecorator\n            \n                97 %\n                (38/39)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/ModeDecorator.ts\n            \n            class\n            ModeDecorator\n            \n                97 %\n                (39/40)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/StrictDecorator.ts\n            \n            class\n            StrictDecorator\n            \n                97 %\n                (38/39)\n            \n        \n        \n            \n                \n                src/app/classes/facade/HtmlDisplay.ts\n            \n            class\n            HtmlDisplay\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/classes/singleton/htmlBalise.ts\n            \n            class\n            HtmlBalise\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/game-component/game-component.component.ts\n            \n            component\n            GameComponentComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/components/information-button/information-button.component.ts\n            \n            component\n            InformationButtonComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/components/player-card/player-card.component.ts\n            \n            component\n            PlayerCardComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/settings-component/settings-component.component.ts\n            \n            component\n            SettingsComponentComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/components/shop-component/shop-component.component.ts\n            \n            component\n            ShopComponentComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/start-button/start-button.component.ts\n            \n            component\n            StartButtonComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/gameOptionService/game-option-service.service.ts\n            \n            injectable\n            GameOptionServiceService\n            \n                100 %\n                (4/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.7\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^17.0.7\n        \n            @angular/compiler : ^17.0.7\n        \n            @angular/core : ^17.0.7\n        \n            @angular/forms : ^17.0.7\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^17.0.7\n        \n            @angular/platform-browser-dynamic : ^17.0.7\n        \n            @angular/router : ^17.0.7\n        \n            @angular/upgrade : ^17.0.7\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeface-press-start-2p : ^1.1.13\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanningPokerPP\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nRaport\nDesign Pattern\nDecorator\nAfin de faire fonctioner notre projet nous avons utiliser le Design Pattern du decorateur\npour géré les différents mods de jeux. Ainsi nous avons une classe abstraite\nqui contient toutes les fonctions utils au bon déroulement du jeu, classe\nqui est dérivé en Jeu concret qui contient les variables utils au jeu\net en Mode qui contient les fonctions pour le déroulement du jeu\nce Mode est la classe mère de tous les Modes que nous avons implèmentés.\nPour simplifier l'implèmentation de balise HTML via le TypeScript nous avons\nutiliser le Design Pattern de la Facade.\nFacade\nCe Design Pattern nous permet d'implémenter facilement des balise HTML directement\ndepuis le TypeScript. Ainsi en une ligne nous pouvons implémenter une balise Input\navec des classes un identifiant ou d'autre variable intégrer et pour les insérer\nfacilement dans le code nous avons utiliser le Design Patterne Singleton\nSingleton\nCe Design Pattern n'ayant qu'une seule implémentation dans tous le code nous\npermet de récupérer facilement divers emplacement HTML de la page afin d'y\nplacer du code facilement.\nUnit Test\nPour les tests unitaires nous avons utiliser la bibliotèque Karma modifier\npar Jasmine, qui nous permet de faire des tests sur Angular.\nChaque Page est correctement tester afin de verifier que l'on peut l'importer\net nous testons les diférentes fonction de notre jeu prinipalement les Setters\net Getters afin de verifier leurs bons fonctionnements.\nVous pouves lancer les tests en lancant la commande ng test assurez\nvous d'avoir Chrome d'installer avant de lancer la commande\nDocumentation\nPour la doc nous utilisons Compodoc, que nous pouvons utiliser en lancant\nla commande npm run compodoc qui vous généreras la documentation et\nvou ouvrera un serveur sur lequel est présent toutes la doc.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_exports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nStartButtonComponent \n\nStartButtonComponent \n\nStartButtonComponent  -->\n\nAppModule->StartButtonComponent \n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        5 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
