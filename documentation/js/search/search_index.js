var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.295,1,0.75]],["body/components/AppComponent.html",[0,0.51,1,1.364,2,1.625,3,0.434,4,0.367,5,1.425,6,1.425,7,1.425,8,1.425,9,0.367,10,2.985,11,1.425,12,2.293,13,1.875,14,3.78,15,1.805,16,5.053,17,1.805,18,4.605,19,0.744,20,1.182,21,1.688,22,0.744,23,0.041,24,1.156,25,1.04,26,0.934,27,3.78,28,0.934,29,3.636,30,0.659,31,0.934,32,0.434,33,0.184,34,2.238,35,3.636,36,1.767,37,1.767,38,1.625,39,1.767,40,2.985,41,3.636,42,3.636,43,1.156,44,1.464,45,1.625,46,1.425,47,2.082,48,1.425,49,0.835,50,1.425,51,0.835,52,0.659,53,1.805,54,0.934,55,1.425,56,1.805,57,0.835,58,1.425,59,1.425,60,0.934,61,1.425,62,1.425,63,0.835,64,1.425,65,0.934,66,0.934,67,1.425,68,1.425,69,1.425,70,0.031,71,0.031]],["title/modules/AppModule.html",[72,1.796,73,1.796]],["body/modules/AppModule.html",[1,1.49,3,0.379,4,0.32,9,0.32,13,1.122,23,0.041,30,1.069,31,0.816,32,0.379,33,0.161,43,1.01,51,1.24,54,1.386,57,1.24,60,1.386,63,1.24,65,1.386,66,1.386,70,0.029,71,0.029,72,1.954,73,3.714,74,1.731,75,1.954,76,3.889,77,3.889,78,3.464,79,2.234,80,2.609,81,2.609,82,2.609,83,2.609,84,2.94,85,4.432,86,3.464,87,2.609,88,2.234,89,3.178,90,3.464,91,3.464,92,4.219,93,3.464,94,2.234,95,3.178,96,3.178,97,3.178,98,2.234,99,4.219,100,3.178,101,2.234,102,2.609,103,1.954,104,2.609,105,4.219,106,3.178,107,4.219,108,3.178,109,2.609,110,1.954,111,3.464,112,2.609,113,1.954,114,3.178,115,3.178,116,2.234,117,3.178,118,2.609,119,4.219,120,3.178]],["title/modules/AppRoutingModule.html",[72,1.796,84,1.59]],["body/modules/AppRoutingModule.html",[0,0.536,3,0.485,4,0.41,9,0.41,23,0.041,30,1.027,31,1.045,32,0.485,33,0.206,51,1.134,52,0.738,57,1.134,63,1.134,70,0.034,71,0.034,74,2.216,79,2.86,84,2.688,90,3.34,91,4.053,102,3.34,103,2.502,104,3.34,109,3.34,110,2.502,111,4.053,112,3.34,113,2.502,121,4.069,122,4.069,123,4.937,124,3.268,125,2.86,126,1.773,127,5.526,128,4.069,129,4.937,130,4.069,131,4.069,132,4.069,133,4.069]],["title/interfaces/Card.html",[134,1.59,135,1.59]],["body/interfaces/Card.html",[3,0.523,4,0.442,9,0.442,19,0.898,20,1.326,21,1.801,22,1.057,23,0.04,24,1.861,32,0.523,40,4.651,70,0.035,71,0.035,134,2.388,135,2.811,136,3.083,137,3.6,138,1.822]],["title/interfaces/Game.html",[52,0.53,134,1.59]],["body/interfaces/Game.html",[3,0.288,4,0.243,9,0.243,19,0.493,22,1.18,23,0.042,24,1.905,26,1.22,28,1.51,32,0.288,49,0.981,52,0.632,70,0.024,71,0.024,134,1.313,136,1.694,138,1.909,139,1.979,140,1.107,141,2.142,142,2.755,143,2.755,144,2.439,145,2.755,146,2.755,147,2.142,148,2.755,149,2.142,150,2.755,151,2.142,152,2.755,153,2.755,154,2.755,155,2.755,156,2.755,157,2.142,158,2.755,159,2.142,160,2.142,161,2.142,162,2.142,163,1.897,164,2.755,165,2.142,166,2.413,167,2.41,168,2.12,169,1.87,170,1.859,171,2.41,172,2.41,173,2.541,174,2.41,175,2.41,176,2.522,177,2.41,178,2.142,179,2.41,180,2.41,181,2.142,182,2.41,183,2.41,184,2.142,185,2.41,186,2.41,187,2.41,188,2.41,189,2.697,190,2.41,191,2.41,192,2.142,193,2.41,194,2.41,195,2.142,196,2.41,197,1.05,198,2.142,199,2.41,200,1.482,201,2.142,202,2.41,203,1.171,204,2.142,205,2.41,206,2.142,207,2.41,208,1.171,209,2.41,210,1.694]],["title/components/GameComponentComponent.html",[0,0.295,51,0.671]],["body/components/GameComponentComponent.html",[0,0.389,1,0.39,2,0.864,3,0.181,4,0.153,5,0.96,6,0.596,7,0.596,8,0.596,9,0.153,11,0.596,12,1.874,13,0.864,15,0.96,17,0.96,19,0.501,20,0.629,21,0.483,22,0.845,23,0.042,24,1.379,25,0.435,26,0.39,28,1.255,30,0.818,31,0.39,32,0.181,33,0.077,34,2.263,36,1.712,37,1.712,38,1.456,39,1.712,43,0.483,44,0.778,45,0.864,46,0.596,47,1.381,48,0.596,49,0.639,50,0.596,51,0.809,52,0.93,53,0.96,54,0.39,55,0.596,56,0.96,57,0.349,58,0.596,59,0.596,60,0.39,61,0.596,62,0.596,63,0.349,64,0.596,65,0.39,66,0.39,67,0.596,68,0.596,69,0.596,70,0.017,71,0.017,113,3.061,125,1.069,126,1.067,135,1.673,138,0.864,140,0.778,163,1.918,166,1.067,168,0.96,169,1.311,170,1.311,176,1.067,197,0.663,203,0.739,208,0.739,211,4.087,212,1.069,213,1.505,214,3.073,215,2.523,216,2.01,217,2.16,218,2.108,219,3.073,220,3.522,221,3.522,222,2.448,223,3.522,224,3.522,225,0.935,226,1.248,227,1.918,228,4.338,229,1.521,230,2.01,231,1.521,232,1.521,233,2.448,234,1.521,235,1.521,236,1.521,237,1.521,238,1.493,239,3.387,240,1.521,241,1.248,242,1.248,243,1.63,244,2.457,245,1.721,246,3.073,247,2.01,248,2.01,249,2.523,250,2.448,251,3.17,252,2.01,253,1.248,254,1.521,255,1.505,256,1.521,257,0.935,258,1.521,259,1.248,260,0.935,261,1.248,262,1.521,263,1.521,264,1.248,265,1.069,266,1.521,267,1.069,268,1.521,269,1.333,270,1.521,271,1.381,272,2.892,273,1.521,274,2.01,275,2.448,276,1.521,277,1.521,278,1.521,279,2.523,280,3.073,281,1.889,282,2.476,283,3.073,284,1.521,285,2.01,286,0.828,287,1.521,288,1.248,289,1.521,290,2.01,291,1.521,292,1.521,293,1.521,294,1.521,295,1.521,296,1.521,297,1.521,298,1.521,299,2.448,300,1.521,301,1.521,302,1.521,303,1.521,304,1.521,305,1.248,306,1.248,307,1.521,308,1.521,309,1.521,310,1.521,311,1.521,312,1.069,313,1.521,314,1.521,315,1.521,316,1.521,317,2.448,318,2.448,319,2.448,320,2.448,321,2.448,322,3.05,323,1.798,324,2.362,325,1.721,326,2.16,327,2.537,328,2.247,329,0.935,330,1.521,331,2.774,332,2.537,333,3.111,334,1.521,335,4.126,336,1.521,337,1.521,338,1.521,339,2.448,340,2.448,341,2.448,342,1.876,343,1.918,344,1.521,345,2.523,346,2.362,347,1.918,348,2.362,349,1.521,350,1.333,351,2.476,352,2.103,353,1.889,354,2.448,355,2.476,356,1.521,357,2.374,358,1.248,359,2.892,360,2.448,361,1.069,362,1.721,363,2.01,364,1.721,365,2.01,366,1.521,367,2.103,368,1.721,369,1.521,370,1.521,371,2.448,372,1.505,373,1.721,374,1.721,375,2.166,376,2.16,377,3.522,378,2.01,379,2.01,380,1.248,381,2.476,382,1.521,383,1.521,384,1.521,385,1.248,386,1.248,387,0.935,388,1.521,389,3.073,390,1.521,391,1.521,392,1.248,393,1.521,394,2.523,395,2.01,396,1.248,397,0.935,398,1.521,399,2.448,400,1.069,401,1.069,402,1.248,403,1.248,404,2.01,405,2.448,406,1.721,407,0.935,408,1.248,409,0.739,410,1.521,411,1.521,412,1.521,413,1.521,414,3.073,415,1.521,416,1.521,417,1.521,418,1.248,419,1.521,420,1.521,421,2.448,422,2.448,423,1.248,424,1.521]],["title/classes/GameConcret.html",[33,0.148,255,1.796]],["body/classes/GameConcret.html",[3,0.227,4,0.192,9,0.192,19,0.389,20,0.749,22,1.18,23,0.042,24,1.886,25,1.297,26,1.384,28,1.496,30,0.345,32,0.227,33,0.096,49,0.925,52,0.722,70,0.02,71,0.02,126,0.828,138,1.801,140,0.928,141,1.794,142,2.45,143,2.45,144,2.169,145,2.45,146,2.45,147,1.794,148,2.45,149,1.794,150,2.45,151,1.794,152,2.45,153,2.45,154,2.45,155,2.45,156,2.45,157,1.794,158,2.45,159,1.794,160,1.794,161,1.794,162,1.794,163,1.589,164,2.45,165,1.794,166,2.295,168,2,169,1.82,170,1.789,173,2.522,176,2.486,178,1.794,181,1.794,184,1.794,189,2.47,192,1.794,195,1.794,197,0.828,198,1.794,200,1.169,201,1.794,203,2.089,204,1.794,206,1.794,208,2.089,210,3.021,213,1.794,243,0.834,255,1.794,286,2.903,312,2.051,425,0.924,426,1.561,427,3.551,428,3.551,429,3.551,430,3.551,431,1.901,432,1.901,433,1.901,434,1.901,435,1.901,436,1.901,437,1.901,438,1.901,439,1.901,440,1.901,441,1.901,442,1.901,443,1.901,444,1.901,445,1.901,446,1.901,447,1.901,448,1.901,449,1.901,450,1.901,451,1.901,452,1.901,453,1.901,454,1.901,455,1.901,456,1.901,457,1.901,458,1.901,459,1.901,460,1.901,461,2.918,462,1.561,463,2.395,464,2.918,465,2.918,466,2.184,467,2.918,468,1.901,469,1.901,470,2.918,471,1.901,472,2.918,473,2.395]],["title/injectables/GameOptionServiceService.html",[227,1.59,474,1.796]],["body/injectables/GameOptionServiceService.html",[3,0.472,4,0.399,9,0.399,14,3.251,19,0.811,20,1.247,22,0.811,23,0.041,25,1.389,26,1.247,28,1.348,30,0.88,31,1.017,32,0.472,33,0.201,49,0.718,70,0.033,71,0.033,138,1.397,140,1.543,168,1.552,169,1.259,170,1.259,227,2.644,260,3.367,265,3.692,271,1.903,281,3.516,474,2.986,475,3.96,476,4.495,477,3.251,478,4.856,479,4.856,480,3.96,481,3.96,482,4.856,483,3.96,484,4.856,485,3.96,486,3.96,487,2.783,488,3.96,489,3.96]],["title/classes/HtmlBalise.html",[33,0.148,238,1.419]],["body/classes/HtmlBalise.html",[3,0.37,4,0.313,9,0.313,19,0.635,20,1.066,21,1.487,22,1.165,23,0.042,25,0.887,26,0.796,28,1.494,32,0.37,33,0.157,70,0.028,71,0.028,140,1.319,169,1.319,170,1.319,225,2.877,238,2.661,265,3.662,271,1.215,282,3.662,286,1.689,305,2.546,306,3.841,386,3.841,425,1.507,490,2.546,491,4.679,492,4.679,493,4.679,494,4.679,495,5.635,496,4.679,497,4.679,498,4.679,499,4.679,500,4.997,501,4.997,502,4.151,503,4.747,504,3.101,505,3.101,506,5.635,507,3.101,508,3.101,509,3.101,510,3.101,511,3.101,512,3.101,513,4.679,514,3.101,515,3.101,516,3.101,517,3.101,518,3.101,519,3.101,520,3.101,521,3.101,522,3.101,523,3.101,524,3.101,525,3.101,526,3.101,527,3.101,528,3.101,529,3.101,530,3.101,531,3.101,532,3.101,533,3.101,534,4.997]],["title/classes/HtmlDisplay.html",[33,0.148,218,1.419]],["body/classes/HtmlDisplay.html",[3,0.342,4,0.289,9,0.289,19,0.586,20,1.01,22,1.148,23,0.042,24,1.888,25,1.125,26,1.01,28,1.377,30,0.713,32,0.342,33,0.145,45,1.586,49,0.949,70,0.027,71,0.027,126,1.248,138,1.848,140,1.25,166,1.714,168,2.052,169,1.664,170,1.664,173,1.912,189,2.446,197,2.108,218,1.912,243,0.819,282,2.014,286,1.56,328,2.446,346,2.851,425,1.392,466,2.419,487,2.014,503,4.299,535,2.351,536,3.933,537,3.933,538,3.933,539,3.933,540,3.933,541,3.933,542,2.864,543,3.933,544,4.492,545,2.864,546,3.933,547,4.492,548,4.492,549,2.864,550,3.933,551,3.933,552,2.864,553,3.933,554,2.864,555,3.933,556,2.864,557,3.933,558,2.864,559,2.351,560,2.864,561,2.864,562,2.351,563,2.864,564,2.864,565,2.864,566,2.864,567,2.864,568,2.864,569,5.463,570,2.864,571,2.864,572,2.864,573,2.864,574,2.864,575,2.864,576,3.933]],["title/components/InformationButtonComponent.html",[0,0.295,54,0.75]],["body/components/InformationButtonComponent.html",[0,0.508,1,0.928,2,1.619,3,0.431,4,0.365,5,1.417,6,1.417,7,1.417,8,1.417,9,0.365,11,1.417,12,2.291,13,1.619,15,1.798,17,1.798,21,1.149,23,0.041,30,0.656,31,0.928,32,0.431,33,0.183,38,1.276,43,1.149,44,1.458,45,1.619,46,1.417,47,2.078,48,1.417,49,0.832,50,1.417,51,0.831,52,0.656,53,1.798,54,1.361,55,2.253,56,1.798,57,0.831,58,1.417,59,1.417,60,0.928,61,1.417,62,1.417,63,0.831,64,1.417,65,0.928,66,0.928,67,1.417,68,1.417,69,1.417,70,0.031,71,0.031,101,2.542,269,1.969,323,1.576,342,2.449,352,1.969,361,2.542,365,2.968,367,1.969,387,2.821,397,2.223,407,2.223,409,1.757,577,2.968,578,2.542,579,4.137,580,3.767,581,3.767,582,3.616,583,2.542,584,3.616,585,3.616,586,2.968]],["title/components/MainMenuComponent.html",[0,0.295,57,0.671]],["body/components/MainMenuComponent.html",[0,0.5,1,0.898,2,1.585,3,0.417,4,0.353,5,1.371,6,1.371,7,1.371,8,1.371,9,0.353,11,1.371,12,2.279,13,1.848,15,1.76,17,1.76,21,1.112,23,0.041,30,0.634,31,0.898,32,0.417,33,0.177,38,1.751,43,1.112,44,1.428,45,1.585,46,1.371,47,2.052,48,1.371,49,0.814,50,1.371,51,0.803,52,0.634,53,1.76,54,0.898,55,1.371,56,1.76,57,1.203,58,2.237,59,1.371,60,0.898,61,1.371,62,1.371,63,0.803,64,1.371,65,0.898,66,0.898,67,1.371,68,1.371,69,1.371,70,0.031,71,0.031,103,2.15,243,1,322,3.157,323,1.957,324,2.702,327,2.762,328,2.446,329,2.762,331,2.762,332,2.762,333,2.15,350,1.904,380,2.871,387,2.762,409,1.699,586,2.871,587,2.871,588,2.871,589,4.491,590,4.962,591,4.491,592,2.15,593,3.497,594,2.871,595,2.871,596,3.497,597,2.15,598,2.458,599,3.497,600,2.871]],["title/classes/ModeDecorator.html",[33,0.148,601,1.796]],["body/classes/ModeDecorator.html",[3,0.174,4,0.147,9,0.147,19,0.704,20,0.608,22,1.135,23,0.042,24,1.843,25,0.983,26,1.361,28,1.472,30,0.542,32,0.174,33,0.074,44,0.949,49,0.921,52,0.921,70,0.016,71,0.016,126,2.001,138,1.792,140,0.752,141,1.455,142,2.113,143,2.113,144,1.872,145,1.836,146,1.836,147,1.455,148,1.836,149,1.455,150,2.113,151,1.455,152,1.836,153,2.113,154,2.113,155,2.113,156,2.113,157,1.455,158,1.836,159,1.455,160,1.455,161,1.455,162,1.455,163,1.289,164,2.113,165,1.455,166,2.241,168,1.99,169,1.791,170,1.744,173,2.158,176,2.29,178,1.455,181,1.455,184,0.897,189,2.204,192,1.455,195,0.897,197,1.031,198,1.455,200,1.455,201,1.455,203,0.709,204,1.455,206,1.455,208,1.451,210,2.1,213,1.455,217,2.997,218,1.67,225,0.897,238,0.709,239,3.962,243,0.983,244,1.626,252,1.197,267,2.997,269,1.626,271,0.572,272,1.197,281,0.897,285,1.197,286,2.68,312,2.997,324,0.794,394,1.197,425,0.709,466,2.622,601,1.455,602,1.197,603,2.452,604,2.452,605,2.845,606,2.452,607,1.943,608,2.822,609,1.943,610,2.822,611,1.943,612,2.367,613,2.367,614,1.458,615,1.458,616,1.458,617,1.458,618,1.458,619,1.458,620,1.197,621,1.458,622,1.943,623,1.458,624,1.458,625,1.458,626,1.458,627,1.458,628,1.458,629,1.458,630,1.458,631,1.458,632,1.458,633,1.458,634,1.458,635,1.458,636,1.458,637,1.458,638,1.458,639,1.458,640,1.458,641,1.197,642,1.458,643,1.458,644,1.943,645,1.458,646,1.197,647,1.458,648,1.458,649,1.458,650,1.458,651,1.458,652,1.458,653,1.197,654,1.458,655,1.458,656,1.458,657,1.458,658,1.458,659,2.367,660,1.458,661,1.458,662,2.367,663,2.113,664,1.458,665,2.987,666,1.458,667,1.458,668,3.437,669,3.437,670,1.458,671,2.987,672,2.367,673,2.367,674,2.367,675,2.367,676,2.987,677,1.458,678,3.437,679,2.367,680,1.458,681,2.367,682,1.458,683,1.458,684,1.458,685,1.458,686,1.458,687,1.458,688,2.367,689,2.367,690,3.437,691,1.197,692,3.437,693,2.367,694,2.987,695,1.458,696,2.367,697,1.458,698,2.367,699,1.458,700,1.458,701,1.458,702,1.458,703,1.458,704,1.458,705,1.458,706,1.458,707,2.367,708,1.458,709,1.458,710,1.458,711,1.458,712,1.458,713,1.458,714,2.367,715,2.367,716,1.458,717,1.458,718,2.367,719,1.458,720,1.458,721,1.458,722,1.458,723,1.458,724,1.458,725,1.458,726,1.458,727,1.458,728,1.458,729,1.458,730,1.458,731,1.458,732,1.458,733,2.367,734,1.458,735,1.458,736,1.458,737,2.367,738,1.458,739,1.458,740,1.458,741,2.367,742,1.458,743,1.458,744,1.458]],["title/components/PlayerCardComponent.html",[0,0.295,60,0.75]],["body/components/PlayerCardComponent.html",[0,0.457,1,0.747,2,1.403,3,0.347,4,0.293,5,1.14,6,1.14,7,1.14,8,1.14,9,0.293,11,1.14,12,2.204,13,1.403,15,1.558,17,1.558,19,0.595,21,0.924,22,0.595,23,0.041,25,0.832,26,0.747,28,0.747,30,0.527,31,0.747,32,0.347,33,0.147,34,2.365,36,1.931,37,1.931,38,1.598,39,1.931,43,0.924,44,1.263,45,1.403,46,1.14,47,1.907,48,1.14,49,0.721,50,1.14,51,0.668,52,0.527,53,1.558,54,0.747,55,1.14,56,1.558,57,0.668,58,1.14,59,1.14,60,1.249,61,2.204,62,1.14,63,0.668,64,1.14,65,0.747,66,0.747,67,1.14,68,1.14,69,1.14,70,0.027,71,0.027,116,2.794,135,2.65,176,1.732,243,1.701,323,1.267,324,2.164,325,2.044,326,2.044,327,1.788,328,1.583,329,1.788,331,1.788,332,1.788,333,1.788,342,1.931,343,2.164,346,1.583,347,2.164,348,2.466,350,2.164,351,2.044,352,2.775,353,2.444,357,2.444,359,4.183,364,3.183,367,2.466,368,2.044,372,2.784,373,2.044,375,2.992,376,3.183,381,2.044,396,3.263,403,3.263,404,2.387,407,1.788,592,2.784,598,2.044,600,2.387,745,3.263,746,2.387,747,4.528,748,3.974,749,3.263,750,2.908,751,2.908,752,2.908,753,2.044,754,2.908,755,2.908,756,2.908,757,2.908,758,2.908,759,2.387,760,2.908,761,2.908,762,3.974,763,2.908,764,2.908,765,2.387,766,2.908,767,2.908,768,2.908,769,2.908,770,2.908,771,2.908,772,2.908,773,2.908,774,2.908,775,2.387]],["title/components/SettingsComponentComponent.html",[0,0.295,63,0.671]],["body/components/SettingsComponentComponent.html",[0,0.379,1,0.37,2,0.828,3,0.172,4,0.146,5,0.565,6,0.565,7,0.565,8,0.565,9,0.299,11,0.565,12,1.843,13,0.828,15,0.92,17,0.92,19,0.769,20,0.602,21,0.459,22,1.062,23,0.042,24,1.454,25,1.403,26,1.26,28,1.3,30,0.425,31,0.37,32,0.172,33,0.073,34,1.826,36,1.441,37,1.441,38,1.205,39,1.441,43,0.459,44,0.746,45,0.828,46,0.565,47,1.339,48,0.565,49,0.802,50,0.565,51,0.332,52,0.619,53,0.92,54,0.37,55,0.565,56,0.92,57,0.332,58,0.565,59,0.565,60,0.37,61,0.92,62,0.565,63,0.785,64,1.734,65,0.37,66,0.37,67,0.565,68,0.565,69,0.565,70,0.016,71,0.016,110,3.154,126,2.097,138,1.326,140,0.746,166,1.023,168,1.473,169,1.195,170,1.195,173,1.14,176,1.928,197,0.629,203,1.441,208,1.957,212,1.014,215,2.434,216,1.926,225,0.887,226,1.184,227,1.86,230,1.926,241,1.184,242,1.184,243,1.526,244,2.046,245,1.649,249,1.926,251,3.949,253,1.184,259,1.184,260,0.887,261,1.184,264,1.184,269,1.278,271,0.565,274,2.804,279,3.085,281,1.823,288,3.085,290,1.184,322,3.382,323,2.175,324,2.927,325,3.215,326,2.642,327,2.61,328,2.49,329,0.887,331,2.72,332,2.476,333,3.068,342,1.957,343,1.278,345,2.804,347,1.615,348,1.278,350,1.615,351,2.642,352,2.193,353,1.823,355,2.084,362,1.014,367,1.615,372,1.443,373,1.649,374,1.014,375,1.823,376,1.014,378,1.926,381,3.305,385,1.926,397,1.823,400,2.984,401,2.084,402,1.926,406,2.642,407,0.887,408,1.926,409,1.66,462,1.184,463,1.184,559,1.184,583,2.084,592,0.887,594,1.184,597,0.887,598,2.642,605,2.084,663,1.823,753,1.649,759,1.184,775,1.926,776,4.212,777,2.965,778,3.758,779,2.965,780,2.965,781,2.346,782,2.346,783,2.346,784,2.346,785,3.416,786,1.443,787,1.443,788,1.443,789,3.416,790,2.346,791,1.443,792,1.443,793,2.346,794,1.443,795,1.443,796,1.443,797,1.443,798,1.443,799,1.443,800,2.346,801,1.443,802,1.443,803,2.346,804,1.443,805,1.443,806,2.965,807,1.443,808,1.443,809,1.443,810,1.443,811,1.443,812,1.443,813,1.443,814,1.443,815,2.346,816,1.443,817,1.443,818,1.443,819,1.443,820,1.443,821,1.443,822,1.443,823,1.443,824,2.346,825,1.443,826,1.443,827,1.443,828,3.758,829,1.443,830,1.443,831,2.346,832,1.443,833,1.443,834,1.443,835,1.443,836,1.443,837,1.443,838,1.443,839,1.443,840,2.346,841,1.443,842,1.443,843,1.443,844,1.443,845,1.443,846,1.443,847,1.443,848,1.443,849,1.443,850,2.346,851,3.306,852,2.346,853,2.346,854,2.346,855,1.443,856,1.443,857,1.443,858,1.443,859,2.346,860,1.443,861,1.443,862,1.443,863,2.346,864,1.443,865,1.443,866,1.443,867,1.443,868,2.346,869,1.443,870,1.443,871,1.443,872,2.346,873,1.443,874,1.443,875,1.443,876,1.184,877,1.443,878,2.804,879,2.346,880,1.443,881,1.443,882,1.443,883,4.245,884,1.443,885,2.965,886,1.443,887,1.443,888,2.346,889,1.184,890,1.443,891,2.346,892,2.346,893,1.443,894,1.443,895,1.443,896,1.443,897,1.443,898,1.443,899,1.443,900,1.443,901,1.443,902,1.443,903,1.443,904,1.443,905,1.443]],["title/components/StartButtonComponent.html",[0,0.295,65,0.75]],["body/components/StartButtonComponent.html",[0,0.414,1,0.624,2,1.236,3,0.29,4,0.245,5,0.952,6,0.952,7,0.952,8,0.952,9,0.245,11,0.952,12,2.123,13,1.236,15,1.373,17,1.373,19,0.497,21,0.772,22,1.109,23,0.042,24,1.722,25,1.363,26,1.224,28,1.314,30,0.44,31,0.624,32,0.29,33,0.123,34,1.702,36,1.18,37,1.18,38,1.883,39,1.18,43,0.772,44,1.113,45,1.236,46,0.952,47,1.762,48,0.952,49,0.928,50,0.952,51,0.558,52,0.44,53,1.373,54,0.624,55,0.952,56,1.373,57,0.558,58,0.952,59,0.952,60,0.624,61,0.952,62,0.952,63,0.558,64,0.952,65,1.154,66,0.624,67,0.952,68,0.952,69,0.952,70,0.024,71,0.024,98,3.683,140,1.113,169,0.772,170,0.772,243,0.695,269,1.322,271,0.952,323,1.058,342,1.18,343,1.322,346,1.322,347,1.322,348,1.322,350,1.907,352,2.448,353,2.153,357,1.493,358,1.994,364,2.462,372,1.493,374,2.462,387,2.153,392,1.994,395,1.994,397,1.493,409,1.702,418,1.994,578,1.707,579,3.372,580,2.875,583,1.707,592,3.053,663,1.493,749,2.875,876,1.994,889,1.994,906,4.3,907,4.496,908,4.107,909,4.107,910,4.107,911,4.107,912,3.502,913,4.107,914,2.429,915,5.239,916,4.496,917,4.496,918,4.496,919,5.418,920,4.496,921,4.496,922,3.502,923,4.496,924,4.496,925,4.496,926,4.496,927,4.496,928,4.496,929,4.496,930,4.496,931,2.429,932,2.429,933,2.429,934,2.429,935,3.502,936,3.502,937,4.107,938,2.429,939,2.429,940,3.502,941,2.429,942,2.429,943,3.502,944,2.429,945,2.429,946,2.429,947,3.502,948,2.429,949,2.429,950,3.502,951,2.429,952,2.429,953,2.429,954,2.429]],["title/classes/StrictDecorator.html",[33,0.148,257,1.796]],["body/classes/StrictDecorator.html",[3,0.247,4,0.209,9,0.209,19,0.424,20,0.799,22,1.184,23,0.041,24,1.833,25,1.07,26,1.249,28,1.52,30,0.564,32,0.247,33,0.105,44,0.989,49,0.984,52,0.678,70,0.021,71,0.021,126,0.902,138,1.915,140,0.989,141,1.914,142,2.3,143,2.3,144,2.037,145,2.3,146,2.3,147,1.914,148,2.3,149,1.914,150,2.3,151,1.914,152,2.3,153,2.3,154,2.3,155,2.3,156,2.3,157,1.914,158,2.3,159,1.914,160,1.914,161,1.914,162,1.914,163,1.695,164,2.3,165,1.272,166,2.12,168,2.127,169,1.864,170,1.77,173,2.432,176,2.273,178,1.272,181,1.272,184,1.272,189,2.037,192,1.272,195,1.272,197,0.902,198,1.272,200,1.272,201,1.272,203,1.006,204,1.272,206,1.272,208,1.006,217,1.455,218,1.006,238,1.006,243,0.592,244,1.127,257,1.914,267,1.455,379,1.699,425,1.006,466,1.914,601,3.663,603,2.555,604,2.555,605,2.925,606,2.555,607,2.555,608,3.416,609,2.555,610,3.071,611,2.555,620,1.699,622,2.555,641,1.699,644,1.699,646,1.699,653,1.699,691,1.699,955,1.699,956,3.112,957,5.922,958,2.069,959,2.069,960,2.069,961,2.069,962,2.069,963,2.069,964,2.069,965,2.069,966,2.069,967,2.069,968,2.069,969,2.069,970,2.069,971,2.069,972,2.069,973,2.069,974,2.069,975,2.069,976,2.069,977,2.069,978,2.069,979,2.069,980,2.069,981,2.069,982,2.069,983,2.069,984,2.069,985,2.069,986,2.069,987,2.069,988,2.069,989,2.069,990,2.069,991,2.069,992,2.069,993,2.069,994,3.741,995,3.112,996,2.069,997,2.069,998,3.112,999,2.069]],["title/components/TitleComponent.html",[0,0.295,66,0.75]],["body/components/TitleComponent.html",[0,0.469,1,0.786,2,1.452,3,0.365,4,0.309,5,1.2,6,1.2,7,1.2,8,1.2,9,0.309,11,1.2,12,2.226,13,1.452,15,1.613,17,1.613,21,1.478,23,0.041,30,0.843,31,0.786,32,0.365,33,0.155,34,2.416,36,2,38,1.08,43,0.973,44,1.308,45,1.452,46,1.2,47,1.948,48,1.2,49,0.746,50,1.2,51,0.703,52,0.555,53,1.613,54,0.786,55,1.2,56,1.613,57,0.703,58,1.2,59,1.2,60,0.786,61,1.2,62,1.2,63,0.703,64,1.2,65,0.786,66,1.276,67,1.822,68,1.2,69,1.2,70,0.028,71,0.028,243,1.677,323,1.334,342,2,343,2.241,346,2.908,347,2.241,348,2.241,355,2.893,357,2.53,361,2.152,362,3.494,363,3.378,367,2.241,368,2.152,375,1.882,400,2.893,401,2.152,406,2.152,409,2,423,2.513,595,2.513,597,1.882,663,1.882,753,2.893,765,2.513,851,2.513,878,3.378,1000,2.513,1001,4.649,1002,4.115,1003,4.971,1004,4.115,1005,3.061,1006,3.061,1007,3.061,1008,3.061,1009,3.061,1010,3.061,1011,3.061,1012,3.061,1013,3.061,1014,3.061,1015,4.115,1016,3.061,1017,3.061,1018,4.115,1019,3.061,1020,3.061,1021,3.061,1022,3.061,1023,3.061,1024,3.061,1025,3.061,1026,3.061,1027,3.061,1028,3.061,1029,4.115,1030,3.061,1031,3.061,1032,3.061,1033,3.061,1034,3.061,1035,3.061,1036,3.061,1037,3.061,1038,3.061,1039,3.061,1040,3.061,1041,3.061,1042,3.061,1043,3.061,1044,3.061,1045,3.061,1046,3.061]],["title/coverage.html",[1047,3.272]],["body/coverage.html",[0,0.581,1,0.943,9,0.37,10,3.014,22,0.752,23,0.041,33,0.279,51,0.843,52,0.666,54,0.943,57,0.843,60,0.943,63,0.843,65,0.943,66,0.943,70,0.032,71,0.032,98,2.581,101,2.581,103,2.257,110,2.257,113,2.257,116,2.581,134,2.523,135,1.999,137,3.014,139,3.014,211,3.014,212,3.257,218,1.784,227,1.999,238,1.784,243,1.714,255,2.257,257,2.257,260,2.257,271,1.439,426,3.014,474,2.257,476,3.014,477,3.014,490,3.014,535,3.014,577,3.014,578,3.257,587,3.014,588,3.014,597,2.257,601,2.257,602,3.014,745,3.014,746,3.014,776,3.014,906,3.014,955,3.014,1000,3.014,1047,3.014,1048,3.671,1049,3.671,1050,3.671,1051,4.633,1052,3.671,1053,3.671,1054,3.671,1055,3.671,1056,3.671,1057,3.671,1058,3.671,1059,5.076,1060,3.671,1061,3.671,1062,3.671,1063,3.671,1064,3.671,1065,3.671]],["title/dependencies.html",[75,2.16,1066,1.714]],["body/dependencies.html",[23,0.041,31,1.089,37,2.06,38,1.496,39,2.06,70,0.034,71,0.034,75,2.607,93,4.155,94,3.558,118,3.481,125,2.981,487,2.981,1067,4.24,1068,5.988,1069,4.24,1070,4.24,1071,4.24,1072,4.24,1073,4.24,1074,4.24,1075,4.24,1076,4.24,1077,4.24,1078,4.24,1079,4.24,1080,4.24]],["title/index.html",[19,0.499,1081,2.439,1082,2.439]],["body/index.html",[0,0.52,4,0.383,23,0.032,27,3.115,49,0.688,70,0.032,71,0.032,88,2.668,144,3.082,213,2.333,271,1.487,473,3.115,562,4.23,581,4.23,1066,2.668,1083,4.73,1084,3.795,1085,5.153,1086,3.115,1087,3.795,1088,3.795,1089,4.73,1090,5.55,1091,5.74,1092,3.795,1093,3.795,1094,3.795,1095,3.795,1096,3.795,1097,3.795,1098,3.795,1099,3.795,1100,3.795,1101,3.795,1102,3.795,1103,5.153,1104,5.153,1105,3.795,1106,5.394,1107,3.795,1108,3.795,1109,3.795,1110,3.795,1111,4.73,1112,4.73,1113,5.394,1114,4.73,1115,4.73,1116,3.795,1117,3.795,1118,3.795,1119,3.795,1120,4.73,1121,3.795,1122,3.795,1123,3.795,1124,3.795,1125,3.795,1126,3.795,1127,3.795,1128,3.795,1129,3.795,1130,2.668,1131,3.795,1132,3.795]],["title/modules.html",[74,2.17]],["body/modules.html",[23,0.036,70,0.036,71,0.036,73,2.853,74,2.527,84,2.527,94,3.262,1133,4.64,1134,4.64,1135,5.336,1136,4.64,1137,4.64]],["title/overview.html",[1130,2.802]],["body/overview.html",[1,1.477,2,1.355,23,0.041,43,1.221,51,1.19,54,1.33,57,1.19,60,1.33,63,1.19,65,1.33,66,1.33,70,0.032,71,0.032,72,2.361,73,3.755,74,2.091,75,2.361,76,3.153,77,3.153,78,3.153,79,2.7,80,3.153,81,3.153,82,3.153,83,3.153,84,2.821,85,4.253,86,3.912,87,3.153,88,2.7,124,2.361,136,2.7,244,2.091,245,3.35,247,3.153,248,3.153,425,1.866,474,2.361,1130,2.7,1138,3.84]],["title/properties.html",[20,0.902,1066,1.714]],["body/properties.html",[20,1.209,23,0.038,70,0.037,71,0.037,1086,3.866,1139,4.709]],["title/routes.html",[124,2.451]],["body/routes.html",[23,0.037,70,0.037,71,0.037,124,2.917]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":243,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1139,"title":{},"body":{"properties.html":{}}}],["0.01em",{"_index":1033,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.03em",{"_index":1013,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.05em",{"_index":1042,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.06em",{"_index":1022,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.13.3",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["0.1em",{"_index":1016,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.1px",{"_index":416,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.2em",{"_index":1018,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.2px",{"_index":417,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["0.35",{"_index":764,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.350s",{"_index":893,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.3em",{"_index":1044,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.3rem",{"_index":396,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.3s",{"_index":404,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0.5",{"_index":1024,"title":{},"body":{"components/TitleComponent.html":{}}}],["0.5em",{"_index":774,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.5px",{"_index":901,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.8em",{"_index":900,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["0.8rem",{"_index":754,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0.8s",{"_index":756,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["0/1",{"_index":1059,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1058,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1057,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1060,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1051,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":1052,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1053,"title":{},"body":{"coverage.html":{}}}],["0/35",{"_index":1055,"title":{},"body":{"coverage.html":{}}}],["0/36",{"_index":1054,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1056,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":949,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["001546",{"_index":773,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["00a1ef",{"_index":423,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["0fa",{"_index":359,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["0px",{"_index":762,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1",{"_index":244,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{},"overview.html":{}}}],["1).tostring().padstart(2",{"_index":741,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["1,2",{"_index":803,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.1.13",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["1.2em",{"_index":772,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["1.2px",{"_index":371,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.4em",{"_index":867,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1.5em",{"_index":349,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1.7rem",{"_index":948,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["1.8em",{"_index":383,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1/2",{"_index":344,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["10",{"_index":290,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["100",{"_index":251,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["1000",{"_index":996,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["102px",{"_index":770,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["10px",{"_index":351,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["1125a4",{"_index":903,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["11em",{"_index":1008,"title":{},"body":{"components/TitleComponent.html":{}}}],["120px",{"_index":360,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["12px",{"_index":943,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["13px",{"_index":880,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15",{"_index":800,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["15.0.1",{"_index":1087,"title":{},"body":{"index.html":{}}}],["150px",{"_index":388,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["151px",{"_index":771,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["15deg",{"_index":1010,"title":{},"body":{"components/TitleComponent.html":{}}}],["15px",{"_index":598,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["16.2.12",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":760,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["165ff3",{"_index":1021,"title":{},"body":{"components/TitleComponent.html":{}}}],["170",{"_index":415,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1b35d3",{"_index":899,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["1em",{"_index":366,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1fr",{"_index":338,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["1px",{"_index":364,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["2",{"_index":245,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":354,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2/8",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":249,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["200px",{"_index":424,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["20125f",{"_index":1029,"title":{},"body":{"components/TitleComponent.html":{}}}],["20px",{"_index":358,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["210px",{"_index":389,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["21px",{"_index":766,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["25",{"_index":597,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["255",{"_index":414,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["25px",{"_index":378,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["281775",{"_index":1043,"title":{},"body":{"components/TitleComponent.html":{}}}],["2em",{"_index":370,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["2p",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["2px",{"_index":374,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["3",{"_index":246,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["3.2em",{"_index":420,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30",{"_index":356,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["30px",{"_index":385,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["3146d3",{"_index":584,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["3351ff",{"_index":875,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["35",{"_index":1028,"title":{},"body":{"components/TitleComponent.html":{}}}],["35px",{"_index":599,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["3em",{"_index":1041,"title":{},"body":{"components/TitleComponent.html":{}}}],["3px",{"_index":889,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["4",{"_index":1138,"title":{},"body":{"overview.html":{}}}],["40",{"_index":250,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["40px",{"_index":874,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["42px",{"_index":767,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["4px",{"_index":946,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["5",{"_index":247,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["5.5em",{"_index":1040,"title":{},"body":{"components/TitleComponent.html":{}}}],["50",{"_index":753,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["50px",{"_index":395,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["55",{"_index":595,"title":{},"body":{"components/MainMenuComponent.html":{},"components/TitleComponent.html":{}}}],["5em",{"_index":1020,"title":{},"body":{"components/TitleComponent.html":{}}}],["5px",{"_index":775,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["60",{"_index":896,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["6px",{"_index":418,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["7.5.0",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1032,"title":{},"body":{"components/TitleComponent.html":{}}}],["7deg",{"_index":1046,"title":{},"body":{"components/TitleComponent.html":{}}}],["7px",{"_index":376,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["8",{"_index":248,"title":{},"body":{"components/GameComponentComponent.html":{},"overview.html":{}}}],["80",{"_index":859,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["800px",{"_index":382,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["80px",{"_index":380,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{}}}],["82",{"_index":857,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["82px",{"_index":768,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["8313e7",{"_index":1030,"title":{},"body":{"components/TitleComponent.html":{}}}],["8ba2d0",{"_index":1017,"title":{},"body":{"components/TitleComponent.html":{}}}],["92px",{"_index":769,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["94a0b9",{"_index":1034,"title":{},"body":{"components/TitleComponent.html":{}}}],["95",{"_index":391,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["absolute",{"_index":851,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["abstract",{"_index":654,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["active",{"_index":408,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["actual_component",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["actualfunctioninbacklog",{"_index":427,"title":{},"body":{"classes/GameConcret.html":{}}}],["actualplayerturn",{"_index":603,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["actualstage",{"_index":675,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["actualtask",{"_index":341,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["add",{"_index":1123,"title":{},"body":{"index.html":{}}}],["addclass",{"_index":536,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addclass(id",{"_index":543,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement",{"_index":537,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addhtmlelement(type",{"_index":546,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue",{"_index":547,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["additionalvalue[key",{"_index":571,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addnote",{"_index":141,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["addnote(value",{"_index":165,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["addplayername",{"_index":781,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addplayername(event",{"_index":787,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["addtext",{"_index":538,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["addtext(text",{"_index":551,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["afterviewinit",{"_index":214,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["agree",{"_index":722,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["align",{"_index":331,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["angular",{"_index":562,"title":{},"body":{"classes/HtmlDisplay.html":{},"index.html":{}}}],["angular/animations",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["angular/material/icon",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"dependencies.html":{}}}],["angular/src/tools/esbuild/javascript",{"_index":564,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["animation",{"_index":891,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["app.component",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":884,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["application",{"_index":1096,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":84,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["around",{"_index":330,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["artifacts",{"_index":1107,"title":{},"body":{"index.html":{}}}],["auto",{"_index":399,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["automatically",{"_index":1097,"title":{},"body":{"index.html":{}}}],["autre",{"_index":929,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["available",{"_index":1137,"title":{},"body":{"modules.html":{}}}],["average",{"_index":853,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["b0b0b0",{"_index":761,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["background",{"_index":367,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["background.jpg",{"_index":752,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["backlog",{"_index":735,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["backlogdata",{"_index":203,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["backlogdata[\"boutton",{"_index":299,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["backlogdata[data[key",{"_index":298,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["balise",{"_index":217,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["balise.finishbutton.style.display",{"_index":729,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.inputvalue.style.display",{"_index":662,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.playerbutton.style.display",{"_index":681,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.validatebutton.name",{"_index":719,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["balise.validatebutton.style.display",{"_index":718,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["behaviorsubject",{"_index":486,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["behaviorsubject(null",{"_index":482,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["between",{"_index":600,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{}}}],["black",{"_index":1019,"title":{},"body":{"components/TitleComponent.html":{}}}],["block",{"_index":663,"title":{},"body":{"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["boolean",{"_index":189,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["bootstrap",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":352,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["bottom_input",{"_index":868,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["bouton",{"_index":924,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["box",{"_index":373,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["brightness(0.8",{"_index":393,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["brightness(90",{"_index":952,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["browse",{"_index":1135,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["bsetupdefaultvalue",{"_index":428,"title":{},"body":{"classes/GameConcret.html":{}}}],["build",{"_index":1106,"title":{},"body":{"index.html":{}}}],["button",{"_index":387,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/StartButtonComponent.html":{}}}],["button'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["button.component",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":580,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.scss",{"_index":579,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{}}}],["button.component.ts",{"_index":578,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:13",{"_index":934,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:18",{"_index":914,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:19",{"_index":931,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:20",{"_index":933,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:21",{"_index":932,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:23",{"_index":938,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button.component.ts:26",{"_index":939,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["button/information",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["button/start",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"components/StartButtonComponent.html":{},"coverage.html":{}}}],["button_icon",{"_index":412,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["button_label",{"_index":411,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["buttonclicked",{"_index":913,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["c7c7c7",{"_index":953,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["ca",{"_index":318,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["cafe",{"_index":252,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["calc(50",{"_index":879,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["capabilities",{"_index":1125,"title":{},"body":{"index.html":{}}}],["caption_button",{"_index":947,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["caption_button:hover",{"_index":951,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captionbackground",{"_index":908,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["captioncolor",{"_index":909,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["card",{"_index":135,"title":{"interfaces/Card.html":{}},"body":{"interfaces/Card.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["card.component",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":748,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.scss",{"_index":747,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card.component.ts",{"_index":746,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:9",{"_index":750,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["card/player",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["center",{"_index":333,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["change",{"_index":1099,"title":{},"body":{"index.html":{}}}],["changemod",{"_index":782,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changemod(event",{"_index":790,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["changer",{"_index":920,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["check",{"_index":1129,"title":{},"body":{"index.html":{}}}],["child",{"_index":1015,"title":{},"body":{"components/TitleComponent.html":{}}}],["choice",{"_index":1119,"title":{},"body":{"index.html":{}}}],["choose",{"_index":660,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["choosedefaultvalue",{"_index":142,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["chose",{"_index":854,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["circle",{"_index":888,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["class",{"_index":33,"title":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["classe",{"_index":544,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["classes",{"_index":425,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"overview.html":{}}}],["classes/decorateur/game",{"_index":254,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/gameconcret",{"_index":256,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/decorateur/strictdecorator",{"_index":258,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/facade/htmldisplay",{"_index":262,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["classes/singleton/htmlbalise",{"_index":263,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["clearhtml",{"_index":539,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearhtml(element",{"_index":553,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["clearinstance",{"_index":500,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["cli",{"_index":1085,"title":{},"body":{"index.html":{}}}],["clip",{"_index":1035,"title":{},"body":{"components/TitleComponent.html":{}}}],["closebalise",{"_index":548,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["cluster_appmodule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1101,"title":{},"body":{"index.html":{}}}],["coffeeselected",{"_index":607,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["coffeeselected(playername",{"_index":620,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["color",{"_index":342,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["column",{"_index":326,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["columns",{"_index":336,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["command",{"_index":1120,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"index.html":{}}}],["component'},{'name",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["component.component",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["component.component.html",{"_index":216,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.scss",{"_index":215,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts",{"_index":212,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component.component.ts:12",{"_index":798,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:14",{"_index":796,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:15",{"_index":229,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:16",{"_index":801,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:18",{"_index":799,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:20",{"_index":241,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:21",{"_index":802,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:22",{"_index":242,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:24",{"_index":253,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["component.component.ts:26",{"_index":240,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:28",{"_index":232,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:32",{"_index":788,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:42",{"_index":791,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:45",{"_index":231,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:47",{"_index":794,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:59",{"_index":236,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:70",{"_index":795,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:77",{"_index":235,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:87",{"_index":797,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:9",{"_index":786,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["component.component.ts:94",{"_index":234,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component.component.ts:98",{"_index":237,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["component/game",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"coverage.html":{}}}],["component/settings",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["components/game",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/information",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/player",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["components/settings",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/start",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["components/title/title.component",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["composant",{"_index":930,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["connect",{"_index":560,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console",{"_index":778,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(\"aa",{"_index":574,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["console.log(\"test",{"_index":838,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(actualstage",{"_index":677,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["console.log(this.backlogdata",{"_index":836,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.getbacklogdata",{"_index":658,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["console.log(this.html.content",{"_index":664,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["console.log(this.mode",{"_index":816,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["console.log(this.players",{"_index":462,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["const",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["constructor",{"_index":225,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor(dataservice",{"_index":226,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["constructor(game",{"_index":612,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["constructor(private",{"_index":264,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["container",{"_index":321,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["container_button",{"_index":593,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["container_info",{"_index":596,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["content",{"_index":328,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["couleur",{"_index":921,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["coverage",{"_index":1047,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creatanddownloadjson",{"_index":143,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["cursor",{"_index":397,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["d'un",{"_index":923,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["d000ff",{"_index":377,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["dafoe",{"_index":1039,"title":{},"body":{"components/TitleComponent.html":{}}}],["dans",{"_index":927,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["data",{"_index":281,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{}}}],["data[key",{"_index":285,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["dataservice",{"_index":230,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["de",{"_index":919,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["declarations",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["defaultvalue",{"_index":429,"title":{},"body":{"classes/GameConcret.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["dependencies",{"_index":75,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dessous",{"_index":936,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["dev",{"_index":1093,"title":{},"body":{"index.html":{}}}],["development",{"_index":1088,"title":{},"body":{"index.html":{}}}],["devkit/build",{"_index":563,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["direction",{"_index":325,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1105,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1110,"title":{},"body":{"index.html":{}}}],["display",{"_index":323,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["displayhtml",{"_index":540,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["displayhtml(element",{"_index":555,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["dist",{"_index":1109,"title":{},"body":{"index.html":{}}}],["div",{"_index":550,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["document.getelementbyid(\"actualtask",{"_index":520,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"endmessage",{"_index":522,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"finishbutton",{"_index":530,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"gamemodemessage",{"_index":532,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"playerbutton",{"_index":526,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"stage1",{"_index":305,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"standarvalue",{"_index":518,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"texttoshow",{"_index":524,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(\"validatebutton",{"_index":528,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["document.getelementbyid(id",{"_index":572,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["documentation",{"_index":1048,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["don't",{"_index":721,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["downloadjson",{"_index":604,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["duration",{"_index":759,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["dynamic",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["e0e0e0",{"_index":755,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["e2e",{"_index":1117,"title":{},"body":{"index.html":{}}}],["e9e9ea",{"_index":902,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["each",{"_index":723,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["ease",{"_index":405,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["element.classlist.add(classe",{"_index":575,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["element.innerhtml",{"_index":576,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["en",{"_index":935,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["end",{"_index":144,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"index.html":{}}}],["endmessage",{"_index":491,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["entry",{"_index":737,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["entry['work",{"_index":739,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["entry[key",{"_index":738,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["evenly",{"_index":594,"title":{},"body":{"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["event",{"_index":789,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.files[0",{"_index":818,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.placeholder",{"_index":810,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["event.target.value",{"_index":806,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["eventemitter",{"_index":937,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["evryboddysamemind",{"_index":687,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["execute",{"_index":1114,"title":{},"body":{"index.html":{}}}],["exo",{"_index":1007,"title":{},"body":{"components/TitleComponent.html":{}}}],["explode",{"_index":892,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["exports",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":956,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["extract",{"_index":826,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["facade/htmldisplay",{"_index":652,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["face",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":466,"title":{},"body":{"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["family",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["ff61af",{"_index":1031,"title":{},"body":{"components/TitleComponent.html":{}}}],["fff",{"_index":375,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["ffffff",{"_index":365,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["filecontent",{"_index":822,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["filereader",{"_index":820,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["files",{"_index":1100,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1036,"title":{},"body":{"components/TitleComponent.html":{}}}],["filter",{"_index":392,"title":{},"body":{"components/GameComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["finishbutton",{"_index":492,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["first",{"_index":1122,"title":{},"body":{"index.html":{}}}],["flex",{"_index":324,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["fond",{"_index":922,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["font",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["for(let",{"_index":808,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form",{"_index":855,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_bottom",{"_index":869,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["form_top",{"_index":856,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["full",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":713,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["further",{"_index":1126,"title":{},"body":{"index.html":{}}}],["game",{"_index":52,"title":{"interfaces/Game.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{}}}],["game_label:before",{"_index":877,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["gamecomponentcomponent",{"_index":51,"title":{"components/GameComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gameconcret",{"_index":255,"title":{"classes/GameConcret.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"coverage.html":{}}}],["gamemodemessage",{"_index":493,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["gameoptionserviceservice",{"_index":227,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["gap",{"_index":864,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["generate",{"_index":1103,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1084,"title":{},"body":{"index.html":{}}}],["getactualstage",{"_index":145,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getbacklogdata",{"_index":146,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getbacklogdatanote",{"_index":147,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getbacklogdatanote(key",{"_index":178,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getdefaultvalue",{"_index":148,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getinstance",{"_index":501,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["getmode",{"_index":220,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["getnote",{"_index":149,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getnote(key",{"_index":181,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getnotes",{"_index":150,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayer",{"_index":151,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayer(key",{"_index":184,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayernumber",{"_index":152,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getplayers",{"_index":153,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["getslidervalue",{"_index":783,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event",{"_index":792,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getslidervalue(event:any=0",{"_index":804,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["getting",{"_index":1081,"title":{"index.html":{}},"body":{}}],["go",{"_index":1128,"title":{},"body":{"index.html":{}}}],["gradient(#032d50",{"_index":1027,"title":{},"body":{"components/TitleComponent.html":{}}}],["graph",{"_index":1136,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":335,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["h1",{"_index":765,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["h2",{"_index":1037,"title":{},"body":{"components/TitleComponent.html":{}}}],["h3",{"_index":866,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["header",{"_index":334,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["height",{"_index":322,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["help",{"_index":581,"title":{},"body":{"components/InformationButtonComponent.html":{},"index.html":{}}}],["hidden",{"_index":758,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["home",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["hover",{"_index":407,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["htmlbalise",{"_index":238,"title":{"classes/HtmlBalise.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["htmlbalise.getinstance",{"_index":267,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["htmlbalise.instance",{"_index":534,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlbuttonelement",{"_index":513,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmldisplay",{"_index":218,"title":{"classes/HtmlDisplay.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["htmldivelement",{"_index":506,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["htmlelement",{"_index":503,"title":{},"body":{"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["htmlinputelement",{"_index":306,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["http://localhost:4200",{"_index":1095,"title":{},"body":{"index.html":{}}}],["icon",{"_index":585,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["id",{"_index":197,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["identifier",{"_index":1049,"title":{},"body":{"coverage.html":{}}}],["if(!closebalise",{"_index":568,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(element",{"_index":573,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["if(parseint(this.getnote(key",{"_index":998,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["image",{"_index":368,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/TitleComponent.html":{}}}],["implements",{"_index":213,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["important",{"_index":876,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["imports",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{}}}],["information",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["information_button",{"_index":582,"title":{},"body":{"components/InformationButtonComponent.html":{}}}],["informationbuttoncomponent",{"_index":54,"title":{"components/InformationButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inherited",{"_index":957,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["injectable",{"_index":474,"title":{"injectables/GameOptionServiceService.html":{}},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":475,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["inline",{"_index":885,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input",{"_index":592,"title":{},"body":{"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["input[type=\"file",{"_index":905,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio",{"_index":882,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["input[type=\"radio\"]:checked",{"_index":890,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["inputs",{"_index":749,"title":{},"body":{"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{}}}],["inputvalue",{"_index":494,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["instance",{"_index":496,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["interface",{"_index":134,"title":{"interfaces/Card.html":{},"interfaces/Game.html":{}},"body":{"interfaces/Card.html":{},"interfaces/Game.html":{},"coverage.html":{}}}],["interfaces",{"_index":136,"title":{},"body":{"interfaces/Card.html":{},"interfaces/Game.html":{},"overview.html":{}}}],["isdownload",{"_index":154,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["isretry",{"_index":155,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["item",{"_index":848,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["items",{"_index":332,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["json",{"_index":828,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["json.parse(filecontent",{"_index":825,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata",{"_index":824,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata.hasownproperty(key",{"_index":832,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsondata[key]?.name",{"_index":833,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["jsonoutput",{"_index":733,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["jsonoutput['backlog'][(index",{"_index":740,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["jsonoutput['players'][(index",{"_index":743,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["justify",{"_index":327,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["karma",{"_index":1116,"title":{},"body":{"index.html":{}}}],["key",{"_index":166,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["key.startswith('backlog",{"_index":297,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('mode",{"_index":284,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["key.startswith('player",{"_index":287,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["keyframes",{"_index":894,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["keys",{"_index":830,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["l'appelle",{"_index":926,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["la",{"_index":915,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["label",{"_index":559,"title":{},"body":{"classes/HtmlDisplay.html":{},"components/SettingsComponentComponent.html":{}}}],["label.innertext",{"_index":567,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["left",{"_index":878,"title":{},"body":{"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["left_number",{"_index":861,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["left_players",{"_index":862,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"overview.html":{}}}],["letter",{"_index":1011,"title":{},"body":{"components/TitleComponent.html":{}}}],["li",{"_index":873,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["line",{"_index":384,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["linear",{"_index":1026,"title":{},"body":{"components/TitleComponent.html":{}}}],["link",{"_index":910,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["list",{"_index":871,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["listvalue",{"_index":219,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["literal",{"_index":173,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["lobby",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["local_cafe",{"_index":320,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["lorsqu'on",{"_index":925,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["lunchstage",{"_index":156,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["main",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["mainmenucomponent",{"_index":57,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["majority",{"_index":852,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["marche",{"_index":319,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["margin",{"_index":355,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["mat",{"_index":421,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["match",{"_index":811,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["matching",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["maticonmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":994,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["maxplayer",{"_index":995,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["menu",{"_index":589,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["menu.component",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["menu.component.html",{"_index":591,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":590,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":588,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu/main",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["methods",{"_index":140,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["michel",{"_index":293,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["middle",{"_index":887,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["min",{"_index":379,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["minplayer",{"_index":997,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["mode",{"_index":279,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["modedecorator",{"_index":601,"title":{"classes/ModeDecorator.html":{}},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["modedecorator:10",{"_index":958,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:12",{"_index":962,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:13",{"_index":959,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:148",{"_index":984,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:164",{"_index":967,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:181",{"_index":982,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:186",{"_index":969,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:190",{"_index":976,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:194",{"_index":975,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:198",{"_index":972,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:20",{"_index":990,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:202",{"_index":970,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:206",{"_index":983,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:218",{"_index":977,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:222",{"_index":965,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:226",{"_index":974,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:230",{"_index":973,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:234",{"_index":986,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:24",{"_index":988,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:263",{"_index":981,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:267",{"_index":979,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:271",{"_index":987,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:275",{"_index":968,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:28",{"_index":966,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:299",{"_index":971,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:303",{"_index":978,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:37",{"_index":991,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:41",{"_index":989,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:44",{"_index":963,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:49",{"_index":980,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:6",{"_index":964,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:7",{"_index":960,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:8",{"_index":961,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modedecorator:93",{"_index":985,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["modifybacklogdata",{"_index":157,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["modifybacklogdata(key",{"_index":192,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["module",{"_index":72,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":74,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1127,"title":{},"body":{"index.html":{}}}],["mr",{"_index":1038,"title":{},"body":{"components/TitleComponent.html":{}}}],["n",{"_index":200,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["namecoffe",{"_index":689,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["namequestion",{"_index":688,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["names",{"_index":827,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray",{"_index":831,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["namesarray.push(jsondata[key].name",{"_index":834,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["navigate",{"_index":1094,"title":{},"body":{"index.html":{}}}],["need",{"_index":1121,"title":{},"body":{"index.html":{}}}],["new",{"_index":271,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["newdata",{"_index":481,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["next",{"_index":712,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["nextstage",{"_index":158,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["ng",{"_index":1091,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":221,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["ngif",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["none",{"_index":269,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["noopanimationsmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["notation",{"_index":685,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["note",{"_index":646,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["notes",{"_index":686,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notes.includes",{"_index":696,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notes.includes(\"cafe",{"_index":698,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notes.push(this.getnote(key",{"_index":695,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["notsamemind",{"_index":608,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["null",{"_index":282,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{}}}],["number",{"_index":176,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["numbers",{"_index":850,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["object.keys(additionalvalue).foreach(key",{"_index":570,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["object.keys(data).foreach((key",{"_index":736,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["object.keys(data).foreach(key",{"_index":283,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["object.keys(players).foreach((key",{"_index":742,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["object.keys(this.getbacklogdata()).foreach(key",{"_index":715,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["object.keys(this.getnotes()).foreach(key",{"_index":691,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["object.keys(this.players).foreach(key",{"_index":839,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["object.keys(this.players).length",{"_index":468,"title":{},"body":{"classes/GameConcret.html":{}}}],["offset",{"_index":945,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onbuttonclick",{"_index":907,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["onfileselected",{"_index":784,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["onfileselected(event",{"_index":793,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["opacity",{"_index":883,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["opinion",{"_index":710,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["option",{"_index":260,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["optional",{"_index":138,"title":{},"body":{"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["out",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":944,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["output",{"_index":940,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["outputs",{"_index":912,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["overflow",{"_index":757,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["override",{"_index":992,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["overview",{"_index":1130,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":210,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{}}}],["package",{"_index":1066,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":350,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["page",{"_index":1132,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":168,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["parseint(key",{"_index":841,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["parseint(key.replace('player",{"_index":289,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["parseint(match",{"_index":813,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["parseint(note",{"_index":717,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["parseint(this.getnote(key",{"_index":999,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["pass",{"_index":711,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["path",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patrick",{"_index":295,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["permet",{"_index":918,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["placeholder",{"_index":809,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["placeholder.replace(/\\d/g",{"_index":812,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["planning",{"_index":1003,"title":{},"body":{"components/TitleComponent.html":{}}}],["planningpokerpp",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["platform",{"_index":1118,"title":{},"body":{"index.html":{}}}],["player",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["playerbutton",{"_index":386,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{}}}],["playercardcomponent",{"_index":60,"title":{"components/PlayerCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["playerkey",{"_index":840,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playermax",{"_index":779,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playername",{"_index":622,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["playernumber",{"_index":288,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["playerpushbutton",{"_index":159,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["playerpushbutton(id",{"_index":195,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["players",{"_index":208,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["players[1",{"_index":292,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[2",{"_index":294,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["players[parseint(key",{"_index":744,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["players[playernumber",{"_index":291,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["playersnb",{"_index":780,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["playersnote",{"_index":430,"title":{},"body":{"classes/GameConcret.html":{}}}],["pointer",{"_index":583,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["poker",{"_index":1004,"title":{},"body":{"components/TitleComponent.html":{}}}],["position",{"_index":400,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["pp",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["press",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"dependencies.html":{}}}],["private",{"_index":265,"title":{},"body":{"components/GameComponentComponent.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{}}}],["project",{"_index":1083,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{},"properties.html":{}}}],["protected",{"_index":605,"title":{},"body":{"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"classes/StrictDecorator.html":{}}}],["providedin",{"_index":488,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["providers",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["pushable_button",{"_index":942,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushable_button:active",{"_index":954,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["pushablebackground",{"_index":911,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["questionselected",{"_index":609,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["questionselected(playername",{"_index":641,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["qui",{"_index":917,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["quiter",{"_index":300,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["radius",{"_index":353,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["reader",{"_index":819,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reader.onload",{"_index":821,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reader.readastext(selectedfile",{"_index":837,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reader.result",{"_index":823,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["readonly",{"_index":777,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["reavel",{"_index":684,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["reavelnote",{"_index":610,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["redirectto",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1131,"title":{},"body":{"index.html":{}}}],["regular.ttf",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["relative",{"_index":401,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["reload",{"_index":1098,"title":{},"body":{"index.html":{}}}],["repeat(11",{"_index":337,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["reset",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["retry",{"_index":606,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["return",{"_index":286,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{}}}],["returns",{"_index":169,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["rgb(0",{"_index":413,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgb(255",{"_index":419,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["rgba(0",{"_index":763,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["rgba(black",{"_index":1023,"title":{},"body":{"components/TitleComponent.html":{}}}],["right",{"_index":394,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["right_style",{"_index":865,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/GameOptionServiceService.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["rotate",{"_index":1045,"title":{},"body":{"components/TitleComponent.html":{}}}],["router",{"_index":228,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["routermodule",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":124,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":345,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["run",{"_index":1090,"title":{},"body":{"index.html":{}}}],["running",{"_index":1111,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":487,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"classes/HtmlDisplay.html":{},"dependencies.html":{}}}],["salut",{"_index":317,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["same",{"_index":709,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["samemind",{"_index":611,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["samemind(note",{"_index":644,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["scaffolding",{"_index":1102,"title":{},"body":{"index.html":{}}}],["scale(0.5",{"_index":897,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(0.85",{"_index":410,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["scale(0.9",{"_index":904,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1",{"_index":898,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["scale(1.5",{"_index":586,"title":{},"body":{"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{}}}],["scale(4",{"_index":895,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["selectbutton",{"_index":222,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectbutton(id",{"_index":233,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["selectedfile",{"_index":817,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["senddata",{"_index":785,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["serif",{"_index":347,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["serve",{"_index":1092,"title":{},"body":{"index.html":{}}}],["server",{"_index":1089,"title":{},"body":{"index.html":{}}}],["service.service",{"_index":261,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["service.service.ts",{"_index":477,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["service.service.ts:10",{"_index":480,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:8",{"_index":483,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["service.service.ts:9",{"_index":485,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["services/gameoptionservice/game",{"_index":259,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["setactualplayerturn",{"_index":160,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setactualplayerturn(n",{"_index":198,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setbacklog",{"_index":223,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["setbacklogdata",{"_index":161,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setbacklogdata(backlogdata",{"_index":201,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setdata",{"_index":478,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdata(newdata",{"_index":479,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["setdefaultvalue",{"_index":162,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setdefaultvalue(value",{"_index":204,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setplayers",{"_index":163,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["setplayers(players",{"_index":206,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["settimeout",{"_index":835,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["settings",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["settingscomponentcomponent",{"_index":63,"title":{"components/SettingsComponentComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setupdefaultvalue",{"_index":164,"title":{},"body":{"interfaces/Game.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["shadow",{"_index":357,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["showtext",{"_index":541,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["showtext(label",{"_index":557,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["sidenav",{"_index":422,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["singleton/htmlbalise",{"_index":653,"title":{},"body":{"classes/ModeDecorator.html":{},"classes/StrictDecorator.html":{}}}],["size",{"_index":348,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["sizing",{"_index":881,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["skew",{"_index":1009,"title":{},"body":{"components/TitleComponent.html":{}}}],["solid",{"_index":372,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"components/TitleComponent.html":{},"index.html":{}}}],["space",{"_index":329,"title":{},"body":{"components/GameComponentComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["spacing",{"_index":1012,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:first",{"_index":1014,"title":{},"body":{"components/TitleComponent.html":{}}}],["span:last",{"_index":1025,"title":{},"body":{"components/TitleComponent.html":{}}}],["src",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{}}}],["src/app/app",{"_index":121,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/classes/decorateur/game.ts",{"_index":139,"title":{},"body":{"interfaces/Game.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/game.ts:11",{"_index":205,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:13",{"_index":194,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:15",{"_index":191,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:17",{"_index":175,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:19",{"_index":186,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:21",{"_index":185,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:23",{"_index":180,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:25",{"_index":177,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:27",{"_index":196,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:29",{"_index":187,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:3",{"_index":207,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:31",{"_index":167,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:33",{"_index":183,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:35",{"_index":182,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:37",{"_index":193,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:39",{"_index":190,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:41",{"_index":188,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:43",{"_index":172,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:45",{"_index":199,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:47",{"_index":174,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:49",{"_index":179,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:5",{"_index":202,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:7",{"_index":171,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/game.ts:9",{"_index":209,"title":{},"body":{"interfaces/Game.html":{}}}],["src/app/classes/decorateur/gameconcret.ts",{"_index":426,"title":{},"body":{"classes/GameConcret.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:100",{"_index":450,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:104",{"_index":439,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:11",{"_index":434,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:13",{"_index":431,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:15",{"_index":459,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:20",{"_index":457,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:24",{"_index":438,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:27",{"_index":460,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:31",{"_index":458,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:36",{"_index":454,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:40",{"_index":441,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:44",{"_index":448,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:48",{"_index":447,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:5",{"_index":435,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:52",{"_index":444,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:56",{"_index":442,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:6",{"_index":436,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:60",{"_index":455,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:63",{"_index":449,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:67",{"_index":437,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:7",{"_index":432,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:71",{"_index":446,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:75",{"_index":445,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:79",{"_index":453,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:83",{"_index":443,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:87",{"_index":451,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:9",{"_index":433,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:91",{"_index":456,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:94",{"_index":440,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/gameconcret.ts:97",{"_index":452,"title":{},"body":{"classes/GameConcret.html":{}}}],["src/app/classes/decorateur/modedecorator.ts",{"_index":602,"title":{},"body":{"classes/ModeDecorator.html":{},"coverage.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:10",{"_index":614,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:12",{"_index":617,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:13",{"_index":613,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:148",{"_index":642,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:164",{"_index":621,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:181",{"_index":638,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:186",{"_index":625,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:190",{"_index":632,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:194",{"_index":631,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:198",{"_index":628,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:20",{"_index":650,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:202",{"_index":626,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:206",{"_index":640,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:218",{"_index":633,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:222",{"_index":618,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:226",{"_index":630,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:230",{"_index":629,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:234",{"_index":645,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:24",{"_index":648,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:256",{"_index":639,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:263",{"_index":637,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:267",{"_index":635,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:271",{"_index":647,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:275",{"_index":624,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:28",{"_index":619,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:299",{"_index":627,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:303",{"_index":634,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:307",{"_index":623,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:37",{"_index":651,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:41",{"_index":649,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:49",{"_index":636,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:7",{"_index":615,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:8",{"_index":616,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/modedecorator.ts:93",{"_index":643,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["src/app/classes/decorateur/strictdecorator.ts",{"_index":955,"title":{},"body":{"classes/StrictDecorator.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts",{"_index":535,"title":{},"body":{"classes/HtmlDisplay.html":{},"coverage.html":{}}}],["src/app/classes/facade/htmldisplay.ts:12",{"_index":549,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:30",{"_index":545,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:37",{"_index":552,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:41",{"_index":556,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:46",{"_index":554,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:6",{"_index":542,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/facade/htmldisplay.ts:8",{"_index":558,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["src/app/classes/singleton/htmlbalise.ts",{"_index":490,"title":{},"body":{"classes/HtmlBalise.html":{},"coverage.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:10",{"_index":505,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:11",{"_index":507,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:12",{"_index":502,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:2",{"_index":508,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:26",{"_index":516,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:33",{"_index":515,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:4",{"_index":510,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:5",{"_index":511,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:6",{"_index":504,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:7",{"_index":512,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:8",{"_index":509,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/classes/singleton/htmlbalise.ts:9",{"_index":514,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["src/app/components/game",{"_index":211,"title":{},"body":{"components/GameComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/information",{"_index":577,"title":{},"body":{"components/InformationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/main",{"_index":587,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["src/app/components/player",{"_index":745,"title":{},"body":{"components/PlayerCardComponent.html":{},"coverage.html":{}}}],["src/app/components/settings",{"_index":776,"title":{},"body":{"components/SettingsComponentComponent.html":{},"coverage.html":{}}}],["src/app/components/start",{"_index":906,"title":{},"body":{"components/StartButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/title/title.component.ts",{"_index":1000,"title":{},"body":{"components/TitleComponent.html":{},"coverage.html":{}}}],["src/app/models/card.ts",{"_index":137,"title":{},"body":{"interfaces/Card.html":{},"coverage.html":{}}}],["src/app/services/gameoptionservice/game",{"_index":476,"title":{},"body":{"injectables/GameOptionServiceService.html":{},"coverage.html":{}}}],["standard",{"_index":661,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["standarvalue",{"_index":340,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["start",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"dependencies.html":{}}}],["startbuttoncomponent",{"_index":65,"title":{"components/StartButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["started",{"_index":1082,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1050,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":495,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["stored",{"_index":1108,"title":{},"body":{"index.html":{}}}],["strict",{"_index":274,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["strictdecorator",{"_index":257,"title":{"classes/StrictDecorator.html":{}},"body":{"components/GameComponentComponent.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["strictdecorator(this.game",{"_index":275,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["strkey",{"_index":842,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["stroke",{"_index":363,"title":{},"body":{"components/GameComponentComponent.html":{},"components/TitleComponent.html":{}}}],["stvalue",{"_index":497,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["style",{"_index":872,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["summary",{"_index":727,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["super.notsamemind",{"_index":993,"title":{},"body":{"classes/StrictDecorator.html":{}}}],["support",{"_index":1133,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1134,"title":{},"body":{"modules.html":{}}}],["table",{"_index":1065,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":498,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["test",{"_index":473,"title":{},"body":{"classes/GameConcret.html":{},"index.html":{}}}],["testing",{"_index":1124,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1113,"title":{},"body":{"index.html":{}}}],["text",{"_index":346,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/HtmlDisplay.html":{},"components/PlayerCardComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["texttoshow",{"_index":339,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["that's",{"_index":724,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.actualfunctioninbacklog",{"_index":467,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.actualplayerturn",{"_index":678,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.addnote(id",{"_index":700,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.backlogdata",{"_index":463,"title":{},"body":{"classes/GameConcret.html":{},"components/SettingsComponentComponent.html":{}}}],["this.backlogdata.foreach((item",{"_index":846,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.backlogdata[key",{"_index":472,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.balise",{"_index":266,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.balise.playerbutton.style.display",{"_index":268,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.bsetupdefaultvalue",{"_index":464,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.buttonclicked.emit",{"_index":941,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["this.coffeeselected(namecoffe",{"_index":699,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.content",{"_index":569,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["this.data.asobservable",{"_index":484,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data.next(newdata",{"_index":489,"title":{},"body":{"injectables/GameOptionServiceService.html":{}}}],["this.data[\"backlog",{"_index":847,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.data[\"mode",{"_index":845,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.data[strkey",{"_index":843,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.dataservice.data$.subscribe(data",{"_index":280,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.dataservice.setdata(this.data",{"_index":849,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.defaultvalue",{"_index":465,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.downloadjson",{"_index":672,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.endmessage",{"_index":521,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.finishbutton",{"_index":529,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.game",{"_index":272,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["this.game.addnote(value",{"_index":704,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.choosedefaultvalue",{"_index":278,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getactualstage",{"_index":316,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game.getbacklogdatanote(key",{"_index":730,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.getnote(key",{"_index":706,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.getnotes",{"_index":705,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.getplayers",{"_index":703,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.modifybacklogdata(key",{"_index":725,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setbacklogdata(backlogdata",{"_index":657,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setdefaultvalue(value",{"_index":667,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setplayers(players",{"_index":656,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game.setupdefaultvalue",{"_index":666,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.game?.creatanddownloadjson",{"_index":310,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isdownload",{"_index":309,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.isretry",{"_index":313,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.lunchstage",{"_index":315,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.playerpushbutton(id",{"_index":302,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setactualplayerturn(1",{"_index":314,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setbacklogdata(backlogdata",{"_index":301,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setdefaultvalue(valueelement.value",{"_index":308,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setplayers(players",{"_index":296,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.game?.setupdefaultvalue",{"_index":303,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.gamemodemessage",{"_index":531,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.getactualstage",{"_index":676,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getbacklogdata",{"_index":731,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getbacklogdatanote(key",{"_index":728,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getdefaultvalue",{"_index":734,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getmode",{"_index":273,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.getnote(key",{"_index":694,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getplayer(value",{"_index":701,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.getplayers",{"_index":732,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html",{"_index":655,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"div",{"_index":679,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"label",{"_index":707,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"li",{"_index":692,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addhtmlelement(\"ul",{"_index":690,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(\"define",{"_index":680,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(\"everyone",{"_index":708,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(\"you",{"_index":720,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.addtext(key",{"_index":693,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.endmessage",{"_index":669,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.gamemodemessage",{"_index":674,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.stvalue",{"_index":668,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.task",{"_index":673,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.clearhtml(balise.title",{"_index":683,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.displayhtml(balise.endmessage",{"_index":714,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.displayhtml(balise.stvalue",{"_index":665,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.displayhtml(balise.task",{"_index":682,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.showtext(balise.task",{"_index":659,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.html.showtext(balise.title",{"_index":726,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.htmldisplay",{"_index":270,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.inputvalue",{"_index":533,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.lunchstage",{"_index":702,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.mode",{"_index":815,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.modifybacklogdata(key",{"_index":716,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.nextstage",{"_index":670,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.playerbutton",{"_index":525,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.playernumber",{"_index":805,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players",{"_index":461,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[id",{"_index":814,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.players[key",{"_index":469,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.players[playerkey",{"_index":844,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnb",{"_index":807,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["this.playersnote",{"_index":471,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.playersnote[key",{"_index":470,"title":{},"body":{"classes/GameConcret.html":{}}}],["this.questionselected(namequestion",{"_index":697,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.retry",{"_index":671,"title":{},"body":{"classes/ModeDecorator.html":{}}}],["this.router.navigatebyurl('/').then(r",{"_index":311,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setbacklog",{"_index":277,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.setplayers",{"_index":276,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["this.stvalue",{"_index":517,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.task",{"_index":519,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.title",{"_index":523,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["this.validatebutton",{"_index":527,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"components/GameComponentComponent.html":{},"classes/HtmlBalise.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["title.component.html",{"_index":1002,"title":{},"body":{"components/TitleComponent.html":{}}}],["title.component.scss",{"_index":1001,"title":{},"body":{"components/TitleComponent.html":{}}}],["titlecomponent",{"_index":66,"title":{"components/TitleComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{},"coverage.html":{},"overview.html":{}}}],["top",{"_index":406,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["top_left",{"_index":858,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["top_right",{"_index":860,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["transform",{"_index":409,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["transformer",{"_index":565,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transformjavascript",{"_index":561,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["transition",{"_index":403,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{}}}],["translatey",{"_index":950,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["transparent",{"_index":361,"title":{},"body":{"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/TitleComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["true",{"_index":312,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"classes/ModeDecorator.html":{}}}],["tslib",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Card.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{},"coverage.html":{}}}],["typeface",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["ul",{"_index":870,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["un",{"_index":928,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["undefined",{"_index":239,"title":{},"body":{"components/GameComponentComponent.html":{},"classes/ModeDecorator.html":{}}}],["unit",{"_index":1112,"title":{},"body":{"index.html":{}}}],["url(\"../../../assets/images/card.jpg",{"_index":390,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/hypnotic.jpg",{"_index":369,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url(\"../../../assets/images/player",{"_index":751,"title":{},"body":{"components/PlayerCardComponent.html":{}}}],["url('../../../assets/images/hand.png",{"_index":398,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["url('../assets/fonts/pressstart2p",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=exo:wght@900&display=swap",{"_index":1006,"title":{},"body":{"components/TitleComponent.html":{}}}],["url('https://fonts.googleapis.com/css2?family=mr+dafoe&display=swap",{"_index":1005,"title":{},"body":{"components/TitleComponent.html":{}}}],["use",{"_index":1104,"title":{},"body":{"index.html":{}}}],["using",{"_index":829,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["validatebutton",{"_index":499,"title":{},"body":{"classes/HtmlBalise.html":{}}}],["validestage",{"_index":224,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["valueelement",{"_index":304,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["valueelement.value",{"_index":307,"title":{},"body":{"components/GameComponentComponent.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/GameComponentComponent.html":{},"components/InformationButtonComponent.html":{},"components/MainMenuComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["variable",{"_index":916,"title":{},"body":{"components/StartButtonComponent.html":{}}}],["version",{"_index":1086,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":886,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["via",{"_index":1115,"title":{},"body":{"index.html":{}}}],["void",{"_index":170,"title":{},"body":{"interfaces/Game.html":{},"components/GameComponentComponent.html":{},"classes/GameConcret.html":{},"injectables/GameOptionServiceService.html":{},"classes/HtmlBalise.html":{},"classes/HtmlDisplay.html":{},"classes/ModeDecorator.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"classes/StrictDecorator.html":{}}}],["webkit",{"_index":362,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{},"components/TitleComponent.html":{}}}],["white",{"_index":343,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{},"components/StartButtonComponent.html":{},"components/TitleComponent.html":{}}}],["width",{"_index":381,"title":{},"body":{"components/GameComponentComponent.html":{},"components/PlayerCardComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["worker",{"_index":566,"title":{},"body":{"classes/HtmlDisplay.html":{}}}],["wrap",{"_index":863,"title":{},"body":{"components/SettingsComponentComponent.html":{}}}],["z",{"_index":402,"title":{},"body":{"components/GameComponentComponent.html":{},"components/SettingsComponentComponent.html":{}}}],["zone.js",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'planningPokerPP'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'planningPokerPP';\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @font-face {\n  font-family: 'Press Start 2P';\n  src: url('../assets/fonts/PressStart2P-Regular.ttf');\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            GameComponentComponent\n                        \n                        \n                            InformationButtonComponent\n                        \n                        \n                            MainMenuComponent\n                        \n                        \n                            PlayerCardComponent\n                        \n                        \n                            SettingsComponentComponent\n                        \n                        \n                            StartButtonComponent\n                        \n                        \n                            TitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            NgIf\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {StartButtonComponent} from './components/start-button/start-button.component';\nimport {InformationButtonComponent} from './components/information-button/information-button.component';\n\nimport {MainMenuComponent} from './components/main-menu/main-menu.component';\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatIconModule} from \"@angular/material/icon\";\nimport {SettingsComponentComponent} from './components/settings-component/settings-component.component';\nimport { GameComponentComponent } from './components/game-component/game-component.component';\nimport { TitleComponent } from './components/title/title.component';\nimport { PlayerCardComponent } from './components/player-card/player-card.component';\nimport {NgIf} from \"@angular/common\";\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StartButtonComponent,\n    InformationButtonComponent,\n    MainMenuComponent,\n    SettingsComponentComponent,\n    GameComponentComponent,\n    TitleComponent,\n    PlayerCardComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatIconModule,\n    NoopAnimationsModule,\n    NgIf,\n    MatSidenavModule\n  ],\n  providers:\n    [],\n  bootstrap:\n    [AppComponent]\n})\n\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {SettingsComponentComponent} from \"./components/settings-component/settings-component.component\";\nimport {MainMenuComponent} from \"./components/main-menu/main-menu.component\";\nimport {GameComponentComponent} from \"./components/game-component/game-component.component\";\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/home', pathMatch: 'full'},\n  {path: 'home', component: MainMenuComponent},\n  {path: 'lobby', component: SettingsComponentComponent},\n  {path: 'game', component: GameComponentComponent}\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\n\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Card.html":{"url":"interfaces/Card.html","title":"interface - Card","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Card\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/card.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            src\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Card {\n  src: string;\n  title?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/Game.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addNote\n                                    \n                                \n                                \n                                    \n                                        chooseDefaultValue\n                                    \n                                \n                                \n                                    \n                                        creatAndDownloadJSON\n                                    \n                                \n                                \n                                    \n                                        end\n                                    \n                                \n                                \n                                    \n                                        getActualStage\n                                    \n                                \n                                \n                                    \n                                        getBacklogData\n                                    \n                                \n                                \n                                    \n                                        getBacklogDataNote\n                                    \n                                \n                                \n                                    \n                                        getDefaultValue\n                                    \n                                \n                                \n                                    \n                                        getNote\n                                    \n                                \n                                \n                                    \n                                        getNotes\n                                    \n                                \n                                \n                                    \n                                        getPlayer\n                                    \n                                \n                                \n                                    \n                                        getPlayerNumber\n                                    \n                                \n                                \n                                    \n                                        getPlayers\n                                    \n                                \n                                \n                                    \n                                        isDownload\n                                    \n                                \n                                \n                                    \n                                        isRetry\n                                    \n                                \n                                \n                                    \n                                        lunchStage\n                                    \n                                \n                                \n                                    \n                                        modifyBacklogData\n                                    \n                                \n                                \n                                    \n                                        nextStage\n                                    \n                                \n                                \n                                    \n                                        playerPushButton\n                                    \n                                \n                                \n                                    \n                                        setActualPlayerTurn\n                                    \n                                \n                                \n                                    \n                                        setBacklogData\n                                    \n                                \n                                \n                                    \n                                        setDefaultValue\n                                    \n                                \n                                \n                                    \n                                        setPlayers\n                                    \n                                \n                                \n                                    \n                                        setupDefaultValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:3\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/Game.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface Game {\n\n  setPlayers(players: { [key: number]: string }): void;\n\n  setBacklogData(BacklogData: { [key: string]: number }): void;\n\n  chooseDefaultValue(): void;\n\n  setupDefaultValue(): boolean;\n\n  setDefaultValue(value: string): void;\n\n  nextStage(): void;\n\n  lunchStage(): void;\n\n  getActualStage(): number;\n\n  getPlayerNumber(): number;\n\n  getPlayer(key: number): string;\n\n  getDefaultValue(): string;\n\n  getBacklogData(): { [key: string]: number };\n\n  playerPushButton(id: string): void;\n\n  getPlayers(): { [key: number]: string };\n\n  addNote(value: string, key: string): void\n\n  getNotes(): { [key: string]: string };\n\n  getNote(key: string): string;\n\n  modifyBacklogData(key: string, value: number): void;\n\n  isRetry(): boolean;\n\n  isDownload(): boolean;\n\n  creatAndDownloadJSON() : { [p: string]: any };\n\n  setActualPlayerTurn(n : number): void;\n\n  end() : void;\n\n  getBacklogDataNote(key : string) : number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponentComponent.html":{"url":"components/GameComponentComponent.html","title":"component - GameComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/game-component/game-component.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                game-component\n            \n\n\n\n            \n                styleUrls\n                ./game-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./game-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balise\n                            \n                            \n                                game\n                            \n                            \n                                htmlDisplay\n                            \n                            \n                                listValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMode\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectButton\n                            \n                            \n                                setBacklog\n                            \n                            \n                                setPlayers\n                            \n                            \n                                valideStage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/game-component/game-component.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMode\n                        \n                    \n                \n            \n            \n                \ngetMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectButton\n                        \n                    \n                \n            \n            \n                \nselectButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklog\n                        \n                    \n                \n            \n            \n                \nsetBacklog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valideStage\n                        \n                    \n                \n            \n            \n                \nvalideStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/game-component/game-component.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balise\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        htmlDisplay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/game-component/game-component.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component} from '@angular/core';\nimport {Game} from \"../../classes/decorateur/Game\";\nimport {GameConcret} from \"../../classes/decorateur/GameConcret\";\nimport {StrictDecorator} from \"../../classes/decorateur/StrictDecorator\";\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\nimport {HtmlDisplay} from \"../../classes/facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../../classes/singleton/htmlBalise\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'game-component',\n  templateUrl: './game-component.component.html',\n  styleUrls: ['./game-component.component.scss']\n})\nexport class GameComponentComponent implements AfterViewInit {\n\n  constructor(private dataService: GameOptionServiceService, private router: Router) {\n  }\n\n  game: Game | undefined;\n\n  htmlDisplay: HtmlDisplay | undefined;\n\n  listValue = [\"0\", \"1\", \"2\", \"3\", \"5\", \"8\", \"20\", \"40\", \"100\", \"?\", \"cafe\"]\n\n  balise: HtmlBalise | undefined;\n\n  ngAfterViewInit(): void {\n    this.balise = HtmlBalise.getInstance();\n\n    this.balise.playerButton.style.display = 'none';\n\n    this.htmlDisplay = new HtmlDisplay();\n\n    this.game = new GameConcret();\n    if (this.getMode() == \"strict\") this.game = new StrictDecorator(this.game)\n    else this.game = new StrictDecorator(this.game)\n\n    this.setPlayers()\n    this.setBacklog()\n\n    this.game.chooseDefaultValue();\n  }\n\n  getMode(): string {\n    let mode = \"strict\"\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Mode')) {\n            mode = data[key];\n          }\n        });\n      }\n    });\n    return mode\n  }\n\n  setPlayers() {\n    let players: { [key: number]: string } = {}\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Player')) {\n            const playerNumber = parseInt(key.replace('Player', ''), 10);\n            players[playerNumber] = data[key];\n          }\n        });\n      } else {\n        players[1] = \"Michel\";\n        players[2] = \"Patrick\";\n      }\n    });\n    this.game?.setPlayers(players)\n  }\n\n  setBacklog() {\n    let backlogData: { [key: string]: number } = {};\n    this.dataService.data$.subscribe(data => {\n      if (data != null) {\n        Object.keys(data).forEach(key => {\n          if (key.startsWith('Backlog')) {\n            backlogData[data[key]] = 1\n          }\n        });\n      } else {\n        backlogData[\"Boutton Start\"] = 1;\n        backlogData[\"Boutton Quiter\"] = 1;\n      }\n    });\n    this.game?.setBacklogData(backlogData)\n  }\n\n  selectButton(id: string) {\n    this.game?.playerPushButton(id)\n  }\n\n  valideStage() {\n    if (this.game?.setupDefaultValue()) {\n      const valueElement = document.getElementById(\"stage1\") as HTMLInputElement;\n      if (valueElement.value != \"\") {\n        this.game?.setDefaultValue(valueElement.value)\n      }\n    } else {\n\n      if (this.game?.isDownload()) {\n        this.game?.creatAndDownloadJSON();\n        this.router.navigateByUrl('/').then(r => true);\n      } else {\n        if (this.game?.isRetry()) {\n          this.game?.setActualPlayerTurn(1);\n          this.game?.lunchStage();\n        } else {\n          if (this.game != null) {\n            if (this.game.getActualStage() \n    \n\n    \n        \n  \n     SALUT CA MARCHE \n  \n  \n    \n\n      \n        \n        \n      \n\n      \n\n      \n\n      \n\n      \n\n      \n        \n          local_cafe\n           {{ i }}\n        \n      \n\n      \n      \n\n\n      \n      \n    \n  \n\n\n\n\n\n\n    \n\n    \n                \n                    ./game-component.component.scss\n                \n                .container {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n}\n\n.header {\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n}\n\n#textToShow, #StandarValue, #ActualTask {\n  color: white;\n}\n\n#textToShow {\n  grid-column: 1/2;\n  grid-row: 1;\n  text-align: center;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.5em;\n  padding: 10px 0;\n  border-radius: 2.5em;\n  margin: 0 20% 0 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-shadow: 0 0 20px #0fa, 0 0 120px #0fa;\n  color: transparent;\n  -webkit-text-stroke: 1px #ffffff;\n}\n\n#StandarValue {\n  font-family: 'Press Start 2P', serif;\n  font-size: 1em;\n}\n\n#ActualTask {\n  grid-column: 3 / 10;\n  grid-row: 1;\n  text-align: center;\n  background-image: url(\"../../../assets/images/hypnotic.jpg\");\n  background-size: 100%;\n  border-radius: 2em;\n  padding: 10px 0;\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  font-family: 'Press Start 2P', serif;\n  min-height: 80px;\n  min-width: 800px;\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n  justify-content: center;\n  -webkit-text-stroke: 1px #ffffff;\n\n}\n\n#PlayerButton {\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n}\n\n.card-button {\n  width: 150px;\n  height: 210px;\n  background-image: url(\"../../../assets/images/card.jpg\");\n  background-size: 95%;\n  filter: brightness(0.8);\n  border: 1.2px solid white;\n  box-shadow: 0 0 2px #fff, 0 0 7px #fff, 0 0 10px #d000ff, 0 0 25px #d000ff;\n  margin-right: -50px;\n  border-radius: 0.3rem;\n  cursor: url('../../../assets/images/hand.png'), auto;\n  position: relative;\n  z-index: 1;\n  transition: margin-right 0.3s ease, top 0.3s ease;\n\n  &:hover {\n    margin-right: 0;\n    top: -50px;\n  }\n\n  &:active {\n    transform: scale(0.85);\n  }\n}\n\n.card-button_label {\n  width: auto;\n  height: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  text-shadow: 0 0 7px #0fa, 0 0 120px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 2.5em;\n}\n\n.card-button_icon {\n  height: 210px;\n  text-shadow: rgb(0, 255, 170) 0.1px 0.2px 6px;\n  color: rgb(255, 255, 255);\n  font-size: 3.2em;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\nmat-sidenav-container {\n  height: 100%;\n  background: none;\n}\n\nmat-sidenav {\n  color: #00a1ef;\n  width: 200px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       SALUT CA MARCHE                                                                                     local_cafe           {{ i }}                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GameComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameConcret.html":{"url":"classes/GameConcret.html","title":"class - GameConcret","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameConcret\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/GameConcret.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualFunctionInBacklog\n                            \n                            \n                                BacklogData\n                            \n                            \n                                bSetupDefaultValue\n                            \n                            \n                                defaultValue\n                            \n                            \n                                Players\n                            \n                            \n                                PlayersNote\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                chooseDefaultValue\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                end\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                lunchStage\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                setActualPlayerTurn\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualFunctionInBacklog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bSetupDefaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        defaultValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlayersNote\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/GameConcret.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/GameConcret.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\n\nexport class GameConcret implements Game{\n\n  Players: { [key: number]: string} = {};\n  PlayersNote: { [key : string]: string } = {};\n  BacklogData: { [key : string]: number } = {};\n\n  bSetupDefaultValue = true;\n\n  defaultValue = \"\";\n\n  actualFunctionInBacklog : number = 0;\n\n  setPlayers(players: { [p: number]: string }): void {\n    this.Players = players\n    console.log(this.Players);\n  }\n\n  setBacklogData(BacklogData: { [key : string]: number }){\n    this.BacklogData = BacklogData\n  }\n\n  chooseDefaultValue(): void {\n  }\n\n  setupDefaultValue(): boolean {\n    return this.bSetupDefaultValue;\n  }\n\n  setDefaultValue(value: string): void {\n    this.defaultValue = value\n    this.bSetupDefaultValue = false;\n  }\n\n  nextStage(){\n    this.actualFunctionInBacklog++;\n  }\n\n  getActualStage(): number {\n    return this.actualFunctionInBacklog;\n  }\n\n  getPlayerNumber(): number {\n    return Object.keys(this.Players).length;\n  }\n\n  getPlayer(key: number): string {\n    return this.Players[key];\n  }\n\n  getDefaultValue(): string {\n    return this.defaultValue;\n  }\n\n  getBacklogData(): { [p: string]: number } {\n    return this.BacklogData;\n  }\n\n  playerPushButton(id: string): void {\n  }\n\n  getPlayers(): { [p: number]: string } {\n    return this.Players;\n  }\n\n  addNote(value : string, key : string) : void {\n    this.PlayersNote[key] = value;\n  }\n\n  getNotes() : { [key : string]: string }{\n    return this.PlayersNote;\n  }\n\n  getNote(key : string) : string{\n    return this.PlayersNote[key];\n  }\n\n  modifyBacklogData(key : string, value : number) : void{\n    this.BacklogData[key] = value;\n  }\n\n  getBacklogDataNote(key : string) : number{\n    return this.BacklogData[key];\n  }\n\n  isRetry(): boolean {\n    return false;\n  }\n\n  setActualPlayerTurn(n: number): void {\n  }\n\n  end(): void {\n  }\n\n  lunchStage(): void {\n  }\n\n  isDownload(): boolean {\n    return false;\n  }\n\n  creatAndDownloadJSON(): { [p: string]: any } {\n    const test : { [p: string]: any } = {}\n    return test;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameOptionServiceService.html":{"url":"injectables/GameOptionServiceService.html","title":"injectable - GameOptionServiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameOptionServiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/gameOptionService/game-option-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                data$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setData\n                        \n                    \n                \n            \n            \n                \nsetData(newData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/gameOptionService/game-option-service.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.data.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/gameOptionService/game-option-service.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameOptionServiceService {\n  private data = new BehaviorSubject(null);\n  data$ = this.data.asObservable();\n  setData(newData: any) {\n    this.data.next(newData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlBalise.html":{"url":"classes/HtmlBalise.html","title":"class - HtmlBalise","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlBalise\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/singleton/htmlBalise.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                endMessage\n                            \n                            \n                                finishButton\n                            \n                            \n                                gameModeMessage\n                            \n                            \n                                inputValue\n                            \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                            \n                                playerButton\n                            \n                            \n                                stValue\n                            \n                            \n                                task\n                            \n                            \n                                title\n                            \n                            \n                                validateButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clearInstance\n                            \n                            \n                                    Static\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/singleton/htmlBalise.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        endMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finishButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        gameModeMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLDivElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inputValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLInputElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlBalise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLDivElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLDivElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLButtonElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/singleton/htmlBalise.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        clearInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                        \n                    getInstance()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/singleton/htmlBalise.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         HtmlBalise\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HtmlBalise{\n  private static instance: HtmlBalise | null = null;\n\n  stValue : HTMLElement\n  task : HTMLElement\n  endMessage : HTMLElement\n  title : HTMLDivElement\n  playerButton : HTMLDivElement\n  validateButton : HTMLButtonElement\n  finishButton : HTMLElement;\n  gameModeMessage : HTMLDivElement;\n  inputValue : HTMLInputElement;\n\n  private constructor() {\n    this.stValue = document.getElementById(\"StandarValue\") as HTMLElement\n    this.task = document.getElementById(\"ActualTask\") as HTMLElement\n    this.endMessage = document.getElementById(\"endMessage\") as HTMLElement\n    this.title = document.getElementById(\"textToShow\") as HTMLDivElement\n    this.playerButton = document.getElementById(\"PlayerButton\") as HTMLDivElement;\n    this.validateButton = document.getElementById(\"validateButton\") as HTMLButtonElement;\n    this.finishButton = document.getElementById(\"finishButton\") as HTMLElement;\n    this.gameModeMessage = document.getElementById(\"gameModeMessage\") as HTMLDivElement;\n    this.inputValue = document.getElementById(\"stage1\") as HTMLInputElement;\n  }\n\n  static getInstance(): HtmlBalise {\n    if (!HtmlBalise.instance){\n      HtmlBalise.instance = new HtmlBalise();\n    }\n    return HtmlBalise.instance;\n  }\n\n  static clearInstance(): void{\n    HtmlBalise.instance = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HtmlDisplay.html":{"url":"classes/HtmlDisplay.html","title":"class - HtmlDisplay","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HtmlDisplay\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/facade/HtmlDisplay.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addClass\n                            \n                            \n                                addHtmlElement\n                            \n                            \n                                addText\n                            \n                            \n                                clearHTML\n                            \n                            \n                                displayHTML\n                            \n                            \n                                showText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/facade/HtmlDisplay.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addClass\n                        \n                    \n                \n            \n            \n                \naddClass(id: string, classe: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                classe\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addHtmlElement\n                        \n                    \n                \n            \n            \n                \naddHtmlElement(type: string, id: string, additionalValue: literal type, closeBalise: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"div\"\n                                            \n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    \"\"\n                                            \n\n                                        \n                                        \n                                                additionalValue\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                closeBalise\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addText\n                        \n                    \n                \n            \n            \n                \naddText(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearHTML\n                        \n                    \n                \n            \n            \n                \nclearHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayHTML\n                        \n                    \n                \n            \n            \n                \ndisplayHTML(element: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                element\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showText\n                        \n                    \n                \n            \n            \n                \nshowText(label: any, text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/facade/HtmlDisplay.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {connect} from \"rxjs\";\nimport transformJavaScript from \"@angular-devkit/build-angular/src/tools/esbuild/javascript-transformer-worker\";\n\nexport class HtmlDisplay{\n\n  content = \"\";\n\n  showText(label : any, text : string){\n    label.innerText = text;\n  }\n\n  addHtmlElement(type : string = \"div\", id : string = \"\", additionalValue : {[key : string] : string} = {}, closeBalise : boolean = false){\n    if(!closeBalise) {\n      this.content += \" 0) {\n        Object.keys(additionalValue).forEach(key => {\n          this.content += key + \"='\" + additionalValue[key] + \"' \"\n        });\n      }\n\n      this.content += \">\"\n    }else{\n      this.content += \"\";\n    }\n  }\n\n  addClass(id: string, classe: string){\n    const element = document.getElementById(id);\n    if(element == null) return\n    console.log(\"aa\")\n    element.classList.add(classe);\n  }\n\n  addText(text : string){\n    this.content += text;\n  }\n\n  displayHTML(element : HTMLElement){\n    element.innerHTML = this.content;\n    this.content = \"\"\n  }\n\n  clearHTML(element : HTMLElement){\n    element.innerHTML = \"\";\n    this.content = \"\";\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InformationButtonComponent.html":{"url":"components/InformationButtonComponent.html","title":"component - InformationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InformationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/information-button/information-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                information-button\n            \n\n\n\n            \n                styleUrls\n                ./information-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./information-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'information-button',\n  templateUrl: './information-button.component.html',\n  styleUrls: ['./information-button.component.scss']\n})\nexport class InformationButtonComponent {\n\n}\n\n    \n\n    \n        \n  help\n\n\n    \n\n    \n                \n                    ./information-button.component.scss\n                \n                .information_button {\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n\n  &:hover {\n    cursor: pointer;\n    color: #3146d3;\n  }\n}\n\n.icon-display {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  help'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InformationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-menu/main-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n\n\n            \n                styleUrls\n                ./main-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent {\n\n}\n\n    \n\n    \n        \n   \n  \n\n\n  \n  \n  \n  \n\n\n\n    \n\n    \n                \n                    ./main-menu.component.scss\n                \n                .container_button {\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  height: 55%;\n}\n\n.container_info-button {\n  height: 25%;\n  padding: 80px 15px 0 35px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\nstart-button {\n  transform: scale(1.5);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ModeDecorator.html":{"url":"classes/ModeDecorator.html","title":"class - ModeDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ModeDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/ModeDecorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Game\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualPlayerTurn\n                            \n                            \n                                downloadJson\n                            \n                            \n                                    Protected\n                                game\n                            \n                            \n                                    Protected\n                                html\n                            \n                            \n                                retry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addNote\n                            \n                            \n                                chooseDefaultValue\n                            \n                            \n                                CoffeeSelected\n                            \n                            \n                                creatAndDownloadJSON\n                            \n                            \n                                end\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                lunchStage\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                notSameMind\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                QuestionSelected\n                            \n                            \n                                reavelNote\n                            \n                            \n                                sameMind\n                            \n                            \n                                setActualPlayerTurn\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(game: Game)\n                    \n                \n                        \n                            \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        game\n                                                  \n                                                        \n                                                                        Game\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualPlayerTurn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadJson\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay\n\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/classes/decorateur/ModeDecorator.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CoffeeSelected\n                        \n                    \n                \n            \n            \n                \nCoffeeSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \ncreatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:307\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:275\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:299\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:198\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:226\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:194\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:218\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:303\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:267\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:263\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:181\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        notSameMind\n                        \n                    \n                \n            \n            \n                \nnotSameMind()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:256\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:206\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionSelected\n                        \n                    \n                \n            \n            \n                \nQuestionSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reavelNote\n                        \n                    \n                \n            \n            \n                \nreavelNote()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sameMind\n                        \n                    \n                \n            \n            \n                \nsameMind(note: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                note\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:271\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/classes/decorateur/ModeDecorator.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Game} from \"./Game\";\nimport {HtmlDisplay} from \"../facade/HtmlDisplay\";\nimport {HtmlBalise} from \"../singleton/htmlBalise\";\n\nexport abstract class ModeDecorator implements Game {\n\n  protected game: Game;\n  protected html: HtmlDisplay;\n\n  actualPlayerTurn: number = 1;\n\n  retry = false;\n  downloadJson = false;\n\n  constructor(game: Game) {\n    this.game = game;\n    this.html = new HtmlDisplay();\n  }\n\n  setPlayers(players: { [key: number]: string }) {\n    this.game.setPlayers(players);\n  }\n\n  setBacklogData(BacklogData: { [p: string]: number }): void {\n    this.game.setBacklogData(BacklogData);\n  }\n\n  chooseDefaultValue(): void {\n    console.log(this.getBacklogData())\n    const balise = HtmlBalise.getInstance();\n    this.html.showText(balise.task, \"Choose a standard value\")\n    balise.inputValue.style.display = \"block\"\n    console.log(this.html.content)\n    this.html.displayHTML(balise.stValue)\n  }\n\n  setupDefaultValue(): boolean {\n    return this.game.setupDefaultValue();\n  }\n\n  setDefaultValue(value: string): void {\n    this.game.setDefaultValue(value);\n    const balise = HtmlBalise.getInstance();\n    this.html.clearHTML(balise.stValue);\n    this.html.clearHTML(balise.endMessage);\n    this.nextStage();\n  }\n\n  lunchStage() {\n    const balise = HtmlBalise.getInstance();\n    balise.inputValue.style.display = \"none\"\n    this.retry = false;\n    this.downloadJson = false;\n\n    this.html.clearHTML(balise.stValue);\n    this.html.clearHTML(balise.endMessage);\n    this.html.clearHTML(balise.task);\n    this.html.clearHTML(balise.gameModeMessage);\n\n    let actualStage = this.getActualStage();\n    console.log(actualStage);\n    if (this.actualPlayerTurn  {\n      value++;\n      if (value == actualStage) {\n        this.html.addHtmlElement(\"div\");\n        this.html.addText(\"Define the value of \" + key);\n        this.html.addHtmlElement(\"div\", undefined, undefined, true);\n\n        balise.playerButton.style.display = \"flex\"\n      }\n    });\n\n    this.html.displayHTML(balise.task);\n  }\n\n  reavelNote() {\n    const balise = HtmlBalise.getInstance();\n    this.html.clearHTML(balise.stValue)\n    this.html.clearHTML(balise.endMessage)\n    this.html.clearHTML(balise.task)\n    this.html.clearHTML(balise.gameModeMessage)\n    this.html.clearHTML(balise.title)\n\n    this.html.showText(balise.task, \"Reavel of Notation\");\n\n    let notes: string[] = [];\n    let evryboddySameMind = true;\n\n    let nameQuestion = \"\";\n    let nameCoffe = \"\";\n\n    this.html.addHtmlElement(\"ul\");\n\n    Object.keys(this.getNotes()).forEach(key => {\n      this.html.addHtmlElement(\"li\");\n      this.html.addText(key + \" : \" + this.getNote(key));\n      this.html.addHtmlElement(\"li\", undefined, undefined, true);\n      notes.push(this.getNote(key));\n\n      if (this.getNote(key) == \"?\") {\n        nameQuestion = key;\n      } else if (this.getNote(key) == \"cafe\") {\n        nameCoffe = key;\n      }\n\n      if (notes.includes(\"?\")) {\n        this.QuestionSelected(nameQuestion);\n        return;\n      } else if (notes.includes(\"cafe\")) {\n        this.CoffeeSelected(nameCoffe);\n        return;\n      }\n    });\n    if (notes.includes(\"?\")) {\n      return;\n    } else if (notes.includes(\"cafe\")) {\n      return;\n    }\n    this.html.addHtmlElement(\"ul\", undefined, undefined, true);\n    this.html.displayHTML(balise.stValue);\n\n    for (let i = 0; i  {\n      value++;\n      if (value == this.actualPlayerTurn) {\n        this.addNote(id, this.getPlayer(value));\n      }\n    });\n    this.actualPlayerTurn++;\n    this.lunchStage();\n  }\n\n  getPlayers(): { [p: number]: string } {\n    return this.game.getPlayers();\n  }\n\n  addNote(value: string, key: string): void {\n    this.game.addNote(value, key);\n  }\n\n  getNotes(): { [key: string]: string } {\n    return this.game.getNotes();\n  }\n\n  getNote(key: string): string {\n    return this.game.getNote(key);\n  }\n\n  sameMind(note: string) {\n    this.retry = false;\n    const balise = HtmlBalise.getInstance();\n\n    this.html.addHtmlElement(\"label\");\n    this.html.addText(\"Everyone is of the same opinion we can pass to the next function\");\n    this.html.addHtmlElement(\"label\", undefined, undefined, true);\n    this.html.displayHTML(balise.endMessage);\n\n    let value = 0;\n\n    Object.keys(this.getBacklogData()).forEach(key => {\n      value++;\n      if (value == this.getActualStage()) {\n        this.modifyBacklogData(key, parseInt(note))\n      }\n    })\n\n    balise.validateButton.style.display = 'block';\n    balise.validateButton.name = \"block\";\n  }\n\n  notSameMind() {\n    const balise = HtmlBalise.getInstance();\n\n    this.html.addText(\"You don't agree with each other. That's all right.\")\n    this.html.displayHTML(balise.endMessage);\n  }\n\n  modifyBacklogData(key: string, value: number): void {\n    this.game.modifyBacklogData(key, value);\n  }\n\n  isRetry(): boolean {\n    return this.retry;\n  }\n\n  setActualPlayerTurn(n: number): void {\n    this.actualPlayerTurn = n;\n  }\n\n  end(): void {\n    const balise = HtmlBalise.getInstance();\n\n    this.html.clearHTML(balise.stValue)\n    this.html.clearHTML(balise.endMessage)\n\n    this.html.showText(balise.title, \"Summary\");\n\n    this.html.addHtmlElement(\"ul\");\n\n    Object.keys(this.getBacklogData()).forEach(key => {\n      this.html.addHtmlElement(\"li\");\n      this.html.addText(key + \" : \" + this.getBacklogDataNote(key))\n      this.html.addHtmlElement(\"li\", undefined, undefined, true);\n    })\n\n    this.html.addHtmlElement(\"ul\", \"id\", undefined, true);\n    this.html.displayHTML(balise.stValue);\n\n    balise.validateButton.style.display = 'none';\n    balise.playerButton.style.display = 'none';\n    balise.finishButton.style.display = 'block';\n  }\n\n  getBacklogDataNote(key: string): number {\n    return this.game.getBacklogDataNote(key);\n  }\n\n  isDownload(): boolean {\n    return this.downloadJson;\n  }\n\n  creatAndDownloadJSON(): { [p: string]: any } {\n    let data = this.getBacklogData();\n    let players = this.getPlayers();\n\n    const jsonOutput: { [key: string]: any } = {\n      default: this.getDefaultValue(),\n      Backlog: {},\n      Players: {}\n    };\n\n    Object.keys(data).forEach((key, index) => {\n      const entry: { [key: string]: any } = {};\n\n      entry[key] = data[key];\n      entry['work'] = this.getActualStage() > index + 1;\n\n      jsonOutput['Backlog'][(index + 1).toString().padStart(2, '0')] = entry;\n    });\n\n    Object.keys(players).forEach((key, index) => {\n      jsonOutput['Players'][(index + 1).toString().padStart(2, '0')] = players[parseInt(key)];\n    });\n\n    return jsonOutput;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayerCardComponent.html":{"url":"components/PlayerCardComponent.html","title":"component - PlayerCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayerCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/player-card/player-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                player-card\n            \n\n\n\n            \n                styleUrls\n                ./player-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./player-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                i\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        i\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/player-card/player-card.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'player-card',\n  templateUrl: './player-card.component.html',\n  styleUrls: ['./player-card.component.scss']\n})\nexport class PlayerCardComponent {\n    @Input() i : number = 0;\n}\n\n    \n\n    \n        \n   Player {{i}} \n  \n\n\n    \n\n    \n                \n                    ./player-card.component.scss\n                \n                .card {\n  display: flex;\n  background-image: url(\"../../../assets/images/player-card-background.jpg\");\n  background-size: 50%;\n  flex-direction: column;\n  border-radius: 0.3rem;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.8rem;\n  border: 1px solid #e0e0e0;\n  transition: 0.8s;\n  overflow: hidden;\n  transition-duration: 0.3s;\n  width: 160px;\n\n  &:hover {\n    border: 1px solid #b0b0b0;\n    box-shadow: 0px 0px 15px rgba(0, 0, 0, 0.35);\n  }\n}\n\nh1 {\n  color: #fff;\n  text-shadow:\n    0 0 7px #fff,\n    0 0 10px #fff,\n    0 0 21px #fff,\n    0 0 42px #0fa,\n    0 0 82px #0fa,\n    0 0 92px #0fa,\n    0 0 102px #0fa,\n    0 0 151px #0fa;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.2em;\n}\n\ninput {\n  background: #001546;\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 0.5em;\n  border: 1px solid white;\n  border-radius: 0.3rem;\n  padding: 7px 0 7px 5px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Player {{i}}   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlayerCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponentComponent.html":{"url":"components/SettingsComponentComponent.html","title":"component - SettingsComponentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/settings-component/settings-component.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-component\n            \n\n\n\n            \n                styleUrls\n                ./settings-component.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-component.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                BacklogData\n                            \n                            \n                                    Protected\n                                    Readonly\n                                console\n                            \n                            \n                                Data\n                            \n                            \n                                mode\n                            \n                            \n                                playerMax\n                            \n                            \n                                playerNumber\n                            \n                            \n                                Players\n                            \n                            \n                                playersNb\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlayerName\n                            \n                            \n                                changeMod\n                            \n                            \n                                getSliderValue\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                sendData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: GameOptionServiceService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/settings-component/settings-component.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        GameOptionServiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlayerName\n                        \n                    \n                \n            \n            \n                \naddPlayerName(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMod\n                        \n                    \n                \n            \n            \n                \nchangeMod(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSliderValue\n                        \n                    \n                \n            \n            \n                \ngetSliderValue(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendData\n                        \n                    \n                \n            \n            \n                \nsendData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/settings-component/settings-component.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        BacklogData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Readonly\n                        console\n                        \n                    \n                \n            \n                \n                    \n                        Default value : console\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"strict\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerMax\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 2\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Players\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playersNb\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [1,2]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/settings-component/settings-component.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {GameOptionServiceService} from \"../../services/gameOptionService/game-option-service.service\";\n\n@Component({\n  selector: 'settings-component',\n  templateUrl: './settings-component.component.html',\n  styleUrls: ['./settings-component.component.scss']\n})\nexport class SettingsComponentComponent {\n  constructor(private dataService: GameOptionServiceService) {}\n\n  Data: { [Type: string]: string} = {}\n\n  BacklogData: string[] = [];\n\n  playerMax: number = 15;\n\n  mode = \"strict\";\n\n  playerNumber: number = 2;\n  Players: { [key: number]: string} = {}\n  playersNb: number[] = [1,2]\n\n  getSliderValue(event:any=0) {\n    this.playerNumber = event.target.value;\n    this.playersNb = []\n    for(let i = 1; i  0){\n      const placeholder = event.target.placeholder;\n      const match = placeholder.replace(/\\D/g, \"\");\n      const id = parseInt(match);\n      this.Players[id] = event.target.value;\n      console.log(this.Players);\n    }\n  }\n\n  changeMod(event: any = 0){\n    this.mode = event.target.value;\n    console.log(this.mode);\n  }\n\n  onFileSelected(event: any = 0){\n    const selectedFile = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      const fileContent = reader.result as string;\n      const jsonData = JSON.parse(fileContent);\n\n      // Extract names from JSON using keys\n      const namesArray: string[] = [];\n      for (const key in jsonData) {\n        if (jsonData.hasOwnProperty(key) && jsonData[key]?.name) {\n          namesArray.push(jsonData[key].name);\n        }\n      }\n      this.BacklogData = namesArray;\n      setTimeout(() => {\n        console.log(this.BacklogData);\n      }, 0);\n    };\n    reader.readAsText(selectedFile);\n  }\n\n  sendData(){\n    console.log(\"test\");\n    Object.keys(this.Players).forEach(key => {\n      const playerKey = parseInt(key, 10)\n      const strKey = \"Player\" + playerKey;\n      this.Data[strKey] = this.Players[playerKey];\n    });\n\n    this.Data[\"Mode\"] = this.mode;\n\n    this.BacklogData.forEach((item: string, index: number) => {\n      this.Data[\"Backlog\" + index] = item;\n    });\n\n    this.dataService.setData(this.Data);\n  }\n\n  protected readonly console = console;\n}\n\n    \n\n    \n        \n  \n    \n      \n         Numbers of Players \n        \n        {{ playerNumber }}\n      \n\n      \n        \n      \n    \n\n    \n      \n         Game mode\n        \n          \n            \n            Strict\n            \n            \n          \n          \n            \n            Absolute Majority \n            \n            \n          \n          \n            \n            Average\n            \n            \n          \n        \n      \n    \n  \n\n  \n    \n      \n      Chose a json file\n    \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./settings-component.component.scss\n                \n                form {\n  color: white;\n  font-family: 'Press Start 2P', serif;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.form_top {\n  display: flex;\n  flex-direction: row;\n  height: 82%;\n  width: 100%;\n}\n\n.top_left {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 80%;\n}\n\n.top_right {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n  width: 20%;\n}\n\n.left_number-players {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  height: 20%;\n}\n\n.left_players {\n  display: flex;\n  width: 100%;\n  height: 80%;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.right_style-game {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  & h3 {\n    font-family: 'Press Start 2P', serif;\n    font-size: 1.4em;\n    margin: 0;\n  }\n}\n\n.bottom_input-json {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  & input {\n    color: white;\n    font-family: 'Press Start 2P', serif;\n  }\n}\n\n\n.form_bottom {\n  display: flex;\n  width: 100%;\n  height: 25%;\n  margin-top: 15px;\n  justify-content: space-evenly;\n  align-items: center;\n}\n\n\nul {\n  list-style-type: none;\n}\n\nli {\n  position: relative;\n  padding: 10px 10px 10px 40px;\n  height: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n\n  &:active {\n    color: #3351ff !important;\n  }\n}\n\n.style-game_label:before {\n  content: \"\";\n  width: 15px;\n  height: 15px;\n  background: #fff;\n  position: absolute;\n  left: 7px;\n  top: calc(50% - 13px);\n  box-sizing: border-box;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"] {\n  opacity: 0;\n  -webkit-appearance: none;\n  display: inline-block;\n  vertical-align: middle;\n  z-index: 100;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 30px;\n  position: absolute;\n  left: 0;\n  top: calc(50% - 15px);\n  cursor: pointer;\n}\n\n.circle {\n  position: relative;\n  width: 25px;\n  height: 25px;\n  left: -3px;\n  top: 2px;\n  border: 5px solid #fff;\n  opacity: 0;\n  border-radius: 50%;\n}\n\ninput[type=\"radio\"]:checked ~ .circle {\n  position: absolute;\n  opacity: 1;\n  animation-name: explode;\n  animation-duration: 0.350s;\n}\n\n@keyframes explode {\n  0% {\n    opacity: 0;\n    transform: scale(4);\n  }\n  60% {\n    opacity: 1;\n    transform: scale(0.5);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n\n\n.bottom_input-json {\n  position: relative;\n  display: inline-block;\n\n  & label {\n    display: inline-block;\n    background-color: #1b35d3;\n    color: #fff;\n    padding: 10px 15px;\n    font-size: 0.8em;\n    cursor: pointer;\n    border-radius: 5px;\n    border: 0.5px solid #e9e9ea;\n\n    &:hover {\n      background-color: #1125a4;\n    }\n\n    &:active {\n      transform: scale(0.9);\n    }\n  }\n}\n\ninput[type=\"file\"] {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  cursor: pointer;\n  z-index: -1;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Numbers of Players                 {{ playerNumber }}                                                 Game mode                                          Strict                                                                    Absolute Majority                                                                     Average                                                                        Chose a json file                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StartButtonComponent.html":{"url":"components/StartButtonComponent.html","title":"component - StartButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StartButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/start-button/start-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                start-button\n            \n\n\n\n            \n                styleUrls\n                ./start-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./start-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                captionBackground\n                            \n                            \n                                captionColor\n                            \n                            \n                                link\n                            \n                            \n                                name\n                            \n                            \n                                pushableBackground\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        captionBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:18\n                            \n                        \n                \n                    \n                        La variable qui permet de changer la couleur de fond d'un bouton de type \nlorsqu'on l'appelle dans un autre composant.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        captionColor\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        link\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pushableBackground\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:13\n                            \n                        \n                \n                    \n                        La variable qui permet de changer la couleur en dessous d'un bouton de type \nlorsqu'on l'appelle dans un autre composant.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/start-button/start-button.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClick\n                        \n                    \n                \n            \n            \n                \nonButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/start-button/start-button.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output} from '@angular/core';\n\n@Component({\n  selector: 'start-button',\n  templateUrl: './start-button.component.html',\n  styleUrls: ['./start-button.component.scss']\n})\nexport class StartButtonComponent {\n  /**\n   * La variable qui permet de changer la couleur en dessous d'un bouton de type \n   * lorsqu'on l'appelle dans un autre composant.\n   */\n  @Input() pushableBackground: string = '';\n  /**\n   * La variable qui permet de changer la couleur de fond d'un bouton de type \n   * lorsqu'on l'appelle dans un autre composant.\n   */\n  @Input() captionBackground: string = '';\n  @Input() captionColor: string = '';\n  @Input() name: string = '';\n  @Input() link: string = '';\n\n  @Output() buttonClicked = new EventEmitter();\n\n\n  onButtonClick() {\n    this.buttonClicked.emit();\n  }\n}\n\n    \n\n    \n        \n   {{ name }} \n\n\n    \n\n    \n                \n                    ./start-button.component.scss\n                \n                .pushable_button {\n  border-radius: 12px;\n  border: none;\n  padding: 0;\n  cursor: pointer;\n  outline-offset: 4px;\n}\n\n.caption_button {\n  display: block;\n  padding: 20px 50px;\n  border-radius: 12px;\n  border: 3px solid white;\n  font-family: 'Press Start 2P', serif;\n  font-size: 1.7rem;\n  text-shadow: 1px 1px 2px #000000;\n  transform: translateY(-6px);\n}\n\n.caption_button:hover {\n  filter: brightness(90%);\n  color: #c7c7c7 !important;\n}\n\n\n.pushable_button:active .caption_button {\n  transform: translateY(-2px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{ name }} '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StartButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrictDecorator.html":{"url":"classes/StrictDecorator.html","title":"class - StrictDecorator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrictDecorator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classes/decorateur/StrictDecorator.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            ModeDecorator\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actualPlayerTurn\n                            \n                            \n                                downloadJson\n                            \n                            \n                                    Protected\n                                game\n                            \n                            \n                                    Protected\n                                html\n                            \n                            \n                                retry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                creatAndDownloadJSON\n                            \n                            \n                                    \n                                notSameMind\n                            \n                            \n                                addNote\n                            \n                            \n                                chooseDefaultValue\n                            \n                            \n                                CoffeeSelected\n                            \n                            \n                                end\n                            \n                            \n                                getActualStage\n                            \n                            \n                                getBacklogData\n                            \n                            \n                                getBacklogDataNote\n                            \n                            \n                                getDefaultValue\n                            \n                            \n                                getNote\n                            \n                            \n                                getNotes\n                            \n                            \n                                getPlayer\n                            \n                            \n                                getPlayerNumber\n                            \n                            \n                                getPlayers\n                            \n                            \n                                isDownload\n                            \n                            \n                                isRetry\n                            \n                            \n                                lunchStage\n                            \n                            \n                                modifyBacklogData\n                            \n                            \n                                nextStage\n                            \n                            \n                                playerPushButton\n                            \n                            \n                                QuestionSelected\n                            \n                            \n                                reavelNote\n                            \n                            \n                                sameMind\n                            \n                            \n                                setActualPlayerTurn\n                            \n                            \n                                setBacklogData\n                            \n                            \n                                setDefaultValue\n                            \n                            \n                                setPlayers\n                            \n                            \n                                setupDefaultValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        actualPlayerTurn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadJson\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game\n\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        html\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HtmlDisplay\n\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        retry\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                Inherited from         ModeDecorator\n\n                            \n                        \n                    \n                        \n                                Defined in         ModeDecorator:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        creatAndDownloadJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    creatAndDownloadJSON()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:44\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notSameMind\n                        \n                    \n                \n            \n            \n                \n                        \n                    notSameMind()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:6\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addNote\n                        \n                    \n                \n            \n            \n                \naddNote(value: string, key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:222\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chooseDefaultValue\n                        \n                    \n                \n            \n            \n                \nchooseDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:28\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CoffeeSelected\n                        \n                    \n                \n            \n            \n                \nCoffeeSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:164\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end\n                        \n                    \n                \n            \n            \n                \nend()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:275\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActualStage\n                        \n                    \n                \n            \n            \n                \ngetActualStage()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:186\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogData\n                        \n                    \n                \n            \n            \n                \ngetBacklogData()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:202\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBacklogDataNote\n                        \n                    \n                \n            \n            \n                \ngetBacklogDataNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:299\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDefaultValue\n                        \n                    \n                \n            \n            \n                \ngetDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:198\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNote\n                        \n                    \n                \n            \n            \n                \ngetNote(key: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:230\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNotes\n                        \n                    \n                \n            \n            \n                \ngetNotes()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:226\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayer\n                        \n                    \n                \n            \n            \n                \ngetPlayer(key: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:194\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerNumber\n                        \n                    \n                \n            \n            \n                \ngetPlayerNumber()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:190\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayers\n                        \n                    \n                \n            \n            \n                \ngetPlayers()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:218\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDownload\n                        \n                    \n                \n            \n            \n                \nisDownload()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:303\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRetry\n                        \n                    \n                \n            \n            \n                \nisRetry()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:267\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lunchStage\n                        \n                    \n                \n            \n            \n                \nlunchStage()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:49\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        modifyBacklogData\n                        \n                    \n                \n            \n            \n                \nmodifyBacklogData(key: string, value: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:263\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextStage\n                        \n                    \n                \n            \n            \n                \nnextStage()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:181\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerPushButton\n                        \n                    \n                \n            \n            \n                \nplayerPushButton(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:206\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionSelected\n                        \n                    \n                \n            \n            \n                \nQuestionSelected(playerName: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:148\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reavelNote\n                        \n                    \n                \n            \n            \n                \nreavelNote()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:93\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sameMind\n                        \n                    \n                \n            \n            \n                \nsameMind(note: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:234\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                note\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setActualPlayerTurn\n                        \n                    \n                \n            \n            \n                \nsetActualPlayerTurn(n: number)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:271\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                n\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setBacklogData\n                        \n                    \n                \n            \n            \n                \nsetBacklogData(BacklogData: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                BacklogData\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetDefaultValue(value: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:41\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayers\n                        \n                    \n                \n            \n            \n                \nsetPlayers(players: literal type)\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:20\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                players\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDefaultValue\n                        \n                    \n                \n            \n            \n                \nsetupDefaultValue()\n                \n            \n\n\n                    \n                        \n                            Inherited from         ModeDecorator\n\n                        \n                    \n                    \n                        \n                                Defined in         ModeDecorator:37\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {ModeDecorator} from \"./ModeDecorator\";\nimport {HtmlBalise} from \"../singleton/htmlBalise\";\n\nexport class StrictDecorator extends ModeDecorator{\n\n  override notSameMind() {\n    super.notSameMind();\n    const balise = HtmlBalise.getInstance();\n\n    let max = 0;\n    let maxPlayer = \";\"\n\n    let min = 1000;\n    let minPlayer = \"\";\n\n    Object.keys(this.getNotes()).forEach(key => {\n      if(parseInt(this.getNote(key)) > max){\n        max = parseInt(this.getNote(key));\n        maxPlayer = key;\n      }\n      if(parseInt(this.getNote(key)) \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TitleComponent.html":{"url":"components/TitleComponent.html","title":"component - TitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/title/title.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                pp-title\n            \n\n\n\n            \n                styleUrls\n                ./title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pp-title',\n  templateUrl: './title.component.html',\n  styleUrls: ['./title.component.scss']\n})\nexport class TitleComponent {\n\n}\n\n    \n\n    \n        \n  \n    PLANNING\n    PLANNING\n  \n  POKER\n\n\n    \n\n    \n                \n                    ./title.component.scss\n                \n                @import url('https://fonts.googleapis.com/css2?family=Mr+Dafoe&display=swap');\n@import url('https://fonts.googleapis.com/css2?family=Exo:wght@900&display=swap');\n\nh1 {\n  position: relative;\n  font-family: 'Exo', serif;\n  font-size: 11em;\n  margin: 0;\n  transform: skew(-15deg);\n  letter-spacing: 0.03em;\n\n  span:first-child {\n    display: block;\n    text-shadow: 0 0 0.1em #8ba2d0, 0 0 0.2em black, 0 0 5em #165ff3;\n    -webkit-text-stroke: 0.06em rgba(black, 0.5);\n  }\n\n  span:last-child {\n    position: absolute;\n    left: 0;\n    top: 0;\n    background-image: linear-gradient(#032d50 25%, #00a1ef 35%, white 50%, #20125f 50%, #8313e7 55%, #ff61af 75%);\n    -webkit-text-stroke: 0.01em #94a0b9;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n}\n\nh2 {\n  font-family: 'Mr Dafoe', serif;\n  font-size: 5.5em;\n  margin-left: 3em;\n  color: white;\n  text-shadow: 0 0 0.05em #fff, 0 0 0.2em #281775, 0 0 0.3em #20125f;\n  transform: rotate(-7deg);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      PLANNING    PLANNING    POKER'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'GameComponentComponent', 'selector': 'game-component'},{'name': 'InformationButtonComponent', 'selector': 'information-button'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'PlayerCardComponent', 'selector': 'player-card'},{'name': 'SettingsComponentComponent', 'selector': 'settings-component'},{'name': 'StartButtonComponent', 'selector': 'start-button'},{'name': 'TitleComponent', 'selector': 'pp-title'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/Game.ts\n            \n            interface\n            Game\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/GameConcret.ts\n            \n            class\n            GameConcret\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/ModeDecorator.ts\n            \n            class\n            ModeDecorator\n            \n                0 %\n                (0/36)\n            \n        \n        \n            \n                \n                src/app/classes/decorateur/StrictDecorator.ts\n            \n            class\n            StrictDecorator\n            \n                0 %\n                (0/35)\n            \n        \n        \n            \n                \n                src/app/classes/facade/HtmlDisplay.ts\n            \n            class\n            HtmlDisplay\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/classes/singleton/htmlBalise.ts\n            \n            class\n            HtmlBalise\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/game-component/game-component.component.ts\n            \n            component\n            GameComponentComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/information-button/information-button.component.ts\n            \n            component\n            InformationButtonComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/player-card/player-card.component.ts\n            \n            component\n            PlayerCardComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/components/settings-component/settings-component.component.ts\n            \n            component\n            SettingsComponentComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/components/start-button/start-button.component.ts\n            \n            component\n            StartButtonComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/components/title/title.component.ts\n            \n            component\n            TitleComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/card.ts\n            \n            interface\n            Card\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/gameOptionService/game-option-service.service.ts\n            \n            injectable\n            GameOptionServiceService\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.12\n        \n            @angular/cdk : ^16.2.12\n        \n            @angular/common : ^16.2.12\n        \n            @angular/compiler : ^16.2.12\n        \n            @angular/core : ^16.2.12\n        \n            @angular/forms : ^16.2.12\n        \n            @angular/material : ^16.2.12\n        \n            @angular/platform-browser : ^16.2.12\n        \n            @angular/platform-browser-dynamic : ^16.2.12\n        \n            @angular/router : ^16.2.12\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            typeface-press-start-2p : ^1.1.13\n        \n            zone.js : ~0.13.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPlanningPokerPP\nThis project was generated with Angular CLI version 15.0.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nGameComponentComponent\n\nGameComponentComponent\n\nAppModule -->\n\nGameComponentComponent->AppModule\n\n\n\n\n\nInformationButtonComponent\n\nInformationButtonComponent\n\nAppModule -->\n\nInformationButtonComponent->AppModule\n\n\n\n\n\nMainMenuComponent\n\nMainMenuComponent\n\nAppModule -->\n\nMainMenuComponent->AppModule\n\n\n\n\n\nPlayerCardComponent\n\nPlayerCardComponent\n\nAppModule -->\n\nPlayerCardComponent->AppModule\n\n\n\n\n\nSettingsComponentComponent\n\nSettingsComponentComponent\n\nAppModule -->\n\nSettingsComponentComponent->AppModule\n\n\n\n\n\nStartButtonComponent\n\nStartButtonComponent\n\nAppModule -->\n\nStartButtonComponent->AppModule\n\n\n\n\n\nTitleComponent\n\nTitleComponent\n\nAppModule -->\n\nTitleComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nNgIf\n\nNgIf\n\nAppModule -->\n\nNgIf->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
